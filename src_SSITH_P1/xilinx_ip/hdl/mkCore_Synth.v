//
// Generated by Bluespec Compiler, version untagged-gad02e931 (build ad02e931)
//
// On Fri Jul 23 16:03:33 EEST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_cpu_reset_server_request_put  O     1 reg
// cpu_reset_server_response_get  O     1 reg
// RDY_cpu_reset_server_response_get  O     1 reg
// cpu_imem_master_awid           O     5 reg
// cpu_imem_master_awaddr         O    64 reg
// cpu_imem_master_awlen          O     8 reg
// cpu_imem_master_awsize         O     3 reg
// cpu_imem_master_awburst        O     2 reg
// cpu_imem_master_awlock         O     1 reg
// cpu_imem_master_awcache        O     4 reg
// cpu_imem_master_awprot         O     3 reg
// cpu_imem_master_awqos          O     4 reg
// cpu_imem_master_awregion       O     4 reg
// cpu_imem_master_awvalid        O     1 reg
// cpu_imem_master_wdata          O    64 reg
// cpu_imem_master_wstrb          O     8 reg
// cpu_imem_master_wlast          O     1 reg
// cpu_imem_master_wvalid         O     1 reg
// cpu_imem_master_bready         O     1 reg
// cpu_imem_master_arid           O     5 reg
// cpu_imem_master_araddr         O    64 reg
// cpu_imem_master_arlen          O     8 reg
// cpu_imem_master_arsize         O     3 reg
// cpu_imem_master_arburst        O     2 reg
// cpu_imem_master_arlock         O     1 reg
// cpu_imem_master_arcache        O     4 reg
// cpu_imem_master_arprot         O     3 reg
// cpu_imem_master_arqos          O     4 reg
// cpu_imem_master_arregion       O     4 reg
// cpu_imem_master_arvalid        O     1 reg
// cpu_imem_master_rready         O     1 reg
// cpu_dmem_master_awid           O     6
// cpu_dmem_master_awaddr         O    64
// cpu_dmem_master_awlen          O     8
// cpu_dmem_master_awsize         O     3
// cpu_dmem_master_awburst        O     2
// cpu_dmem_master_awlock         O     1
// cpu_dmem_master_awcache        O     4
// cpu_dmem_master_awprot         O     3
// cpu_dmem_master_awqos          O     4
// cpu_dmem_master_awregion       O     4
// cpu_dmem_master_awvalid        O     1
// cpu_dmem_master_wdata          O    64
// cpu_dmem_master_wstrb          O     8
// cpu_dmem_master_wlast          O     1
// cpu_dmem_master_wvalid         O     1
// cpu_dmem_master_bready         O     1
// cpu_dmem_master_arid           O     6
// cpu_dmem_master_araddr         O    64
// cpu_dmem_master_arlen          O     8
// cpu_dmem_master_arsize         O     3
// cpu_dmem_master_arburst        O     2
// cpu_dmem_master_arlock         O     1
// cpu_dmem_master_arcache        O     4
// cpu_dmem_master_arprot         O     3
// cpu_dmem_master_arqos          O     4
// cpu_dmem_master_arregion       O     4
// cpu_dmem_master_arvalid        O     1
// cpu_dmem_master_rready         O     1
// RDY_dm_dmi_read_addr           O     1
// dm_dmi_read_data               O    32
// RDY_dm_dmi_read_data           O     1
// RDY_dm_dmi_write               O     1
// ndm_reset_client_request_get   O     1 reg
// RDY_ndm_reset_client_request_get  O     1 reg
// RDY_ndm_reset_client_response_put  O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4
// set_verbosity_logdelay         I    64 reg
// cpu_reset_server_request_put   I     1 reg
// cpu_imem_master_awready        I     1
// cpu_imem_master_wready         I     1
// cpu_imem_master_bvalid         I     1
// cpu_imem_master_bid            I     5 reg
// cpu_imem_master_bresp          I     2 reg
// cpu_imem_master_arready        I     1
// cpu_imem_master_rvalid         I     1
// cpu_imem_master_rid            I     5 reg
// cpu_imem_master_rdata          I    64 reg
// cpu_imem_master_rresp          I     2 reg
// cpu_imem_master_rlast          I     1 reg
// cpu_dmem_master_awready        I     1
// cpu_dmem_master_wready         I     1
// cpu_dmem_master_bvalid         I     1
// cpu_dmem_master_bid            I     6
// cpu_dmem_master_bresp          I     2
// cpu_dmem_master_arready        I     1
// cpu_dmem_master_rvalid         I     1
// cpu_dmem_master_rid            I     6
// cpu_dmem_master_rdata          I    64
// cpu_dmem_master_rresp          I     2
// cpu_dmem_master_rlast          I     1
// core_external_interrupt_sources_0_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_1_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_2_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_3_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_4_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_5_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_6_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_7_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_8_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_9_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_10_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_11_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_12_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_13_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_14_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_15_m_interrupt_req_set_not_clear  I     1
// nmi_req_set_not_clear          I     1
// dm_dmi_read_addr_dm_addr       I     7 reg
// dm_dmi_write_dm_addr           I     7
// dm_dmi_write_dm_word           I    32
// ndm_reset_client_response_put  I     1 reg
// EN_set_verbosity               I     1
// EN_cpu_reset_server_request_put  I     1
// EN_dm_dmi_read_addr            I     1
// EN_dm_dmi_write                I     1
// EN_ndm_reset_client_response_put  I     1
// EN_cpu_reset_server_response_get  I     1
// EN_dm_dmi_read_data            I     1
// EN_ndm_reset_client_request_get  I     1
//
// Combinational paths from inputs to outputs:
//   EN_dm_dmi_read_data -> dm_dmi_read_data
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCore_Synth(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    set_verbosity_logdelay,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    cpu_reset_server_request_put,
		    EN_cpu_reset_server_request_put,
		    RDY_cpu_reset_server_request_put,

		    EN_cpu_reset_server_response_get,
		    cpu_reset_server_response_get,
		    RDY_cpu_reset_server_response_get,

		    cpu_imem_master_awid,

		    cpu_imem_master_awaddr,

		    cpu_imem_master_awlen,

		    cpu_imem_master_awsize,

		    cpu_imem_master_awburst,

		    cpu_imem_master_awlock,

		    cpu_imem_master_awcache,

		    cpu_imem_master_awprot,

		    cpu_imem_master_awqos,

		    cpu_imem_master_awregion,

		    cpu_imem_master_awvalid,

		    cpu_imem_master_awready,

		    cpu_imem_master_wdata,

		    cpu_imem_master_wstrb,

		    cpu_imem_master_wlast,

		    cpu_imem_master_wvalid,

		    cpu_imem_master_wready,

		    cpu_imem_master_bvalid,
		    cpu_imem_master_bid,
		    cpu_imem_master_bresp,

		    cpu_imem_master_bready,

		    cpu_imem_master_arid,

		    cpu_imem_master_araddr,

		    cpu_imem_master_arlen,

		    cpu_imem_master_arsize,

		    cpu_imem_master_arburst,

		    cpu_imem_master_arlock,

		    cpu_imem_master_arcache,

		    cpu_imem_master_arprot,

		    cpu_imem_master_arqos,

		    cpu_imem_master_arregion,

		    cpu_imem_master_arvalid,

		    cpu_imem_master_arready,

		    cpu_imem_master_rvalid,
		    cpu_imem_master_rid,
		    cpu_imem_master_rdata,
		    cpu_imem_master_rresp,
		    cpu_imem_master_rlast,

		    cpu_imem_master_rready,

		    cpu_dmem_master_awid,

		    cpu_dmem_master_awaddr,

		    cpu_dmem_master_awlen,

		    cpu_dmem_master_awsize,

		    cpu_dmem_master_awburst,

		    cpu_dmem_master_awlock,

		    cpu_dmem_master_awcache,

		    cpu_dmem_master_awprot,

		    cpu_dmem_master_awqos,

		    cpu_dmem_master_awregion,

		    cpu_dmem_master_awvalid,

		    cpu_dmem_master_awready,

		    cpu_dmem_master_wdata,

		    cpu_dmem_master_wstrb,

		    cpu_dmem_master_wlast,

		    cpu_dmem_master_wvalid,

		    cpu_dmem_master_wready,

		    cpu_dmem_master_bvalid,
		    cpu_dmem_master_bid,
		    cpu_dmem_master_bresp,

		    cpu_dmem_master_bready,

		    cpu_dmem_master_arid,

		    cpu_dmem_master_araddr,

		    cpu_dmem_master_arlen,

		    cpu_dmem_master_arsize,

		    cpu_dmem_master_arburst,

		    cpu_dmem_master_arlock,

		    cpu_dmem_master_arcache,

		    cpu_dmem_master_arprot,

		    cpu_dmem_master_arqos,

		    cpu_dmem_master_arregion,

		    cpu_dmem_master_arvalid,

		    cpu_dmem_master_arready,

		    cpu_dmem_master_rvalid,
		    cpu_dmem_master_rid,
		    cpu_dmem_master_rdata,
		    cpu_dmem_master_rresp,
		    cpu_dmem_master_rlast,

		    cpu_dmem_master_rready,

		    core_external_interrupt_sources_0_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_1_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_2_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_3_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_4_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_5_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_6_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_7_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_8_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_9_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_10_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_11_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_12_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_13_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_14_m_interrupt_req_set_not_clear,

		    core_external_interrupt_sources_15_m_interrupt_req_set_not_clear,

		    nmi_req_set_not_clear,

		    dm_dmi_read_addr_dm_addr,
		    EN_dm_dmi_read_addr,
		    RDY_dm_dmi_read_addr,

		    EN_dm_dmi_read_data,
		    dm_dmi_read_data,
		    RDY_dm_dmi_read_data,

		    dm_dmi_write_dm_addr,
		    dm_dmi_write_dm_word,
		    EN_dm_dmi_write,
		    RDY_dm_dmi_write,

		    EN_ndm_reset_client_request_get,
		    ndm_reset_client_request_get,
		    RDY_ndm_reset_client_request_get,

		    ndm_reset_client_response_put,
		    EN_ndm_reset_client_response_put,
		    RDY_ndm_reset_client_response_put);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  [63 : 0] set_verbosity_logdelay;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method cpu_reset_server_request_put
  input  cpu_reset_server_request_put;
  input  EN_cpu_reset_server_request_put;
  output RDY_cpu_reset_server_request_put;

  // actionvalue method cpu_reset_server_response_get
  input  EN_cpu_reset_server_response_get;
  output cpu_reset_server_response_get;
  output RDY_cpu_reset_server_response_get;

  // value method cpu_imem_master_aw_awid
  output [4 : 0] cpu_imem_master_awid;

  // value method cpu_imem_master_aw_awaddr
  output [63 : 0] cpu_imem_master_awaddr;

  // value method cpu_imem_master_aw_awlen
  output [7 : 0] cpu_imem_master_awlen;

  // value method cpu_imem_master_aw_awsize
  output [2 : 0] cpu_imem_master_awsize;

  // value method cpu_imem_master_aw_awburst
  output [1 : 0] cpu_imem_master_awburst;

  // value method cpu_imem_master_aw_awlock
  output cpu_imem_master_awlock;

  // value method cpu_imem_master_aw_awcache
  output [3 : 0] cpu_imem_master_awcache;

  // value method cpu_imem_master_aw_awprot
  output [2 : 0] cpu_imem_master_awprot;

  // value method cpu_imem_master_aw_awqos
  output [3 : 0] cpu_imem_master_awqos;

  // value method cpu_imem_master_aw_awregion
  output [3 : 0] cpu_imem_master_awregion;

  // value method cpu_imem_master_aw_awuser

  // value method cpu_imem_master_aw_awvalid
  output cpu_imem_master_awvalid;

  // action method cpu_imem_master_aw_awready
  input  cpu_imem_master_awready;

  // value method cpu_imem_master_w_wdata
  output [63 : 0] cpu_imem_master_wdata;

  // value method cpu_imem_master_w_wstrb
  output [7 : 0] cpu_imem_master_wstrb;

  // value method cpu_imem_master_w_wlast
  output cpu_imem_master_wlast;

  // value method cpu_imem_master_w_wuser

  // value method cpu_imem_master_w_wvalid
  output cpu_imem_master_wvalid;

  // action method cpu_imem_master_w_wready
  input  cpu_imem_master_wready;

  // action method cpu_imem_master_b_bflit
  input  cpu_imem_master_bvalid;
  input  [4 : 0] cpu_imem_master_bid;
  input  [1 : 0] cpu_imem_master_bresp;

  // value method cpu_imem_master_b_bready
  output cpu_imem_master_bready;

  // value method cpu_imem_master_ar_arid
  output [4 : 0] cpu_imem_master_arid;

  // value method cpu_imem_master_ar_araddr
  output [63 : 0] cpu_imem_master_araddr;

  // value method cpu_imem_master_ar_arlen
  output [7 : 0] cpu_imem_master_arlen;

  // value method cpu_imem_master_ar_arsize
  output [2 : 0] cpu_imem_master_arsize;

  // value method cpu_imem_master_ar_arburst
  output [1 : 0] cpu_imem_master_arburst;

  // value method cpu_imem_master_ar_arlock
  output cpu_imem_master_arlock;

  // value method cpu_imem_master_ar_arcache
  output [3 : 0] cpu_imem_master_arcache;

  // value method cpu_imem_master_ar_arprot
  output [2 : 0] cpu_imem_master_arprot;

  // value method cpu_imem_master_ar_arqos
  output [3 : 0] cpu_imem_master_arqos;

  // value method cpu_imem_master_ar_arregion
  output [3 : 0] cpu_imem_master_arregion;

  // value method cpu_imem_master_ar_aruser

  // value method cpu_imem_master_ar_arvalid
  output cpu_imem_master_arvalid;

  // action method cpu_imem_master_ar_arready
  input  cpu_imem_master_arready;

  // action method cpu_imem_master_r_rflit
  input  cpu_imem_master_rvalid;
  input  [4 : 0] cpu_imem_master_rid;
  input  [63 : 0] cpu_imem_master_rdata;
  input  [1 : 0] cpu_imem_master_rresp;
  input  cpu_imem_master_rlast;

  // value method cpu_imem_master_r_rready
  output cpu_imem_master_rready;

  // value method cpu_dmem_master_aw_awid
  output [5 : 0] cpu_dmem_master_awid;

  // value method cpu_dmem_master_aw_awaddr
  output [63 : 0] cpu_dmem_master_awaddr;

  // value method cpu_dmem_master_aw_awlen
  output [7 : 0] cpu_dmem_master_awlen;

  // value method cpu_dmem_master_aw_awsize
  output [2 : 0] cpu_dmem_master_awsize;

  // value method cpu_dmem_master_aw_awburst
  output [1 : 0] cpu_dmem_master_awburst;

  // value method cpu_dmem_master_aw_awlock
  output cpu_dmem_master_awlock;

  // value method cpu_dmem_master_aw_awcache
  output [3 : 0] cpu_dmem_master_awcache;

  // value method cpu_dmem_master_aw_awprot
  output [2 : 0] cpu_dmem_master_awprot;

  // value method cpu_dmem_master_aw_awqos
  output [3 : 0] cpu_dmem_master_awqos;

  // value method cpu_dmem_master_aw_awregion
  output [3 : 0] cpu_dmem_master_awregion;

  // value method cpu_dmem_master_aw_awuser

  // value method cpu_dmem_master_aw_awvalid
  output cpu_dmem_master_awvalid;

  // action method cpu_dmem_master_aw_awready
  input  cpu_dmem_master_awready;

  // value method cpu_dmem_master_w_wdata
  output [63 : 0] cpu_dmem_master_wdata;

  // value method cpu_dmem_master_w_wstrb
  output [7 : 0] cpu_dmem_master_wstrb;

  // value method cpu_dmem_master_w_wlast
  output cpu_dmem_master_wlast;

  // value method cpu_dmem_master_w_wuser

  // value method cpu_dmem_master_w_wvalid
  output cpu_dmem_master_wvalid;

  // action method cpu_dmem_master_w_wready
  input  cpu_dmem_master_wready;

  // action method cpu_dmem_master_b_bflit
  input  cpu_dmem_master_bvalid;
  input  [5 : 0] cpu_dmem_master_bid;
  input  [1 : 0] cpu_dmem_master_bresp;

  // value method cpu_dmem_master_b_bready
  output cpu_dmem_master_bready;

  // value method cpu_dmem_master_ar_arid
  output [5 : 0] cpu_dmem_master_arid;

  // value method cpu_dmem_master_ar_araddr
  output [63 : 0] cpu_dmem_master_araddr;

  // value method cpu_dmem_master_ar_arlen
  output [7 : 0] cpu_dmem_master_arlen;

  // value method cpu_dmem_master_ar_arsize
  output [2 : 0] cpu_dmem_master_arsize;

  // value method cpu_dmem_master_ar_arburst
  output [1 : 0] cpu_dmem_master_arburst;

  // value method cpu_dmem_master_ar_arlock
  output cpu_dmem_master_arlock;

  // value method cpu_dmem_master_ar_arcache
  output [3 : 0] cpu_dmem_master_arcache;

  // value method cpu_dmem_master_ar_arprot
  output [2 : 0] cpu_dmem_master_arprot;

  // value method cpu_dmem_master_ar_arqos
  output [3 : 0] cpu_dmem_master_arqos;

  // value method cpu_dmem_master_ar_arregion
  output [3 : 0] cpu_dmem_master_arregion;

  // value method cpu_dmem_master_ar_aruser

  // value method cpu_dmem_master_ar_arvalid
  output cpu_dmem_master_arvalid;

  // action method cpu_dmem_master_ar_arready
  input  cpu_dmem_master_arready;

  // action method cpu_dmem_master_r_rflit
  input  cpu_dmem_master_rvalid;
  input  [5 : 0] cpu_dmem_master_rid;
  input  [63 : 0] cpu_dmem_master_rdata;
  input  [1 : 0] cpu_dmem_master_rresp;
  input  cpu_dmem_master_rlast;

  // value method cpu_dmem_master_r_rready
  output cpu_dmem_master_rready;

  // action method core_external_interrupt_sources_0_m_interrupt_req
  input  core_external_interrupt_sources_0_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_1_m_interrupt_req
  input  core_external_interrupt_sources_1_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_2_m_interrupt_req
  input  core_external_interrupt_sources_2_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_3_m_interrupt_req
  input  core_external_interrupt_sources_3_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_4_m_interrupt_req
  input  core_external_interrupt_sources_4_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_5_m_interrupt_req
  input  core_external_interrupt_sources_5_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_6_m_interrupt_req
  input  core_external_interrupt_sources_6_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_7_m_interrupt_req
  input  core_external_interrupt_sources_7_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_8_m_interrupt_req
  input  core_external_interrupt_sources_8_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_9_m_interrupt_req
  input  core_external_interrupt_sources_9_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_10_m_interrupt_req
  input  core_external_interrupt_sources_10_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_11_m_interrupt_req
  input  core_external_interrupt_sources_11_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_12_m_interrupt_req
  input  core_external_interrupt_sources_12_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_13_m_interrupt_req
  input  core_external_interrupt_sources_13_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_14_m_interrupt_req
  input  core_external_interrupt_sources_14_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_15_m_interrupt_req
  input  core_external_interrupt_sources_15_m_interrupt_req_set_not_clear;

  // action method nmi_req
  input  nmi_req_set_not_clear;

  // action method dm_dmi_read_addr
  input  [6 : 0] dm_dmi_read_addr_dm_addr;
  input  EN_dm_dmi_read_addr;
  output RDY_dm_dmi_read_addr;

  // actionvalue method dm_dmi_read_data
  input  EN_dm_dmi_read_data;
  output [31 : 0] dm_dmi_read_data;
  output RDY_dm_dmi_read_data;

  // action method dm_dmi_write
  input  [6 : 0] dm_dmi_write_dm_addr;
  input  [31 : 0] dm_dmi_write_dm_word;
  input  EN_dm_dmi_write;
  output RDY_dm_dmi_write;

  // actionvalue method ndm_reset_client_request_get
  input  EN_ndm_reset_client_request_get;
  output ndm_reset_client_request_get;
  output RDY_ndm_reset_client_request_get;

  // action method ndm_reset_client_response_put
  input  ndm_reset_client_response_put;
  input  EN_ndm_reset_client_response_put;
  output RDY_ndm_reset_client_response_put;

  // signals for module outputs
  wire [63 : 0] cpu_dmem_master_araddr,
		cpu_dmem_master_awaddr,
		cpu_dmem_master_wdata,
		cpu_imem_master_araddr,
		cpu_imem_master_awaddr,
		cpu_imem_master_wdata;
  wire [31 : 0] dm_dmi_read_data;
  wire [7 : 0] cpu_dmem_master_arlen,
	       cpu_dmem_master_awlen,
	       cpu_dmem_master_wstrb,
	       cpu_imem_master_arlen,
	       cpu_imem_master_awlen,
	       cpu_imem_master_wstrb;
  wire [5 : 0] cpu_dmem_master_arid, cpu_dmem_master_awid;
  wire [4 : 0] cpu_imem_master_arid, cpu_imem_master_awid;
  wire [3 : 0] cpu_dmem_master_arcache,
	       cpu_dmem_master_arqos,
	       cpu_dmem_master_arregion,
	       cpu_dmem_master_awcache,
	       cpu_dmem_master_awqos,
	       cpu_dmem_master_awregion,
	       cpu_imem_master_arcache,
	       cpu_imem_master_arqos,
	       cpu_imem_master_arregion,
	       cpu_imem_master_awcache,
	       cpu_imem_master_awqos,
	       cpu_imem_master_awregion;
  wire [2 : 0] cpu_dmem_master_arprot,
	       cpu_dmem_master_arsize,
	       cpu_dmem_master_awprot,
	       cpu_dmem_master_awsize,
	       cpu_imem_master_arprot,
	       cpu_imem_master_arsize,
	       cpu_imem_master_awprot,
	       cpu_imem_master_awsize;
  wire [1 : 0] cpu_dmem_master_arburst,
	       cpu_dmem_master_awburst,
	       cpu_imem_master_arburst,
	       cpu_imem_master_awburst;
  wire RDY_cpu_reset_server_request_put,
       RDY_cpu_reset_server_response_get,
       RDY_dm_dmi_read_addr,
       RDY_dm_dmi_read_data,
       RDY_dm_dmi_write,
       RDY_ndm_reset_client_request_get,
       RDY_ndm_reset_client_response_put,
       RDY_set_verbosity,
       cpu_dmem_master_arlock,
       cpu_dmem_master_arvalid,
       cpu_dmem_master_awlock,
       cpu_dmem_master_awvalid,
       cpu_dmem_master_bready,
       cpu_dmem_master_rready,
       cpu_dmem_master_wlast,
       cpu_dmem_master_wvalid,
       cpu_imem_master_arlock,
       cpu_imem_master_arvalid,
       cpu_imem_master_awlock,
       cpu_imem_master_awvalid,
       cpu_imem_master_bready,
       cpu_imem_master_rready,
       cpu_imem_master_wlast,
       cpu_imem_master_wvalid,
       cpu_reset_server_response_get,
       ndm_reset_client_request_get;

  // inlined wires
  wire [72 : 0] cpu_dmem_master_synth_rSynth_snk_putWire$wget;
  wire [71 : 0] cpu_imem_master_synth_rSynth_snk_putWire$wget;
  wire [7 : 0] cpu_dmem_master_synth_bSynth_snk_putWire$wget;
  wire [6 : 0] cpu_imem_master_synth_bSynth_snk_putWire$wget;
  wire cpu_dmem_master_synth_arSynth_src_dropWire$whas,
       cpu_dmem_master_synth_awSynth_src_dropWire$whas,
       cpu_dmem_master_synth_bSynth_snk_putWire$whas,
       cpu_dmem_master_synth_rSynth_snk_putWire$whas,
       cpu_dmem_master_synth_wSynth_src_dropWire$whas,
       cpu_imem_master_synth_arSynth_src_dropWire$whas,
       cpu_imem_master_synth_awSynth_src_dropWire$whas,
       cpu_imem_master_synth_bSynth_snk_putWire$whas,
       cpu_imem_master_synth_rSynth_snk_putWire$whas,
       cpu_imem_master_synth_wSynth_src_dropWire$whas;

  // ports of submodule core
  wire [98 : 0] core$cpu_dmem_master_ar_peek, core$cpu_dmem_master_aw_peek;
  wire [97 : 0] core$cpu_imem_master_ar_peek, core$cpu_imem_master_aw_peek;
  wire [72 : 0] core$cpu_dmem_master_r_put_val,
		core$cpu_dmem_master_w_peek,
		core$cpu_imem_master_w_peek;
  wire [71 : 0] core$cpu_imem_master_r_put_val;
  wire [63 : 0] core$set_verbosity_logdelay;
  wire [31 : 0] core$dm_dmi_read_data, core$dm_dmi_write_dm_word;
  wire [7 : 0] core$cpu_dmem_master_b_put_val;
  wire [6 : 0] core$cpu_imem_master_b_put_val,
	       core$dm_dmi_read_addr_dm_addr,
	       core$dm_dmi_write_dm_addr;
  wire [3 : 0] core$set_verbosity_verbosity;
  wire core$EN_cpu_dmem_master_ar_drop,
       core$EN_cpu_dmem_master_aw_drop,
       core$EN_cpu_dmem_master_b_put,
       core$EN_cpu_dmem_master_r_put,
       core$EN_cpu_dmem_master_w_drop,
       core$EN_cpu_imem_master_ar_drop,
       core$EN_cpu_imem_master_aw_drop,
       core$EN_cpu_imem_master_b_put,
       core$EN_cpu_imem_master_r_put,
       core$EN_cpu_imem_master_w_drop,
       core$EN_cpu_reset_server_request_put,
       core$EN_cpu_reset_server_response_get,
       core$EN_dm_dmi_read_addr,
       core$EN_dm_dmi_read_data,
       core$EN_dm_dmi_write,
       core$EN_ndm_reset_client_request_get,
       core$EN_ndm_reset_client_response_put,
       core$EN_set_verbosity,
       core$RDY_cpu_dmem_master_ar_drop,
       core$RDY_cpu_dmem_master_ar_peek,
       core$RDY_cpu_dmem_master_aw_drop,
       core$RDY_cpu_dmem_master_aw_peek,
       core$RDY_cpu_dmem_master_b_put,
       core$RDY_cpu_dmem_master_r_put,
       core$RDY_cpu_dmem_master_w_drop,
       core$RDY_cpu_dmem_master_w_peek,
       core$RDY_cpu_imem_master_ar_drop,
       core$RDY_cpu_imem_master_ar_peek,
       core$RDY_cpu_imem_master_aw_drop,
       core$RDY_cpu_imem_master_aw_peek,
       core$RDY_cpu_imem_master_b_put,
       core$RDY_cpu_imem_master_r_put,
       core$RDY_cpu_imem_master_w_drop,
       core$RDY_cpu_imem_master_w_peek,
       core$RDY_cpu_reset_server_request_put,
       core$RDY_cpu_reset_server_response_get,
       core$RDY_dm_dmi_read_addr,
       core$RDY_dm_dmi_read_data,
       core$RDY_dm_dmi_write,
       core$RDY_ndm_reset_client_request_get,
       core$RDY_ndm_reset_client_response_put,
       core$core_external_interrupt_sources_0_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_10_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_11_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_12_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_13_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_14_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_15_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_1_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_2_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_3_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_4_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_5_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_6_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_7_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_8_m_interrupt_req_set_not_clear,
       core$core_external_interrupt_sources_9_m_interrupt_req_set_not_clear,
       core$cpu_dmem_master_ar_canPeek,
       core$cpu_dmem_master_aw_canPeek,
       core$cpu_dmem_master_b_canPut,
       core$cpu_dmem_master_r_canPut,
       core$cpu_dmem_master_w_canPeek,
       core$cpu_imem_master_ar_canPeek,
       core$cpu_imem_master_aw_canPeek,
       core$cpu_imem_master_b_canPut,
       core$cpu_imem_master_r_canPut,
       core$cpu_imem_master_w_canPeek,
       core$cpu_reset_server_request_put,
       core$cpu_reset_server_response_get,
       core$ndm_reset_client_request_get,
       core$ndm_reset_client_response_put,
       core$nmi_req_set_not_clear;

  // rule scheduling signals
  wire CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_doDrop,
       CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setCanPeek,
       CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setPeek,
       CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop,
       CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_doDrop,
       CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setCanPeek,
       CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setPeek,
       CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop,
       CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_doPut,
       CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_setCanPut,
       CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut,
       CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_doPut,
       CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_setCanPut,
       CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut,
       CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_doDrop,
       CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setCanPeek,
       CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setPeek,
       CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop,
       CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_doDrop,
       CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_setCanPeek,
       CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_setPeek,
       CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_warnDoDrop,
       CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_doDrop,
       CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_setCanPeek,
       CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_setPeek,
       CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_warnDoDrop,
       CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_doPut,
       CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_setCanPut,
       CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_warnDoPut,
       CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_doPut,
       CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_setCanPut,
       CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_warnDoPut,
       CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_doDrop,
       CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_setCanPeek,
       CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_setPeek,
       CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_warnDoDrop,
       CAN_FIRE_core_external_interrupt_sources_0_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_10_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_11_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_12_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_13_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_14_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_15_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_1_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_2_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_3_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_4_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_5_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_6_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_7_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_8_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_9_m_interrupt_req,
       CAN_FIRE_cpu_dmem_master_ar_arready,
       CAN_FIRE_cpu_dmem_master_aw_awready,
       CAN_FIRE_cpu_dmem_master_b_bflit,
       CAN_FIRE_cpu_dmem_master_r_rflit,
       CAN_FIRE_cpu_dmem_master_w_wready,
       CAN_FIRE_cpu_imem_master_ar_arready,
       CAN_FIRE_cpu_imem_master_aw_awready,
       CAN_FIRE_cpu_imem_master_b_bflit,
       CAN_FIRE_cpu_imem_master_r_rflit,
       CAN_FIRE_cpu_imem_master_w_wready,
       CAN_FIRE_cpu_reset_server_request_put,
       CAN_FIRE_cpu_reset_server_response_get,
       CAN_FIRE_dm_dmi_read_addr,
       CAN_FIRE_dm_dmi_read_data,
       CAN_FIRE_dm_dmi_write,
       CAN_FIRE_ndm_reset_client_request_get,
       CAN_FIRE_ndm_reset_client_response_put,
       CAN_FIRE_nmi_req,
       CAN_FIRE_set_verbosity,
       WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_doDrop,
       WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setCanPeek,
       WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setPeek,
       WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop,
       WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_doDrop,
       WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setCanPeek,
       WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setPeek,
       WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop,
       WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_doPut,
       WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_setCanPut,
       WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut,
       WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_doPut,
       WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_setCanPut,
       WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut,
       WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_doDrop,
       WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setCanPeek,
       WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setPeek,
       WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop,
       WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_doDrop,
       WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_setCanPeek,
       WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_setPeek,
       WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_warnDoDrop,
       WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_doDrop,
       WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_setCanPeek,
       WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_setPeek,
       WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_warnDoDrop,
       WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_doPut,
       WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_setCanPut,
       WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_warnDoPut,
       WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_doPut,
       WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_setCanPut,
       WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_warnDoPut,
       WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_doDrop,
       WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_setCanPeek,
       WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_setPeek,
       WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_warnDoDrop,
       WILL_FIRE_core_external_interrupt_sources_0_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_10_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_11_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_12_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_13_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_14_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_15_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_1_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_2_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_3_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_4_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_5_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_6_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_7_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_8_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_9_m_interrupt_req,
       WILL_FIRE_cpu_dmem_master_ar_arready,
       WILL_FIRE_cpu_dmem_master_aw_awready,
       WILL_FIRE_cpu_dmem_master_b_bflit,
       WILL_FIRE_cpu_dmem_master_r_rflit,
       WILL_FIRE_cpu_dmem_master_w_wready,
       WILL_FIRE_cpu_imem_master_ar_arready,
       WILL_FIRE_cpu_imem_master_aw_awready,
       WILL_FIRE_cpu_imem_master_b_bflit,
       WILL_FIRE_cpu_imem_master_r_rflit,
       WILL_FIRE_cpu_imem_master_w_wready,
       WILL_FIRE_cpu_reset_server_request_put,
       WILL_FIRE_cpu_reset_server_response_get,
       WILL_FIRE_dm_dmi_read_addr,
       WILL_FIRE_dm_dmi_read_data,
       WILL_FIRE_dm_dmi_write,
       WILL_FIRE_ndm_reset_client_request_get,
       WILL_FIRE_ndm_reset_client_response_put,
       WILL_FIRE_nmi_req,
       WILL_FIRE_set_verbosity;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method cpu_reset_server_request_put
  assign RDY_cpu_reset_server_request_put =
	     core$RDY_cpu_reset_server_request_put ;
  assign CAN_FIRE_cpu_reset_server_request_put =
	     core$RDY_cpu_reset_server_request_put ;
  assign WILL_FIRE_cpu_reset_server_request_put =
	     EN_cpu_reset_server_request_put ;

  // actionvalue method cpu_reset_server_response_get
  assign cpu_reset_server_response_get = core$cpu_reset_server_response_get ;
  assign RDY_cpu_reset_server_response_get =
	     core$RDY_cpu_reset_server_response_get ;
  assign CAN_FIRE_cpu_reset_server_response_get =
	     core$RDY_cpu_reset_server_response_get ;
  assign WILL_FIRE_cpu_reset_server_response_get =
	     EN_cpu_reset_server_response_get ;

  // value method cpu_imem_master_aw_awid
  assign cpu_imem_master_awid = core$cpu_imem_master_aw_peek[97:93] ;

  // value method cpu_imem_master_aw_awaddr
  assign cpu_imem_master_awaddr = core$cpu_imem_master_aw_peek[92:29] ;

  // value method cpu_imem_master_aw_awlen
  assign cpu_imem_master_awlen = core$cpu_imem_master_aw_peek[28:21] ;

  // value method cpu_imem_master_aw_awsize
  assign cpu_imem_master_awsize = core$cpu_imem_master_aw_peek[20:18] ;

  // value method cpu_imem_master_aw_awburst
  assign cpu_imem_master_awburst = core$cpu_imem_master_aw_peek[17:16] ;

  // value method cpu_imem_master_aw_awlock
  assign cpu_imem_master_awlock = core$cpu_imem_master_aw_peek[15] ;

  // value method cpu_imem_master_aw_awcache
  assign cpu_imem_master_awcache = core$cpu_imem_master_aw_peek[14:11] ;

  // value method cpu_imem_master_aw_awprot
  assign cpu_imem_master_awprot = core$cpu_imem_master_aw_peek[10:8] ;

  // value method cpu_imem_master_aw_awqos
  assign cpu_imem_master_awqos = core$cpu_imem_master_aw_peek[7:4] ;

  // value method cpu_imem_master_aw_awregion
  assign cpu_imem_master_awregion = core$cpu_imem_master_aw_peek[3:0] ;

  // value method cpu_imem_master_aw_awvalid
  assign cpu_imem_master_awvalid = core$cpu_imem_master_aw_canPeek ;

  // action method cpu_imem_master_aw_awready
  assign CAN_FIRE_cpu_imem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_cpu_imem_master_aw_awready = 1'd1 ;

  // value method cpu_imem_master_w_wdata
  assign cpu_imem_master_wdata = core$cpu_imem_master_w_peek[72:9] ;

  // value method cpu_imem_master_w_wstrb
  assign cpu_imem_master_wstrb = core$cpu_imem_master_w_peek[8:1] ;

  // value method cpu_imem_master_w_wlast
  assign cpu_imem_master_wlast = core$cpu_imem_master_w_peek[0] ;

  // value method cpu_imem_master_w_wvalid
  assign cpu_imem_master_wvalid = core$cpu_imem_master_w_canPeek ;

  // action method cpu_imem_master_w_wready
  assign CAN_FIRE_cpu_imem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_cpu_imem_master_w_wready = 1'd1 ;

  // action method cpu_imem_master_b_bflit
  assign CAN_FIRE_cpu_imem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_cpu_imem_master_b_bflit = 1'd1 ;

  // value method cpu_imem_master_b_bready
  assign cpu_imem_master_bready = core$cpu_imem_master_b_canPut ;

  // value method cpu_imem_master_ar_arid
  assign cpu_imem_master_arid = core$cpu_imem_master_ar_peek[97:93] ;

  // value method cpu_imem_master_ar_araddr
  assign cpu_imem_master_araddr = core$cpu_imem_master_ar_peek[92:29] ;

  // value method cpu_imem_master_ar_arlen
  assign cpu_imem_master_arlen = core$cpu_imem_master_ar_peek[28:21] ;

  // value method cpu_imem_master_ar_arsize
  assign cpu_imem_master_arsize = core$cpu_imem_master_ar_peek[20:18] ;

  // value method cpu_imem_master_ar_arburst
  assign cpu_imem_master_arburst = core$cpu_imem_master_ar_peek[17:16] ;

  // value method cpu_imem_master_ar_arlock
  assign cpu_imem_master_arlock = core$cpu_imem_master_ar_peek[15] ;

  // value method cpu_imem_master_ar_arcache
  assign cpu_imem_master_arcache = core$cpu_imem_master_ar_peek[14:11] ;

  // value method cpu_imem_master_ar_arprot
  assign cpu_imem_master_arprot = core$cpu_imem_master_ar_peek[10:8] ;

  // value method cpu_imem_master_ar_arqos
  assign cpu_imem_master_arqos = core$cpu_imem_master_ar_peek[7:4] ;

  // value method cpu_imem_master_ar_arregion
  assign cpu_imem_master_arregion = core$cpu_imem_master_ar_peek[3:0] ;

  // value method cpu_imem_master_ar_arvalid
  assign cpu_imem_master_arvalid = core$cpu_imem_master_ar_canPeek ;

  // action method cpu_imem_master_ar_arready
  assign CAN_FIRE_cpu_imem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_cpu_imem_master_ar_arready = 1'd1 ;

  // action method cpu_imem_master_r_rflit
  assign CAN_FIRE_cpu_imem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_cpu_imem_master_r_rflit = 1'd1 ;

  // value method cpu_imem_master_r_rready
  assign cpu_imem_master_rready = core$cpu_imem_master_r_canPut ;

  // value method cpu_dmem_master_aw_awid
  assign cpu_dmem_master_awid = core$cpu_dmem_master_aw_peek[98:93] ;

  // value method cpu_dmem_master_aw_awaddr
  assign cpu_dmem_master_awaddr = core$cpu_dmem_master_aw_peek[92:29] ;

  // value method cpu_dmem_master_aw_awlen
  assign cpu_dmem_master_awlen = core$cpu_dmem_master_aw_peek[28:21] ;

  // value method cpu_dmem_master_aw_awsize
  assign cpu_dmem_master_awsize = core$cpu_dmem_master_aw_peek[20:18] ;

  // value method cpu_dmem_master_aw_awburst
  assign cpu_dmem_master_awburst = core$cpu_dmem_master_aw_peek[17:16] ;

  // value method cpu_dmem_master_aw_awlock
  assign cpu_dmem_master_awlock = core$cpu_dmem_master_aw_peek[15] ;

  // value method cpu_dmem_master_aw_awcache
  assign cpu_dmem_master_awcache = core$cpu_dmem_master_aw_peek[14:11] ;

  // value method cpu_dmem_master_aw_awprot
  assign cpu_dmem_master_awprot = core$cpu_dmem_master_aw_peek[10:8] ;

  // value method cpu_dmem_master_aw_awqos
  assign cpu_dmem_master_awqos = core$cpu_dmem_master_aw_peek[7:4] ;

  // value method cpu_dmem_master_aw_awregion
  assign cpu_dmem_master_awregion = core$cpu_dmem_master_aw_peek[3:0] ;

  // value method cpu_dmem_master_aw_awvalid
  assign cpu_dmem_master_awvalid = core$cpu_dmem_master_aw_canPeek ;

  // action method cpu_dmem_master_aw_awready
  assign CAN_FIRE_cpu_dmem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_aw_awready = 1'd1 ;

  // value method cpu_dmem_master_w_wdata
  assign cpu_dmem_master_wdata = core$cpu_dmem_master_w_peek[72:9] ;

  // value method cpu_dmem_master_w_wstrb
  assign cpu_dmem_master_wstrb = core$cpu_dmem_master_w_peek[8:1] ;

  // value method cpu_dmem_master_w_wlast
  assign cpu_dmem_master_wlast = core$cpu_dmem_master_w_peek[0] ;

  // value method cpu_dmem_master_w_wvalid
  assign cpu_dmem_master_wvalid = core$cpu_dmem_master_w_canPeek ;

  // action method cpu_dmem_master_w_wready
  assign CAN_FIRE_cpu_dmem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_w_wready = 1'd1 ;

  // action method cpu_dmem_master_b_bflit
  assign CAN_FIRE_cpu_dmem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_b_bflit = 1'd1 ;

  // value method cpu_dmem_master_b_bready
  assign cpu_dmem_master_bready = core$cpu_dmem_master_b_canPut ;

  // value method cpu_dmem_master_ar_arid
  assign cpu_dmem_master_arid = core$cpu_dmem_master_ar_peek[98:93] ;

  // value method cpu_dmem_master_ar_araddr
  assign cpu_dmem_master_araddr = core$cpu_dmem_master_ar_peek[92:29] ;

  // value method cpu_dmem_master_ar_arlen
  assign cpu_dmem_master_arlen = core$cpu_dmem_master_ar_peek[28:21] ;

  // value method cpu_dmem_master_ar_arsize
  assign cpu_dmem_master_arsize = core$cpu_dmem_master_ar_peek[20:18] ;

  // value method cpu_dmem_master_ar_arburst
  assign cpu_dmem_master_arburst = core$cpu_dmem_master_ar_peek[17:16] ;

  // value method cpu_dmem_master_ar_arlock
  assign cpu_dmem_master_arlock = core$cpu_dmem_master_ar_peek[15] ;

  // value method cpu_dmem_master_ar_arcache
  assign cpu_dmem_master_arcache = core$cpu_dmem_master_ar_peek[14:11] ;

  // value method cpu_dmem_master_ar_arprot
  assign cpu_dmem_master_arprot = core$cpu_dmem_master_ar_peek[10:8] ;

  // value method cpu_dmem_master_ar_arqos
  assign cpu_dmem_master_arqos = core$cpu_dmem_master_ar_peek[7:4] ;

  // value method cpu_dmem_master_ar_arregion
  assign cpu_dmem_master_arregion = core$cpu_dmem_master_ar_peek[3:0] ;

  // value method cpu_dmem_master_ar_arvalid
  assign cpu_dmem_master_arvalid = core$cpu_dmem_master_ar_canPeek ;

  // action method cpu_dmem_master_ar_arready
  assign CAN_FIRE_cpu_dmem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_ar_arready = 1'd1 ;

  // action method cpu_dmem_master_r_rflit
  assign CAN_FIRE_cpu_dmem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_r_rflit = 1'd1 ;

  // value method cpu_dmem_master_r_rready
  assign cpu_dmem_master_rready = core$cpu_dmem_master_r_canPut ;

  // action method core_external_interrupt_sources_0_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_0_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_0_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_1_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_1_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_1_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_2_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_2_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_2_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_3_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_3_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_3_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_4_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_4_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_4_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_5_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_5_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_5_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_6_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_6_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_6_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_7_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_7_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_7_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_8_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_8_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_8_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_9_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_9_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_9_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_10_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_10_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_10_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_11_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_11_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_11_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_12_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_12_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_12_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_13_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_13_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_13_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_14_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_14_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_14_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_15_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_15_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_15_m_interrupt_req = 1'd1 ;

  // action method nmi_req
  assign CAN_FIRE_nmi_req = 1'd1 ;
  assign WILL_FIRE_nmi_req = 1'd1 ;

  // action method dm_dmi_read_addr
  assign RDY_dm_dmi_read_addr = core$RDY_dm_dmi_read_addr ;
  assign CAN_FIRE_dm_dmi_read_addr = core$RDY_dm_dmi_read_addr ;
  assign WILL_FIRE_dm_dmi_read_addr = EN_dm_dmi_read_addr ;

  // actionvalue method dm_dmi_read_data
  assign dm_dmi_read_data = core$dm_dmi_read_data ;
  assign RDY_dm_dmi_read_data = core$RDY_dm_dmi_read_data ;
  assign CAN_FIRE_dm_dmi_read_data = core$RDY_dm_dmi_read_data ;
  assign WILL_FIRE_dm_dmi_read_data = EN_dm_dmi_read_data ;

  // action method dm_dmi_write
  assign RDY_dm_dmi_write = core$RDY_dm_dmi_write ;
  assign CAN_FIRE_dm_dmi_write = core$RDY_dm_dmi_write ;
  assign WILL_FIRE_dm_dmi_write = EN_dm_dmi_write ;

  // actionvalue method ndm_reset_client_request_get
  assign ndm_reset_client_request_get = core$ndm_reset_client_request_get ;
  assign RDY_ndm_reset_client_request_get =
	     core$RDY_ndm_reset_client_request_get ;
  assign CAN_FIRE_ndm_reset_client_request_get =
	     core$RDY_ndm_reset_client_request_get ;
  assign WILL_FIRE_ndm_reset_client_request_get =
	     EN_ndm_reset_client_request_get ;

  // action method ndm_reset_client_response_put
  assign RDY_ndm_reset_client_response_put =
	     core$RDY_ndm_reset_client_response_put ;
  assign CAN_FIRE_ndm_reset_client_response_put =
	     core$RDY_ndm_reset_client_response_put ;
  assign WILL_FIRE_ndm_reset_client_response_put =
	     EN_ndm_reset_client_response_put ;

  // submodule core
  mkCore core(.CLK(CLK),
	      .RST_N(RST_N),
	      .core_external_interrupt_sources_0_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_0_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_10_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_10_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_11_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_11_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_12_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_12_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_13_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_13_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_14_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_14_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_15_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_15_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_1_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_1_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_2_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_2_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_3_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_3_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_4_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_4_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_5_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_5_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_6_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_6_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_7_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_7_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_8_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_8_m_interrupt_req_set_not_clear),
	      .core_external_interrupt_sources_9_m_interrupt_req_set_not_clear(core$core_external_interrupt_sources_9_m_interrupt_req_set_not_clear),
	      .cpu_dmem_master_b_put_val(core$cpu_dmem_master_b_put_val),
	      .cpu_dmem_master_r_put_val(core$cpu_dmem_master_r_put_val),
	      .cpu_imem_master_b_put_val(core$cpu_imem_master_b_put_val),
	      .cpu_imem_master_r_put_val(core$cpu_imem_master_r_put_val),
	      .cpu_reset_server_request_put(core$cpu_reset_server_request_put),
	      .dm_dmi_read_addr_dm_addr(core$dm_dmi_read_addr_dm_addr),
	      .dm_dmi_write_dm_addr(core$dm_dmi_write_dm_addr),
	      .dm_dmi_write_dm_word(core$dm_dmi_write_dm_word),
	      .ndm_reset_client_response_put(core$ndm_reset_client_response_put),
	      .nmi_req_set_not_clear(core$nmi_req_set_not_clear),
	      .set_verbosity_logdelay(core$set_verbosity_logdelay),
	      .set_verbosity_verbosity(core$set_verbosity_verbosity),
	      .EN_set_verbosity(core$EN_set_verbosity),
	      .EN_cpu_reset_server_request_put(core$EN_cpu_reset_server_request_put),
	      .EN_cpu_reset_server_response_get(core$EN_cpu_reset_server_response_get),
	      .EN_cpu_imem_master_aw_drop(core$EN_cpu_imem_master_aw_drop),
	      .EN_cpu_imem_master_w_drop(core$EN_cpu_imem_master_w_drop),
	      .EN_cpu_imem_master_b_put(core$EN_cpu_imem_master_b_put),
	      .EN_cpu_imem_master_ar_drop(core$EN_cpu_imem_master_ar_drop),
	      .EN_cpu_imem_master_r_put(core$EN_cpu_imem_master_r_put),
	      .EN_cpu_dmem_master_aw_drop(core$EN_cpu_dmem_master_aw_drop),
	      .EN_cpu_dmem_master_w_drop(core$EN_cpu_dmem_master_w_drop),
	      .EN_cpu_dmem_master_b_put(core$EN_cpu_dmem_master_b_put),
	      .EN_cpu_dmem_master_ar_drop(core$EN_cpu_dmem_master_ar_drop),
	      .EN_cpu_dmem_master_r_put(core$EN_cpu_dmem_master_r_put),
	      .EN_dm_dmi_read_addr(core$EN_dm_dmi_read_addr),
	      .EN_dm_dmi_read_data(core$EN_dm_dmi_read_data),
	      .EN_dm_dmi_write(core$EN_dm_dmi_write),
	      .EN_ndm_reset_client_request_get(core$EN_ndm_reset_client_request_get),
	      .EN_ndm_reset_client_response_put(core$EN_ndm_reset_client_response_put),
	      .RDY_set_verbosity(),
	      .RDY_cpu_reset_server_request_put(core$RDY_cpu_reset_server_request_put),
	      .cpu_reset_server_response_get(core$cpu_reset_server_response_get),
	      .RDY_cpu_reset_server_response_get(core$RDY_cpu_reset_server_response_get),
	      .cpu_imem_master_aw_canPeek(core$cpu_imem_master_aw_canPeek),
	      .cpu_imem_master_aw_peek(core$cpu_imem_master_aw_peek),
	      .RDY_cpu_imem_master_aw_peek(core$RDY_cpu_imem_master_aw_peek),
	      .RDY_cpu_imem_master_aw_drop(core$RDY_cpu_imem_master_aw_drop),
	      .cpu_imem_master_w_canPeek(core$cpu_imem_master_w_canPeek),
	      .cpu_imem_master_w_peek(core$cpu_imem_master_w_peek),
	      .RDY_cpu_imem_master_w_peek(core$RDY_cpu_imem_master_w_peek),
	      .RDY_cpu_imem_master_w_drop(core$RDY_cpu_imem_master_w_drop),
	      .cpu_imem_master_b_canPut(core$cpu_imem_master_b_canPut),
	      .RDY_cpu_imem_master_b_put(core$RDY_cpu_imem_master_b_put),
	      .cpu_imem_master_ar_canPeek(core$cpu_imem_master_ar_canPeek),
	      .cpu_imem_master_ar_peek(core$cpu_imem_master_ar_peek),
	      .RDY_cpu_imem_master_ar_peek(core$RDY_cpu_imem_master_ar_peek),
	      .RDY_cpu_imem_master_ar_drop(core$RDY_cpu_imem_master_ar_drop),
	      .cpu_imem_master_r_canPut(core$cpu_imem_master_r_canPut),
	      .RDY_cpu_imem_master_r_put(core$RDY_cpu_imem_master_r_put),
	      .cpu_dmem_master_aw_canPeek(core$cpu_dmem_master_aw_canPeek),
	      .cpu_dmem_master_aw_peek(core$cpu_dmem_master_aw_peek),
	      .RDY_cpu_dmem_master_aw_peek(core$RDY_cpu_dmem_master_aw_peek),
	      .RDY_cpu_dmem_master_aw_drop(core$RDY_cpu_dmem_master_aw_drop),
	      .cpu_dmem_master_w_canPeek(core$cpu_dmem_master_w_canPeek),
	      .cpu_dmem_master_w_peek(core$cpu_dmem_master_w_peek),
	      .RDY_cpu_dmem_master_w_peek(core$RDY_cpu_dmem_master_w_peek),
	      .RDY_cpu_dmem_master_w_drop(core$RDY_cpu_dmem_master_w_drop),
	      .cpu_dmem_master_b_canPut(core$cpu_dmem_master_b_canPut),
	      .RDY_cpu_dmem_master_b_put(core$RDY_cpu_dmem_master_b_put),
	      .cpu_dmem_master_ar_canPeek(core$cpu_dmem_master_ar_canPeek),
	      .cpu_dmem_master_ar_peek(core$cpu_dmem_master_ar_peek),
	      .RDY_cpu_dmem_master_ar_peek(core$RDY_cpu_dmem_master_ar_peek),
	      .RDY_cpu_dmem_master_ar_drop(core$RDY_cpu_dmem_master_ar_drop),
	      .cpu_dmem_master_r_canPut(core$cpu_dmem_master_r_canPut),
	      .RDY_cpu_dmem_master_r_put(core$RDY_cpu_dmem_master_r_put),
	      .RDY_dm_dmi_read_addr(core$RDY_dm_dmi_read_addr),
	      .dm_dmi_read_data(core$dm_dmi_read_data),
	      .RDY_dm_dmi_read_data(core$RDY_dm_dmi_read_data),
	      .RDY_dm_dmi_write(core$RDY_dm_dmi_write),
	      .ndm_reset_client_request_get(core$ndm_reset_client_request_get),
	      .RDY_ndm_reset_client_request_get(core$RDY_ndm_reset_client_request_get),
	      .RDY_ndm_reset_client_response_put(core$RDY_ndm_reset_client_response_put));

  // rule RL_cpu_imem_master_synth_awSynth_src_setCanPeek
  assign CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_setCanPeek = 1'd1 ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_setCanPeek = 1'd1 ;

  // rule RL_cpu_imem_master_synth_awSynth_src_setPeek
  assign CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_setPeek =
	     core$RDY_cpu_imem_master_aw_peek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_setPeek =
	     core$RDY_cpu_imem_master_aw_peek ;

  // rule RL_cpu_imem_master_synth_awSynth_src_warnDoDrop
  assign CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_warnDoDrop =
	     cpu_imem_master_synth_awSynth_src_dropWire$whas &&
	     !core$cpu_imem_master_aw_canPeek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_warnDoDrop =
	     CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_warnDoDrop ;

  // rule RL_cpu_imem_master_synth_awSynth_src_doDrop
  assign CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_doDrop =
	     core$RDY_cpu_imem_master_aw_drop &&
	     cpu_imem_master_synth_awSynth_src_dropWire$whas &&
	     core$cpu_imem_master_aw_canPeek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_doDrop =
	     CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_doDrop ;

  // rule RL_cpu_imem_master_synth_wSynth_src_setCanPeek
  assign CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_setCanPeek = 1'd1 ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_setCanPeek = 1'd1 ;

  // rule RL_cpu_imem_master_synth_wSynth_src_setPeek
  assign CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_setPeek =
	     core$RDY_cpu_imem_master_w_peek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_setPeek =
	     core$RDY_cpu_imem_master_w_peek ;

  // rule RL_cpu_imem_master_synth_wSynth_src_warnDoDrop
  assign CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_warnDoDrop =
	     cpu_imem_master_synth_wSynth_src_dropWire$whas &&
	     !core$cpu_imem_master_w_canPeek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_warnDoDrop =
	     CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_warnDoDrop ;

  // rule RL_cpu_imem_master_synth_wSynth_src_doDrop
  assign CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_doDrop =
	     core$RDY_cpu_imem_master_w_drop &&
	     cpu_imem_master_synth_wSynth_src_dropWire$whas &&
	     core$cpu_imem_master_w_canPeek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_doDrop =
	     CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_doDrop ;

  // rule RL_cpu_imem_master_synth_bSynth_snk_setCanPut
  assign CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_setCanPut = 1'd1 ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_setCanPut = 1'd1 ;

  // rule RL_cpu_imem_master_synth_bSynth_snk_warnDoPut
  assign CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_warnDoPut =
	     cpu_imem_master_synth_bSynth_snk_putWire$whas &&
	     !core$cpu_imem_master_b_canPut ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_warnDoPut =
	     CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_warnDoPut ;

  // rule RL_cpu_imem_master_synth_bSynth_snk_doPut
  assign CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_doPut =
	     core$RDY_cpu_imem_master_b_put &&
	     cpu_imem_master_synth_bSynth_snk_putWire$whas ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_doPut =
	     CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_doPut ;

  // rule RL_cpu_imem_master_synth_arSynth_src_setCanPeek
  assign CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_setCanPeek = 1'd1 ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_setCanPeek = 1'd1 ;

  // rule RL_cpu_imem_master_synth_arSynth_src_setPeek
  assign CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_setPeek =
	     core$RDY_cpu_imem_master_ar_peek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_setPeek =
	     core$RDY_cpu_imem_master_ar_peek ;

  // rule RL_cpu_imem_master_synth_arSynth_src_warnDoDrop
  assign CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_warnDoDrop =
	     cpu_imem_master_synth_arSynth_src_dropWire$whas &&
	     !core$cpu_imem_master_ar_canPeek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_warnDoDrop =
	     CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_warnDoDrop ;

  // rule RL_cpu_imem_master_synth_arSynth_src_doDrop
  assign CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_doDrop =
	     core$RDY_cpu_imem_master_ar_drop &&
	     cpu_imem_master_synth_arSynth_src_dropWire$whas &&
	     core$cpu_imem_master_ar_canPeek ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_doDrop =
	     CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_doDrop ;

  // rule RL_cpu_imem_master_synth_rSynth_snk_setCanPut
  assign CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_setCanPut = 1'd1 ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_setCanPut = 1'd1 ;

  // rule RL_cpu_imem_master_synth_rSynth_snk_warnDoPut
  assign CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_warnDoPut =
	     cpu_imem_master_synth_rSynth_snk_putWire$whas &&
	     !core$cpu_imem_master_r_canPut ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_warnDoPut =
	     CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_warnDoPut ;

  // rule RL_cpu_imem_master_synth_rSynth_snk_doPut
  assign CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_doPut =
	     core$RDY_cpu_imem_master_r_put &&
	     cpu_imem_master_synth_rSynth_snk_putWire$whas ;
  assign WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_doPut =
	     CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_doPut ;

  // rule RL_cpu_dmem_master_synth_awSynth_src_setCanPeek
  assign CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setCanPeek = 1'd1 ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setCanPeek = 1'd1 ;

  // rule RL_cpu_dmem_master_synth_awSynth_src_setPeek
  assign CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setPeek =
	     core$RDY_cpu_dmem_master_aw_peek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_setPeek =
	     core$RDY_cpu_dmem_master_aw_peek ;

  // rule RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop
  assign CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop =
	     cpu_dmem_master_synth_awSynth_src_dropWire$whas &&
	     !core$cpu_dmem_master_aw_canPeek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop ;

  // rule RL_cpu_dmem_master_synth_awSynth_src_doDrop
  assign CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_doDrop =
	     core$RDY_cpu_dmem_master_aw_drop &&
	     cpu_dmem_master_synth_awSynth_src_dropWire$whas &&
	     core$cpu_dmem_master_aw_canPeek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_doDrop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_doDrop ;

  // rule RL_cpu_dmem_master_synth_wSynth_src_setCanPeek
  assign CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setCanPeek = 1'd1 ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setCanPeek = 1'd1 ;

  // rule RL_cpu_dmem_master_synth_wSynth_src_setPeek
  assign CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setPeek =
	     core$RDY_cpu_dmem_master_w_peek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_setPeek =
	     core$RDY_cpu_dmem_master_w_peek ;

  // rule RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop
  assign CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop =
	     cpu_dmem_master_synth_wSynth_src_dropWire$whas &&
	     !core$cpu_dmem_master_w_canPeek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop ;

  // rule RL_cpu_dmem_master_synth_wSynth_src_doDrop
  assign CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_doDrop =
	     core$RDY_cpu_dmem_master_w_drop &&
	     cpu_dmem_master_synth_wSynth_src_dropWire$whas &&
	     core$cpu_dmem_master_w_canPeek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_doDrop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_doDrop ;

  // rule RL_cpu_dmem_master_synth_bSynth_snk_setCanPut
  assign CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_setCanPut = 1'd1 ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_setCanPut = 1'd1 ;

  // rule RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut
  assign CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut =
	     cpu_dmem_master_synth_bSynth_snk_putWire$whas &&
	     !core$cpu_dmem_master_b_canPut ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut =
	     CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut ;

  // rule RL_cpu_dmem_master_synth_bSynth_snk_doPut
  assign CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_doPut =
	     core$RDY_cpu_dmem_master_b_put &&
	     cpu_dmem_master_synth_bSynth_snk_putWire$whas ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_doPut =
	     CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_doPut ;

  // rule RL_cpu_dmem_master_synth_arSynth_src_setCanPeek
  assign CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setCanPeek = 1'd1 ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setCanPeek = 1'd1 ;

  // rule RL_cpu_dmem_master_synth_arSynth_src_setPeek
  assign CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setPeek =
	     core$RDY_cpu_dmem_master_ar_peek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_setPeek =
	     core$RDY_cpu_dmem_master_ar_peek ;

  // rule RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop
  assign CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop =
	     cpu_dmem_master_synth_arSynth_src_dropWire$whas &&
	     !core$cpu_dmem_master_ar_canPeek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop ;

  // rule RL_cpu_dmem_master_synth_arSynth_src_doDrop
  assign CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_doDrop =
	     core$RDY_cpu_dmem_master_ar_drop &&
	     cpu_dmem_master_synth_arSynth_src_dropWire$whas &&
	     core$cpu_dmem_master_ar_canPeek ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_doDrop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_doDrop ;

  // rule RL_cpu_dmem_master_synth_rSynth_snk_setCanPut
  assign CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_setCanPut = 1'd1 ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_setCanPut = 1'd1 ;

  // rule RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut
  assign CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut =
	     cpu_dmem_master_synth_rSynth_snk_putWire$whas &&
	     !core$cpu_dmem_master_r_canPut ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut =
	     CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut ;

  // rule RL_cpu_dmem_master_synth_rSynth_snk_doPut
  assign CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_doPut =
	     core$RDY_cpu_dmem_master_r_put &&
	     cpu_dmem_master_synth_rSynth_snk_putWire$whas ;
  assign WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_doPut =
	     CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_doPut ;

  // inlined wires
  assign cpu_imem_master_synth_bSynth_snk_putWire$wget =
	     { cpu_imem_master_bid, cpu_imem_master_bresp } ;
  assign cpu_imem_master_synth_bSynth_snk_putWire$whas =
	     cpu_imem_master_bvalid && core$cpu_imem_master_b_canPut ;
  assign cpu_imem_master_synth_rSynth_snk_putWire$wget =
	     { cpu_imem_master_rid,
	       cpu_imem_master_rdata,
	       cpu_imem_master_rresp,
	       cpu_imem_master_rlast } ;
  assign cpu_imem_master_synth_rSynth_snk_putWire$whas =
	     cpu_imem_master_rvalid && core$cpu_imem_master_r_canPut ;
  assign cpu_dmem_master_synth_bSynth_snk_putWire$wget =
	     { cpu_dmem_master_bid, cpu_dmem_master_bresp } ;
  assign cpu_dmem_master_synth_bSynth_snk_putWire$whas =
	     cpu_dmem_master_bvalid && core$cpu_dmem_master_b_canPut ;
  assign cpu_dmem_master_synth_rSynth_snk_putWire$wget =
	     { cpu_dmem_master_rid,
	       cpu_dmem_master_rdata,
	       cpu_dmem_master_rresp,
	       cpu_dmem_master_rlast } ;
  assign cpu_dmem_master_synth_rSynth_snk_putWire$whas =
	     cpu_dmem_master_rvalid && core$cpu_dmem_master_r_canPut ;
  assign cpu_imem_master_synth_awSynth_src_dropWire$whas =
	     core$cpu_imem_master_aw_canPeek && cpu_imem_master_awready ;
  assign cpu_imem_master_synth_wSynth_src_dropWire$whas =
	     core$cpu_imem_master_w_canPeek && cpu_imem_master_wready ;
  assign cpu_imem_master_synth_arSynth_src_dropWire$whas =
	     core$cpu_imem_master_ar_canPeek && cpu_imem_master_arready ;
  assign cpu_dmem_master_synth_awSynth_src_dropWire$whas =
	     core$cpu_dmem_master_aw_canPeek && cpu_dmem_master_awready ;
  assign cpu_dmem_master_synth_wSynth_src_dropWire$whas =
	     core$cpu_dmem_master_w_canPeek && cpu_dmem_master_wready ;
  assign cpu_dmem_master_synth_arSynth_src_dropWire$whas =
	     core$cpu_dmem_master_ar_canPeek && cpu_dmem_master_arready ;

  // submodule core
  assign core$core_external_interrupt_sources_0_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_0_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_10_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_10_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_11_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_11_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_12_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_12_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_13_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_13_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_14_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_14_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_15_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_15_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_1_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_1_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_2_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_2_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_3_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_3_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_4_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_4_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_5_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_5_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_6_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_6_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_7_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_7_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_8_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_8_m_interrupt_req_set_not_clear ;
  assign core$core_external_interrupt_sources_9_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_9_m_interrupt_req_set_not_clear ;
  assign core$cpu_dmem_master_b_put_val =
	     cpu_dmem_master_synth_bSynth_snk_putWire$wget ;
  assign core$cpu_dmem_master_r_put_val =
	     cpu_dmem_master_synth_rSynth_snk_putWire$wget ;
  assign core$cpu_imem_master_b_put_val =
	     cpu_imem_master_synth_bSynth_snk_putWire$wget ;
  assign core$cpu_imem_master_r_put_val =
	     cpu_imem_master_synth_rSynth_snk_putWire$wget ;
  assign core$cpu_reset_server_request_put = cpu_reset_server_request_put ;
  assign core$dm_dmi_read_addr_dm_addr = dm_dmi_read_addr_dm_addr ;
  assign core$dm_dmi_write_dm_addr = dm_dmi_write_dm_addr ;
  assign core$dm_dmi_write_dm_word = dm_dmi_write_dm_word ;
  assign core$ndm_reset_client_response_put = ndm_reset_client_response_put ;
  assign core$nmi_req_set_not_clear = nmi_req_set_not_clear ;
  assign core$set_verbosity_logdelay = set_verbosity_logdelay ;
  assign core$set_verbosity_verbosity = set_verbosity_verbosity ;
  assign core$EN_set_verbosity = EN_set_verbosity ;
  assign core$EN_cpu_reset_server_request_put =
	     EN_cpu_reset_server_request_put ;
  assign core$EN_cpu_reset_server_response_get =
	     EN_cpu_reset_server_response_get ;
  assign core$EN_cpu_imem_master_aw_drop =
	     CAN_FIRE_RL_cpu_imem_master_synth_awSynth_src_doDrop ;
  assign core$EN_cpu_imem_master_w_drop =
	     CAN_FIRE_RL_cpu_imem_master_synth_wSynth_src_doDrop ;
  assign core$EN_cpu_imem_master_b_put =
	     CAN_FIRE_RL_cpu_imem_master_synth_bSynth_snk_doPut ;
  assign core$EN_cpu_imem_master_ar_drop =
	     CAN_FIRE_RL_cpu_imem_master_synth_arSynth_src_doDrop ;
  assign core$EN_cpu_imem_master_r_put =
	     CAN_FIRE_RL_cpu_imem_master_synth_rSynth_snk_doPut ;
  assign core$EN_cpu_dmem_master_aw_drop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_awSynth_src_doDrop ;
  assign core$EN_cpu_dmem_master_w_drop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_wSynth_src_doDrop ;
  assign core$EN_cpu_dmem_master_b_put =
	     CAN_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_doPut ;
  assign core$EN_cpu_dmem_master_ar_drop =
	     CAN_FIRE_RL_cpu_dmem_master_synth_arSynth_src_doDrop ;
  assign core$EN_cpu_dmem_master_r_put =
	     CAN_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_doPut ;
  assign core$EN_dm_dmi_read_addr = EN_dm_dmi_read_addr ;
  assign core$EN_dm_dmi_read_data = EN_dm_dmi_read_data ;
  assign core$EN_dm_dmi_write = EN_dm_dmi_write ;
  assign core$EN_ndm_reset_client_request_get =
	     EN_ndm_reset_client_request_get ;
  assign core$EN_ndm_reset_client_response_put =
	     EN_ndm_reset_client_response_put ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_imem_master_synth_awSynth_src_warnDoDrop)
	$display("WARNING: %m - dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_imem_master_synth_wSynth_src_warnDoDrop)
	$display("WARNING: %m - dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_imem_master_synth_bSynth_snk_warnDoPut)
	$display("WARNING: %m - putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_imem_master_synth_arSynth_src_warnDoDrop)
	$display("WARNING: %m - dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_imem_master_synth_rSynth_snk_warnDoPut)
	$display("WARNING: %m - putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_dmem_master_synth_awSynth_src_warnDoDrop)
	$display("WARNING: %m - dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_dmem_master_synth_wSynth_src_warnDoDrop)
	$display("WARNING: %m - dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_dmem_master_synth_bSynth_snk_warnDoPut)
	$display("WARNING: %m - putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_dmem_master_synth_arSynth_src_warnDoDrop)
	$display("WARNING: %m - dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cpu_dmem_master_synth_rSynth_snk_warnDoPut)
	$display("WARNING: %m - putting into a Sink that can't be put into");
  end
  // synopsys translate_on
endmodule  // mkCore_Synth

