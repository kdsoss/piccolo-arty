//
// Generated by Bluespec Compiler, version untagged-gad02e931 (build ad02e931)
//
// On Fri Jul 23 15:57:54 EEST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// read_csr                       O    33
// read_csr_port2                 O    33
// read_scr                       O    82
// mav_read_csr                   O    33
// mav_csr_write                  O    65
// mav_scr_write                  O    81
// read_misa                      O    28 const
// read_mstatus                   O    32 reg
// read_ustatus                   O    32
// read_satp                      O    32
// csr_trap_actions               O   147
// RDY_csr_trap_actions           O     1 const
// csr_ret_actions                O   125
// RDY_csr_ret_actions            O     1 const
// read_csr_minstret              O    64 reg
// read_csr_mcycle                O    64 reg
// read_csr_mtime                 O    64 reg
// access_permitted_1             O     2
// access_permitted_2             O     2
// access_permitted_scr           O     2
// csr_counter_read_fault         O     1
// csr_mip_read                   O    32
// interrupt_pending              O     7
// wfi_resume                     O     1
// nmi_pending                    O     1 reg
// read_dpc                       O    32 reg
// RDY_read_dpc                   O     1 const
// RDY_write_dpc                  O     1 const
// dcsr_break_enters_debug        O     1
// RDY_dcsr_break_enters_debug    O     1 const
// read_dcsr_step                 O     1 reg
// RDY_read_dcsr_step             O     1 const
// RDY_debug                      O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// read_csr_csr_addr              I    12
// read_csr_port2_csr_addr        I    12
// read_scr_scr_addr              I     5
// mav_read_csr_csr_addr          I    12
// mav_csr_write_csr_addr         I    12
// mav_csr_write_word             I    32
// mav_scr_write_scr_addr         I     5
// mav_scr_write_cap              I    81
// csr_trap_actions_from_priv     I     2
// csr_trap_actions_pcc           I    91
// csr_trap_actions_nmi           I     1
// csr_trap_actions_interrupt     I     1
// csr_trap_actions_cheri_exc_code  I     5
// csr_trap_actions_cheri_exc_reg  I     6
// csr_trap_actions_exc_code      I     6
// csr_trap_actions_xtval         I    32
// csr_ret_actions_from_priv      I     2
// send_performance_events_evts   I  6144
// access_permitted_1_priv        I     2
// access_permitted_1_csr_addr    I    12
// access_permitted_1_read_not_write  I     1
// access_permitted_2_priv        I     2
// access_permitted_2_csr_addr    I    12
// access_permitted_2_read_not_write  I     1
// access_permitted_scr_priv      I     2
// access_permitted_scr_scr_addr  I     5
// access_permitted_scr_read_not_write  I     1 unused
// csr_counter_read_fault_priv    I     2
// csr_counter_read_fault_csr_addr  I    12
// m_external_interrupt_req_set_not_clear  I     1 reg
// s_external_interrupt_req_set_not_clear  I     1 reg
// timer_interrupt_req_set_not_clear  I     1 reg
// software_interrupt_req_set_not_clear  I     1 reg
// interrupt_pending_cur_priv     I     2
// nmi_req_set_not_clear          I     1
// write_dpc_pc                   I    32
// dcsr_break_enters_debug_cur_priv  I     2
// write_dcsr_cause_priv_cause    I     3
// write_dcsr_cause_priv_priv     I     2
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_csr_minstret_incr           I     1
// EN_write_dpc                   I     1
// EN_write_dcsr_cause_priv       I     1
// EN_debug                       I     1 unused
// EN_mav_read_csr                I     1 unused
// EN_mav_csr_write               I     1
// EN_mav_scr_write               I     1
// EN_csr_trap_actions            I     1
// EN_csr_ret_actions             I     1
//
// Combinational paths from inputs to outputs:
//   read_csr_csr_addr -> read_csr
//   read_csr_port2_csr_addr -> read_csr_port2
//   read_scr_scr_addr -> read_scr
//   (access_permitted_1_priv,
//    access_permitted_1_csr_addr,
//    access_permitted_1_read_not_write) -> access_permitted_1
//   (access_permitted_2_priv,
//    access_permitted_2_csr_addr,
//    access_permitted_2_read_not_write) -> access_permitted_2
//   (access_permitted_scr_priv,
//    access_permitted_scr_scr_addr) -> access_permitted_scr
//   (csr_counter_read_fault_priv,
//    csr_counter_read_fault_csr_addr) -> csr_counter_read_fault
//   interrupt_pending_cur_priv -> interrupt_pending
//   dcsr_break_enters_debug_cur_priv -> dcsr_break_enters_debug
//   mav_read_csr_csr_addr -> mav_read_csr
//   (mav_csr_write_csr_addr,
//    mav_csr_write_word,
//    EN_mav_csr_write) -> mav_csr_write
//   (mav_scr_write_scr_addr, mav_scr_write_cap) -> mav_scr_write
//   (csr_trap_actions_from_priv,
//    csr_trap_actions_nmi,
//    csr_trap_actions_interrupt,
//    csr_trap_actions_exc_code) -> csr_trap_actions
//   csr_ret_actions_from_priv -> csr_ret_actions
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCSR_RegFile(CLK,
		     RST_N,

		     EN_server_reset_request_put,
		     RDY_server_reset_request_put,

		     EN_server_reset_response_get,
		     RDY_server_reset_response_get,

		     read_csr_csr_addr,
		     read_csr,

		     read_csr_port2_csr_addr,
		     read_csr_port2,

		     read_scr_scr_addr,
		     read_scr,

		     mav_read_csr_csr_addr,
		     EN_mav_read_csr,
		     mav_read_csr,

		     mav_csr_write_csr_addr,
		     mav_csr_write_word,
		     EN_mav_csr_write,
		     mav_csr_write,

		     mav_scr_write_scr_addr,
		     mav_scr_write_cap,
		     EN_mav_scr_write,
		     mav_scr_write,

		     read_misa,

		     read_mstatus,

		     read_ustatus,

		     read_satp,

		     csr_trap_actions_from_priv,
		     csr_trap_actions_pcc,
		     csr_trap_actions_nmi,
		     csr_trap_actions_interrupt,
		     csr_trap_actions_cheri_exc_code,
		     csr_trap_actions_cheri_exc_reg,
		     csr_trap_actions_exc_code,
		     csr_trap_actions_xtval,
		     EN_csr_trap_actions,
		     csr_trap_actions,
		     RDY_csr_trap_actions,

		     csr_ret_actions_from_priv,
		     EN_csr_ret_actions,
		     csr_ret_actions,
		     RDY_csr_ret_actions,

		     read_csr_minstret,

		     EN_csr_minstret_incr,

		     read_csr_mcycle,

		     read_csr_mtime,

		     send_performance_events_evts,

		     access_permitted_1_priv,
		     access_permitted_1_csr_addr,
		     access_permitted_1_read_not_write,
		     access_permitted_1,

		     access_permitted_2_priv,
		     access_permitted_2_csr_addr,
		     access_permitted_2_read_not_write,
		     access_permitted_2,

		     access_permitted_scr_priv,
		     access_permitted_scr_scr_addr,
		     access_permitted_scr_read_not_write,
		     access_permitted_scr,

		     csr_counter_read_fault_priv,
		     csr_counter_read_fault_csr_addr,
		     csr_counter_read_fault,

		     csr_mip_read,

		     m_external_interrupt_req_set_not_clear,

		     s_external_interrupt_req_set_not_clear,

		     timer_interrupt_req_set_not_clear,

		     software_interrupt_req_set_not_clear,

		     interrupt_pending_cur_priv,
		     interrupt_pending,

		     wfi_resume,

		     nmi_req_set_not_clear,

		     nmi_pending,

		     read_dpc,
		     RDY_read_dpc,

		     write_dpc_pc,
		     EN_write_dpc,
		     RDY_write_dpc,

		     dcsr_break_enters_debug_cur_priv,
		     dcsr_break_enters_debug,
		     RDY_dcsr_break_enters_debug,

		     read_dcsr_step,
		     RDY_read_dcsr_step,

		     write_dcsr_cause_priv_cause,
		     write_dcsr_cause_priv_priv,
		     EN_write_dcsr_cause_priv,

		     EN_debug,
		     RDY_debug);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // value method read_csr
  input  [11 : 0] read_csr_csr_addr;
  output [32 : 0] read_csr;

  // value method read_csr_port2
  input  [11 : 0] read_csr_port2_csr_addr;
  output [32 : 0] read_csr_port2;

  // value method read_scr
  input  [4 : 0] read_scr_scr_addr;
  output [81 : 0] read_scr;

  // actionvalue method mav_read_csr
  input  [11 : 0] mav_read_csr_csr_addr;
  input  EN_mav_read_csr;
  output [32 : 0] mav_read_csr;

  // actionvalue method mav_csr_write
  input  [11 : 0] mav_csr_write_csr_addr;
  input  [31 : 0] mav_csr_write_word;
  input  EN_mav_csr_write;
  output [64 : 0] mav_csr_write;

  // actionvalue method mav_scr_write
  input  [4 : 0] mav_scr_write_scr_addr;
  input  [80 : 0] mav_scr_write_cap;
  input  EN_mav_scr_write;
  output [80 : 0] mav_scr_write;

  // value method read_misa
  output [27 : 0] read_misa;

  // value method read_mstatus
  output [31 : 0] read_mstatus;

  // value method read_ustatus
  output [31 : 0] read_ustatus;

  // value method read_satp
  output [31 : 0] read_satp;

  // actionvalue method csr_trap_actions
  input  [1 : 0] csr_trap_actions_from_priv;
  input  [90 : 0] csr_trap_actions_pcc;
  input  csr_trap_actions_nmi;
  input  csr_trap_actions_interrupt;
  input  [4 : 0] csr_trap_actions_cheri_exc_code;
  input  [5 : 0] csr_trap_actions_cheri_exc_reg;
  input  [5 : 0] csr_trap_actions_exc_code;
  input  [31 : 0] csr_trap_actions_xtval;
  input  EN_csr_trap_actions;
  output [146 : 0] csr_trap_actions;
  output RDY_csr_trap_actions;

  // actionvalue method csr_ret_actions
  input  [1 : 0] csr_ret_actions_from_priv;
  input  EN_csr_ret_actions;
  output [124 : 0] csr_ret_actions;
  output RDY_csr_ret_actions;

  // value method read_csr_minstret
  output [63 : 0] read_csr_minstret;

  // action method csr_minstret_incr
  input  EN_csr_minstret_incr;

  // value method read_csr_mcycle
  output [63 : 0] read_csr_mcycle;

  // value method read_csr_mtime
  output [63 : 0] read_csr_mtime;

  // action method send_performance_events
  input  [6143 : 0] send_performance_events_evts;

  // value method access_permitted_1
  input  [1 : 0] access_permitted_1_priv;
  input  [11 : 0] access_permitted_1_csr_addr;
  input  access_permitted_1_read_not_write;
  output [1 : 0] access_permitted_1;

  // value method access_permitted_2
  input  [1 : 0] access_permitted_2_priv;
  input  [11 : 0] access_permitted_2_csr_addr;
  input  access_permitted_2_read_not_write;
  output [1 : 0] access_permitted_2;

  // value method access_permitted_scr
  input  [1 : 0] access_permitted_scr_priv;
  input  [4 : 0] access_permitted_scr_scr_addr;
  input  access_permitted_scr_read_not_write;
  output [1 : 0] access_permitted_scr;

  // value method csr_counter_read_fault
  input  [1 : 0] csr_counter_read_fault_priv;
  input  [11 : 0] csr_counter_read_fault_csr_addr;
  output csr_counter_read_fault;

  // value method csr_mip_read
  output [31 : 0] csr_mip_read;

  // action method m_external_interrupt_req
  input  m_external_interrupt_req_set_not_clear;

  // action method s_external_interrupt_req
  input  s_external_interrupt_req_set_not_clear;

  // action method timer_interrupt_req
  input  timer_interrupt_req_set_not_clear;

  // action method software_interrupt_req
  input  software_interrupt_req_set_not_clear;

  // value method interrupt_pending
  input  [1 : 0] interrupt_pending_cur_priv;
  output [6 : 0] interrupt_pending;

  // value method wfi_resume
  output wfi_resume;

  // action method nmi_req
  input  nmi_req_set_not_clear;

  // value method nmi_pending
  output nmi_pending;

  // value method read_dpc
  output [31 : 0] read_dpc;
  output RDY_read_dpc;

  // action method write_dpc
  input  [31 : 0] write_dpc_pc;
  input  EN_write_dpc;
  output RDY_write_dpc;

  // value method dcsr_break_enters_debug
  input  [1 : 0] dcsr_break_enters_debug_cur_priv;
  output dcsr_break_enters_debug;
  output RDY_dcsr_break_enters_debug;

  // value method read_dcsr_step
  output read_dcsr_step;
  output RDY_read_dcsr_step;

  // action method write_dcsr_cause_priv
  input  [2 : 0] write_dcsr_cause_priv_cause;
  input  [1 : 0] write_dcsr_cause_priv_priv;
  input  EN_write_dcsr_cause_priv;

  // action method debug
  input  EN_debug;
  output RDY_debug;

  // signals for module outputs
  reg dcsr_break_enters_debug;
  wire [146 : 0] csr_trap_actions;
  wire [124 : 0] csr_ret_actions;
  wire [81 : 0] read_scr;
  wire [80 : 0] mav_scr_write;
  wire [64 : 0] mav_csr_write;
  wire [63 : 0] read_csr_mcycle, read_csr_minstret, read_csr_mtime;
  wire [32 : 0] mav_read_csr, read_csr, read_csr_port2;
  wire [31 : 0] csr_mip_read, read_dpc, read_mstatus, read_satp, read_ustatus;
  wire [27 : 0] read_misa;
  wire [6 : 0] interrupt_pending;
  wire [1 : 0] access_permitted_1, access_permitted_2, access_permitted_scr;
  wire RDY_csr_ret_actions,
       RDY_csr_trap_actions,
       RDY_dcsr_break_enters_debug,
       RDY_debug,
       RDY_read_dcsr_step,
       RDY_read_dpc,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_write_dpc,
       csr_counter_read_fault,
       nmi_pending,
       read_dcsr_step,
       wfi_resume;

  // inlined wires
  wire [1 : 0] w_ctr_inhib_ir_cy$wget;
  wire rw_mcycle$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register csr_mstatus_rg_mstatus
  reg [31 : 0] csr_mstatus_rg_mstatus;
  reg [31 : 0] csr_mstatus_rg_mstatus$D_IN;
  wire csr_mstatus_rg_mstatus$EN;

  // register rg_ctr_inhib_ir_cy
  reg [1 : 0] rg_ctr_inhib_ir_cy;
  wire [1 : 0] rg_ctr_inhib_ir_cy$D_IN;
  wire rg_ctr_inhib_ir_cy$EN;

  // register rg_dcsr
  reg [31 : 0] rg_dcsr;
  reg [31 : 0] rg_dcsr$D_IN;
  wire rg_dcsr$EN;

  // register rg_dpc
  reg [31 : 0] rg_dpc;
  reg [31 : 0] rg_dpc$D_IN;
  wire rg_dpc$EN;

  // register rg_dscratch0
  reg [31 : 0] rg_dscratch0;
  wire [31 : 0] rg_dscratch0$D_IN;
  wire rg_dscratch0$EN;

  // register rg_dscratch1
  reg [31 : 0] rg_dscratch1;
  wire [31 : 0] rg_dscratch1$D_IN;
  wire rg_dscratch1$EN;

  // register rg_mcause
  reg [6 : 0] rg_mcause;
  reg [6 : 0] rg_mcause$D_IN;
  wire rg_mcause$EN;

  // register rg_mccsr
  reg [10 : 0] rg_mccsr;
  wire [10 : 0] rg_mccsr$D_IN;
  wire rg_mccsr$EN;

  // register rg_mcounteren
  reg [31 : 0] rg_mcounteren;
  wire [31 : 0] rg_mcounteren$D_IN;
  wire rg_mcounteren$EN;

  // register rg_mcycle
  reg [63 : 0] rg_mcycle;
  wire [63 : 0] rg_mcycle$D_IN;
  wire rg_mcycle$EN;

  // register rg_mepcc
  reg [80 : 0] rg_mepcc;
  reg [80 : 0] rg_mepcc$D_IN;
  wire rg_mepcc$EN;

  // register rg_minstret
  reg [63 : 0] rg_minstret;
  wire [63 : 0] rg_minstret$D_IN;
  wire rg_minstret$EN;

  // register rg_mscratch
  reg [31 : 0] rg_mscratch;
  wire [31 : 0] rg_mscratch$D_IN;
  wire rg_mscratch$EN;

  // register rg_mscratchc
  reg [80 : 0] rg_mscratchc;
  wire [80 : 0] rg_mscratchc$D_IN;
  wire rg_mscratchc$EN;

  // register rg_mtcc
  reg [80 : 0] rg_mtcc;
  reg [80 : 0] rg_mtcc$D_IN;
  wire rg_mtcc$EN;

  // register rg_mtdc
  reg [80 : 0] rg_mtdc;
  wire [80 : 0] rg_mtdc$D_IN;
  wire rg_mtdc$EN;

  // register rg_mtime
  reg [63 : 0] rg_mtime;
  wire [63 : 0] rg_mtime$D_IN;
  wire rg_mtime$EN;

  // register rg_mtval
  reg [31 : 0] rg_mtval;
  wire [31 : 0] rg_mtval$D_IN;
  wire rg_mtval$EN;

  // register rg_nmi
  reg rg_nmi;
  wire rg_nmi$D_IN, rg_nmi$EN;

  // register rg_nmi_vector
  reg [31 : 0] rg_nmi_vector;
  wire [31 : 0] rg_nmi_vector$D_IN;
  wire rg_nmi_vector$EN;

  // register rg_state
  reg rg_state;
  wire rg_state$D_IN, rg_state$EN;

  // register rg_tdata1
  reg [31 : 0] rg_tdata1;
  wire [31 : 0] rg_tdata1$D_IN;
  wire rg_tdata1$EN;

  // register rg_tdata2
  reg [31 : 0] rg_tdata2;
  wire [31 : 0] rg_tdata2$D_IN;
  wire rg_tdata2$EN;

  // register rg_tdata3
  reg [31 : 0] rg_tdata3;
  wire [31 : 0] rg_tdata3$D_IN;
  wire rg_tdata3$EN;

  // register rg_tselect
  reg [31 : 0] rg_tselect;
  wire [31 : 0] rg_tselect$D_IN;
  wire rg_tselect$EN;

  // ports of submodule csr_mie
  wire [31 : 0] csr_mie$mav_write, csr_mie$mav_write_wordxl, csr_mie$mv_read;
  wire [27 : 0] csr_mie$mav_write_misa;
  wire csr_mie$EN_mav_write, csr_mie$EN_reset;

  // ports of submodule csr_mip
  wire [31 : 0] csr_mip$mav_write, csr_mip$mav_write_wordxl, csr_mip$mv_read;
  wire [27 : 0] csr_mip$mav_write_misa;
  wire csr_mip$EN_mav_write,
       csr_mip$EN_reset,
       csr_mip$m_external_interrupt_req_req,
       csr_mip$s_external_interrupt_req_req,
       csr_mip$software_interrupt_req_req,
       csr_mip$timer_interrupt_req_req;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule perf_counters
  wire [6143 : 0] perf_counters$send_performance_events_evts;
  wire [63 : 0] perf_counters$read_counters_0__read,
		perf_counters$read_counters_10__read,
		perf_counters$read_counters_11__read,
		perf_counters$read_counters_12__read,
		perf_counters$read_counters_13__read,
		perf_counters$read_counters_14__read,
		perf_counters$read_counters_15__read,
		perf_counters$read_counters_16__read,
		perf_counters$read_counters_17__read,
		perf_counters$read_counters_18__read,
		perf_counters$read_counters_19__read,
		perf_counters$read_counters_1__read,
		perf_counters$read_counters_20__read,
		perf_counters$read_counters_21__read,
		perf_counters$read_counters_22__read,
		perf_counters$read_counters_23__read,
		perf_counters$read_counters_24__read,
		perf_counters$read_counters_25__read,
		perf_counters$read_counters_26__read,
		perf_counters$read_counters_27__read,
		perf_counters$read_counters_28__read,
		perf_counters$read_counters_2__read,
		perf_counters$read_counters_3__read,
		perf_counters$read_counters_4__read,
		perf_counters$read_counters_5__read,
		perf_counters$read_counters_6__read,
		perf_counters$read_counters_7__read,
		perf_counters$read_counters_8__read,
		perf_counters$read_counters_9__read,
		perf_counters$write_counter_val;
  wire [28 : 0] perf_counters$read_ctr_inhibit__read,
		perf_counters$write_ctr_inhibit_val;
  wire [6 : 0] perf_counters$read_ctr_sels_0__read,
	       perf_counters$read_ctr_sels_10__read,
	       perf_counters$read_ctr_sels_11__read,
	       perf_counters$read_ctr_sels_12__read,
	       perf_counters$read_ctr_sels_13__read,
	       perf_counters$read_ctr_sels_14__read,
	       perf_counters$read_ctr_sels_15__read,
	       perf_counters$read_ctr_sels_16__read,
	       perf_counters$read_ctr_sels_17__read,
	       perf_counters$read_ctr_sels_18__read,
	       perf_counters$read_ctr_sels_19__read,
	       perf_counters$read_ctr_sels_1__read,
	       perf_counters$read_ctr_sels_20__read,
	       perf_counters$read_ctr_sels_21__read,
	       perf_counters$read_ctr_sels_22__read,
	       perf_counters$read_ctr_sels_23__read,
	       perf_counters$read_ctr_sels_24__read,
	       perf_counters$read_ctr_sels_25__read,
	       perf_counters$read_ctr_sels_26__read,
	       perf_counters$read_ctr_sels_27__read,
	       perf_counters$read_ctr_sels_28__read,
	       perf_counters$read_ctr_sels_2__read,
	       perf_counters$read_ctr_sels_3__read,
	       perf_counters$read_ctr_sels_4__read,
	       perf_counters$read_ctr_sels_5__read,
	       perf_counters$read_ctr_sels_6__read,
	       perf_counters$read_ctr_sels_7__read,
	       perf_counters$read_ctr_sels_8__read,
	       perf_counters$read_ctr_sels_9__read,
	       perf_counters$write_ctr_sel_val;
  wire [4 : 0] perf_counters$write_counter_idx,
	       perf_counters$write_ctr_sel_idx;
  wire perf_counters$EN_write_counter,
       perf_counters$EN_write_ctr_inhibit,
       perf_counters$EN_write_ctr_sel;

  // ports of submodule soc_map
  wire [80 : 0] soc_map$m_mepcc_reset_value, soc_map$m_mtcc_reset_value;
  wire [63 : 0] soc_map$m_is_IO_addr_addr,
		soc_map$m_is_mem_addr_addr,
		soc_map$m_is_near_mem_IO_addr_addr;
  wire [31 : 0] soc_map$m_nmivec_reset_value, soc_map$m_pc_reset_value;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_mcycle_incr,
       CAN_FIRE_RL_rl_mtime_incr,
       CAN_FIRE_RL_rl_reset_start,
       CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx,
       CAN_FIRE_RL_rl_upd_minstret_csrrx,
       CAN_FIRE_RL_rl_upd_minstret_incr,
       CAN_FIRE_csr_minstret_incr,
       CAN_FIRE_csr_ret_actions,
       CAN_FIRE_csr_trap_actions,
       CAN_FIRE_debug,
       CAN_FIRE_m_external_interrupt_req,
       CAN_FIRE_mav_csr_write,
       CAN_FIRE_mav_read_csr,
       CAN_FIRE_mav_scr_write,
       CAN_FIRE_nmi_req,
       CAN_FIRE_s_external_interrupt_req,
       CAN_FIRE_send_performance_events,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_software_interrupt_req,
       CAN_FIRE_timer_interrupt_req,
       CAN_FIRE_write_dcsr_cause_priv,
       CAN_FIRE_write_dpc,
       WILL_FIRE_RL_rl_mcycle_incr,
       WILL_FIRE_RL_rl_mtime_incr,
       WILL_FIRE_RL_rl_reset_start,
       WILL_FIRE_RL_rl_upd_ctr_inhib_csrrx,
       WILL_FIRE_RL_rl_upd_minstret_csrrx,
       WILL_FIRE_RL_rl_upd_minstret_incr,
       WILL_FIRE_csr_minstret_incr,
       WILL_FIRE_csr_ret_actions,
       WILL_FIRE_csr_trap_actions,
       WILL_FIRE_debug,
       WILL_FIRE_m_external_interrupt_req,
       WILL_FIRE_mav_csr_write,
       WILL_FIRE_mav_read_csr,
       WILL_FIRE_mav_scr_write,
       WILL_FIRE_nmi_req,
       WILL_FIRE_s_external_interrupt_req,
       WILL_FIRE_send_performance_events,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_software_interrupt_req,
       WILL_FIRE_timer_interrupt_req,
       WILL_FIRE_write_dcsr_cause_priv,
       WILL_FIRE_write_dpc;

  // inputs to muxes for submodule ports
  wire [80 : 0] MUX_rg_mepcc$write_1__VAL_2,
		MUX_rg_mepcc$write_1__VAL_3,
		MUX_rg_mtcc$write_1__VAL_2,
		MUX_rg_mtcc$write_1__VAL_3;
  wire [63 : 0] MUX_rg_minstret$write_1__VAL_1,
		MUX_rg_minstret$write_1__VAL_2,
		MUX_rw_minstret$wset_1__VAL_1;
  wire [31 : 0] MUX_csr_mstatus_rg_mstatus$write_1__VAL_3,
		MUX_rg_dcsr$write_1__VAL_3,
		MUX_rg_mtval$write_1__VAL_2;
  wire [6 : 0] MUX_rg_mcause$write_1__VAL_2, MUX_rg_mcause$write_1__VAL_3;
  wire MUX_csr_mstatus_rg_mstatus$write_1__SEL_2,
       MUX_rg_dcsr$write_1__SEL_2,
       MUX_rg_dpc$write_1__SEL_2,
       MUX_rg_mcause$write_1__SEL_2,
       MUX_rg_mcounteren$write_1__SEL_1,
       MUX_rg_mepcc$write_1__SEL_2,
       MUX_rg_mepcc$write_1__SEL_3,
       MUX_rg_mtcc$write_1__SEL_2,
       MUX_rg_mtcc$write_1__SEL_3,
       MUX_rg_mtval$write_1__SEL_1,
       MUX_rg_tdata1$write_1__SEL_1,
       MUX_rw_minstret$wset_1__SEL_1;

  // remaining internal signals
  reg [80 : 0] IF_read_scr_scr_addr_EQ_28_91_THEN_rg_mtcc_22__ETC___d502;
  reg [63 : 0] SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676,
	       x__h4325,
	       x__h5576,
	       x__h7987,
	       x__h8087,
	       x__h9371,
	       x__h9471;
  reg [31 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q11,
	       IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653,
	       IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329,
	       IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485,
	       y_avValue_fst__h13682;
  reg [21 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9;
  reg [7 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5;
  reg [6 : 0] x__h5676, x__h8187, x__h9571;
  reg [3 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7;
  reg [1 : 0] mask__h11307, mask__h12116, mask__h14601;
  reg CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q10,
      CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6,
      CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8;
  wire [80 : 0] IF_mav_scr_write_scr_addr_EQ_29_102_THEN_mav_s_ETC___d1271;
  wire [63 : 0] new_value__h9846,
		new_value__h9980,
		x__h12688,
		x__h12736,
		x__h12784,
		x__h12832,
		x__h3603,
		x__h3636;
  wire [47 : 0] IF_mav_scr_write_scr_addr_EQ_29_102_THEN_mav_s_ETC___d1270;
  wire [33 : 0] IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1647;
  wire [32 : 0] IF_mav_scr_write_cap_BITS_21_TO_16_027_ULT_25__ETC___d1172,
		addTop__h16169,
		length__h16634,
		result__h16575,
		ret__h16171;
  wire [31 : 0] IF_NOT_mav_read_csr_csr_addr_ULT_0x323_19_20_A_ETC___d654,
		IF_NOT_mav_read_csr_csr_addr_ULT_0xB03_11_12_A_ETC___d656,
		IF_NOT_mav_read_csr_csr_addr_ULT_0xB83_15_16_A_ETC___d655,
		IF_NOT_mav_read_csr_csr_addr_ULT_0xC03_03_04_A_ETC___d658,
		IF_NOT_mav_read_csr_csr_addr_ULT_0xC83_07_08_A_ETC___d657,
		IF_NOT_read_csr_csr_addr_ULT_0x323_0_1_AND_rea_ETC___d330,
		IF_NOT_read_csr_csr_addr_ULT_0xB03_2_3_AND_rea_ETC___d332,
		IF_NOT_read_csr_csr_addr_ULT_0xB83_6_7_AND_rea_ETC___d331,
		IF_NOT_read_csr_csr_addr_ULT_0xC03_4_5_AND_rea_ETC___d334,
		IF_NOT_read_csr_csr_addr_ULT_0xC83_8_9_AND_rea_ETC___d333,
		IF_NOT_read_csr_port2_csr_addr_ULT_0x323_51_52_ETC___d486,
		IF_NOT_read_csr_port2_csr_addr_ULT_0xB03_43_44_ETC___d488,
		IF_NOT_read_csr_port2_csr_addr_ULT_0xB83_47_48_ETC___d487,
		IF_NOT_read_csr_port2_csr_addr_ULT_0xC03_35_36_ETC___d490,
		IF_NOT_read_csr_port2_csr_addr_ULT_0xC83_39_40_ETC___d489,
		IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615,
		SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054,
		SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274,
		SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245,
		_theResult_____2__h19131,
		_theResult___fst__h21433,
		_theResult___fst__h21634,
		addBase__h11347,
		addBase__h12156,
		addBase__h16053,
		addBase__h20795,
		addrLSB__h16727,
		addrLSB__h17318,
		addrLSB__h7100,
		addrLSB__h7331,
		capUnpacked_capFat_address__h14621,
		capUnpacked_capFat_address__h15680,
		csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608,
		exc_pc___1__h19196,
		exc_pc__h18697,
		exc_pc__h19129,
		mask__h21454,
		mask__h21471,
		mav_scr_write_cap_BITS_79_TO_56_085_AND_167772_ETC___d1090,
		new_csr__h13916,
		new_csr__h15028,
		new_csr_value__h11596,
		new_csr_value__h12993,
		new_dcsr__h13124,
		result_d_address__h20764,
		rg_mtcc_BITS_79_TO_48__q2,
		v__h10083,
		v__h12292,
		v__h12868,
		val__h21472,
		vector_offset__h19130,
		wordxl1__h10281,
		x1_avValue_address__h14910,
		x__h11182,
		x__h11997,
		x__h14481,
		x__h15099,
		x__h15101,
		x__h15515,
		x__h16819,
		x__h17329,
		x__h17331,
		x__h17450,
		x__h20685,
		x__h21279,
		x__h21280,
		x__h21453,
		x__h21466,
		x__h21483,
		x__h7111,
		x__h7113,
		x__h7242,
		x__h7342,
		x__h7344,
		x__h7470,
		x_address__h11327,
		x_address__h12136,
		y__h16818,
		y__h17449,
		y__h21467,
		y__h21484,
		y__h7241,
		y__h7469,
		y_avValue_fst__h13696,
		y_avValue_new_csr_value__h13800;
  wire [28 : 0] rg_mcounteren_BITS_31_TO_3__q4;
  wire [27 : 0] IF_mav_scr_write_cap_BITS_21_TO_16_027_EQ_0_02_ETC___d1229;
  wire [24 : 0] mask__h16170;
  wire [23 : 0] highBitsfilter__h10809,
		highBitsfilter__h11640,
		highBitsfilter__h20000,
		highOffsetBits__h10810,
		highOffsetBits__h11641,
		highOffsetBits__h15045,
		highOffsetBits__h20001,
		mask__h16054,
		mav_scr_write_cap_BITS_79_TO_56_PLUS_SEXT_x693_ETC__q3,
		signBits__h11638,
		signBits__h15042,
		signBits__h19998,
		x__h11668,
		x__h15072,
		x__h20028;
  wire [22 : 0] fixed_up_val_23__h10331,
		fixed_up_val_23__h18133,
		fixed_up_val_23__h21352;
  wire [15 : 0] x__h8317;
  wire [11 : 0] i__h34635,
		i__h34681,
		idx__h3992,
		idx__h4015,
		idx__h4038,
		idx__h4061,
		idx__h4084,
		idx__h7654,
		idx__h7677,
		idx__h7700,
		idx__h7723,
		idx__h7746,
		idx__h9038,
		idx__h9061,
		idx__h9084,
		idx__h9107,
		idx__h9130,
		x__h10019,
		x__h10106,
		x__h9913;
  wire [9 : 0] base__h17316,
	       offset__h15087,
	       offset__h17317,
	       offset__h7099,
	       offset__h7330,
	       x__h11398,
	       x__h12207,
	       x__h16104,
	       x__h16229,
	       x__h16639,
	       x__h20851;
  wire [7 : 0] capUnpacked_capFat_addrBits__h14622,
	       capUnpacked_capFat_addrBits__h15681,
	       newAddrBits__h11306,
	       newAddrBits__h12115,
	       newAddrBits__h14600,
	       newAddrBits__h15659,
	       newAddrBits__h20752,
	       result_d_addrBits__h20765,
	       rg_mtcc_BITS_7_TO_0__q1,
	       toBoundsM1__h10820,
	       toBoundsM1__h11651,
	       toBoundsM1__h15055,
	       toBoundsM1__h20011,
	       toBounds__h10819,
	       toBounds__h11650,
	       toBounds__h15054,
	       toBounds__h20010,
	       x1_avValue_addrBits__h14911,
	       x_addrBits__h11328,
	       x_addrBits__h12137;
  wire [6 : 0] IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2052,
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2053,
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2054,
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2055,
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2056,
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2057,
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2058;
  wire [5 : 0] exc_code__h19827, ie_from_x__h21417, pie_from_x__h21418;
  wire [3 : 0] IF_rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc__ETC___d1639,
	       a_capFat_otype__h22062,
	       x1_avValue_otype__h14915;
  wire [2 : 0] repBound__h16859, repBound__h7146, repBound__h7377;
  wire [1 : 0] IF_rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51__ETC___d263,
	       _0b0_CONCAT_mav_scr_write_cap_BITS_79_TO_56_085_ETC___d1164,
	       mask__h20753,
	       mpp__h19246,
	       to_y__h21633,
	       x__h16920,
	       x__h16939;
  wire IF_IF_csr_trap_actions_interrupt_AND_NOT_csr_t_ETC___d1568,
       IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47__ETC___d1075,
       IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47__ETC___d1111,
       IF_mav_csr_write_word_BIT_31_20_THEN_NOT_mav_c_ETC___d739,
       IF_mav_csr_write_word_BIT_31_20_THEN_NOT_mav_c_ETC___d793,
       NOT_access_permitted_1_csr_addr_ULT_0xC03_648__ETC___d1661,
       NOT_access_permitted_1_csr_addr_ULT_0xC03_648__ETC___d1743,
       NOT_access_permitted_1_read_not_write_754_OR_a_ETC___d1761,
       NOT_access_permitted_1_read_not_write_754_OR_a_ETC___d1779,
       NOT_access_permitted_2_csr_addr_ULT_0xC03_780__ETC___d1793,
       NOT_access_permitted_2_csr_addr_ULT_0xC03_780__ETC___d1875,
       NOT_access_permitted_2_read_not_write_885_OR_a_ETC___d1892,
       NOT_access_permitted_2_read_not_write_885_OR_a_ETC___d1910,
       NOT_cfg_verbosity_read__89_ULE_1_90___d991,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1980,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1987,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1994,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2001,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2008,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2015,
       NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2022,
       NOT_csr_trap_actions_nmi_418_AND_csr_trap_acti_ETC___d1496,
       NOT_mav_scr_write_cap_BITS_21_TO_16_027_ULT_24_ETC___d1078,
       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1082,
       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1116,
       access_permitted_1_csr_addr_ULE_0xC1F___d1650,
       access_permitted_1_csr_addr_ULE_0xC9F___d1659,
       access_permitted_1_csr_addr_ULT_0xC03___d1648,
       access_permitted_1_csr_addr_ULT_0xC83___d1657,
       access_permitted_2_csr_addr_ULE_0xC1F___d1782,
       access_permitted_2_csr_addr_ULE_0xC9F___d1791,
       access_permitted_2_csr_addr_ULT_0xC03___d1780,
       access_permitted_2_csr_addr_ULT_0xC83___d1789,
       b__h21470,
       csr_counter_read_fault_csr_addr_EQ_0xC00_930_A_ETC___d1954,
       csr_counter_read_fault_csr_addr_EQ_0xC00_930_A_ETC___d1964,
       csr_trap_actions_nmi_OR_NOT_csr_trap_actions_i_ETC___d1547,
       mav_csr_write_csr_addr_ULE_0x33F___d686,
       mav_csr_write_csr_addr_ULE_0xB1F___d661,
       mav_csr_write_csr_addr_ULE_0xB9F___d665,
       mav_csr_write_csr_addr_ULT_0x323_84_OR_NOT_mav_ETC___d986,
       mav_csr_write_csr_addr_ULT_0x323___d684,
       mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d689,
       mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d872,
       mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d894,
       mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d988,
       mav_csr_write_csr_addr_ULT_0xB03___d659,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d697,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d713,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d717,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d768,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d772,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d776,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d822,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d828,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d832,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d900,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d907,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d911,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d917,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d921,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d925,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d938,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d942,
       mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d946,
       mav_csr_write_csr_addr_ULT_0xB83___d663,
       mav_scr_write_cap_BITS_15_TO_13_145_ULT_mav_sc_ETC___d1146,
       mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039,
       mav_scr_write_cap_BITS_7_TO_5_035_ULT_mav_scr__ETC___d1037,
       rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc_51__ETC___d1634,
       rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258,
       rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51_BIT_ETC___d256,
       rg_mtcc_22_BITS_47_TO_45_28_ULT_rg_mtcc_22_BIT_ETC___d229,
       rg_mtcc_22_BITS_7_TO_5_25_ULT_rg_mtcc_22_BITS__ETC___d227,
       x1_avValue_flags__h14913;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = f_reset_rsps$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = f_reset_rsps$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = CAN_FIRE_server_reset_response_get ;
  assign CAN_FIRE_server_reset_response_get =
	     rg_state && f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // value method read_csr
  assign read_csr =
	     { read_csr_csr_addr >= 12'hC03 && read_csr_csr_addr <= 12'hC1F ||
	       read_csr_csr_addr >= 12'hC83 && read_csr_csr_addr <= 12'hC9F ||
	       read_csr_csr_addr >= 12'hB03 && read_csr_csr_addr <= 12'hB1F ||
	       read_csr_csr_addr >= 12'hB83 && read_csr_csr_addr <= 12'hB9F ||
	       read_csr_csr_addr >= 12'h323 && read_csr_csr_addr <= 12'h33F ||
	       read_csr_csr_addr == 12'hC00 ||
	       read_csr_csr_addr == 12'hC01 ||
	       read_csr_csr_addr == 12'hC02 ||
	       read_csr_csr_addr == 12'hC80 ||
	       read_csr_csr_addr == 12'hC81 ||
	       read_csr_csr_addr == 12'hC82 ||
	       read_csr_csr_addr == 12'hF11 ||
	       read_csr_csr_addr == 12'hF12 ||
	       read_csr_csr_addr == 12'hF13 ||
	       read_csr_csr_addr == 12'hF14 ||
	       read_csr_csr_addr == 12'h300 ||
	       read_csr_csr_addr == 12'h301 ||
	       read_csr_csr_addr == 12'h304 ||
	       read_csr_csr_addr == 12'h305 ||
	       read_csr_csr_addr == 12'h306 ||
	       read_csr_csr_addr == 12'h340 ||
	       read_csr_csr_addr == 12'h341 ||
	       read_csr_csr_addr == 12'h342 ||
	       read_csr_csr_addr == 12'h343 ||
	       read_csr_csr_addr == 12'h344 ||
	       read_csr_csr_addr == 12'hBC0 ||
	       read_csr_csr_addr == 12'hB00 ||
	       read_csr_csr_addr == 12'hB02 ||
	       read_csr_csr_addr == 12'hB80 ||
	       read_csr_csr_addr == 12'hB82 ||
	       read_csr_csr_addr == 12'h320 ||
	       read_csr_csr_addr == 12'h7A0 ||
	       read_csr_csr_addr == 12'h7A1 ||
	       read_csr_csr_addr == 12'h7A2 ||
	       read_csr_csr_addr == 12'h7A3 ||
	       read_csr_csr_addr == 12'h7B0 ||
	       read_csr_csr_addr == 12'h7B1 ||
	       read_csr_csr_addr == 12'h7B2 ||
	       read_csr_csr_addr == 12'h7B3,
	       IF_NOT_read_csr_csr_addr_ULT_0xC03_4_5_AND_rea_ETC___d334 } ;

  // value method read_csr_port2
  assign read_csr_port2 =
	     { read_csr_port2_csr_addr >= 12'hC03 &&
	       read_csr_port2_csr_addr <= 12'hC1F ||
	       read_csr_port2_csr_addr >= 12'hC83 &&
	       read_csr_port2_csr_addr <= 12'hC9F ||
	       read_csr_port2_csr_addr >= 12'hB03 &&
	       read_csr_port2_csr_addr <= 12'hB1F ||
	       read_csr_port2_csr_addr >= 12'hB83 &&
	       read_csr_port2_csr_addr <= 12'hB9F ||
	       read_csr_port2_csr_addr >= 12'h323 &&
	       read_csr_port2_csr_addr <= 12'h33F ||
	       read_csr_port2_csr_addr == 12'hC00 ||
	       read_csr_port2_csr_addr == 12'hC01 ||
	       read_csr_port2_csr_addr == 12'hC02 ||
	       read_csr_port2_csr_addr == 12'hC80 ||
	       read_csr_port2_csr_addr == 12'hC81 ||
	       read_csr_port2_csr_addr == 12'hC82 ||
	       read_csr_port2_csr_addr == 12'hF11 ||
	       read_csr_port2_csr_addr == 12'hF12 ||
	       read_csr_port2_csr_addr == 12'hF13 ||
	       read_csr_port2_csr_addr == 12'hF14 ||
	       read_csr_port2_csr_addr == 12'h300 ||
	       read_csr_port2_csr_addr == 12'h301 ||
	       read_csr_port2_csr_addr == 12'h304 ||
	       read_csr_port2_csr_addr == 12'h305 ||
	       read_csr_port2_csr_addr == 12'h306 ||
	       read_csr_port2_csr_addr == 12'h340 ||
	       read_csr_port2_csr_addr == 12'h341 ||
	       read_csr_port2_csr_addr == 12'h342 ||
	       read_csr_port2_csr_addr == 12'h343 ||
	       read_csr_port2_csr_addr == 12'h344 ||
	       read_csr_port2_csr_addr == 12'hBC0 ||
	       read_csr_port2_csr_addr == 12'hB00 ||
	       read_csr_port2_csr_addr == 12'hB02 ||
	       read_csr_port2_csr_addr == 12'hB80 ||
	       read_csr_port2_csr_addr == 12'hB82 ||
	       read_csr_port2_csr_addr == 12'h320 ||
	       read_csr_port2_csr_addr == 12'h7A0 ||
	       read_csr_port2_csr_addr == 12'h7A1 ||
	       read_csr_port2_csr_addr == 12'h7A2 ||
	       read_csr_port2_csr_addr == 12'h7A3 ||
	       read_csr_port2_csr_addr == 12'h7B0 ||
	       read_csr_port2_csr_addr == 12'h7B1 ||
	       read_csr_port2_csr_addr == 12'h7B2 ||
	       read_csr_port2_csr_addr == 12'h7B3,
	       IF_NOT_read_csr_port2_csr_addr_ULT_0xC03_35_36_ETC___d490 } ;

  // value method read_scr
  assign read_scr =
	     { read_scr_scr_addr == 5'd28 || read_scr_scr_addr == 5'd29 ||
	       read_scr_scr_addr == 5'd30 ||
	       read_scr_scr_addr == 5'd31,
	       IF_read_scr_scr_addr_EQ_28_91_THEN_rg_mtcc_22__ETC___d502 } ;

  // actionvalue method mav_read_csr
  assign mav_read_csr =
	     { mav_read_csr_csr_addr >= 12'hC03 &&
	       mav_read_csr_csr_addr <= 12'hC1F ||
	       mav_read_csr_csr_addr >= 12'hC83 &&
	       mav_read_csr_csr_addr <= 12'hC9F ||
	       mav_read_csr_csr_addr >= 12'hB03 &&
	       mav_read_csr_csr_addr <= 12'hB1F ||
	       mav_read_csr_csr_addr >= 12'hB83 &&
	       mav_read_csr_csr_addr <= 12'hB9F ||
	       mav_read_csr_csr_addr >= 12'h323 &&
	       mav_read_csr_csr_addr <= 12'h33F ||
	       mav_read_csr_csr_addr == 12'hC00 ||
	       mav_read_csr_csr_addr == 12'hC01 ||
	       mav_read_csr_csr_addr == 12'hC02 ||
	       mav_read_csr_csr_addr == 12'hC80 ||
	       mav_read_csr_csr_addr == 12'hC81 ||
	       mav_read_csr_csr_addr == 12'hC82 ||
	       mav_read_csr_csr_addr == 12'hF11 ||
	       mav_read_csr_csr_addr == 12'hF12 ||
	       mav_read_csr_csr_addr == 12'hF13 ||
	       mav_read_csr_csr_addr == 12'hF14 ||
	       mav_read_csr_csr_addr == 12'h300 ||
	       mav_read_csr_csr_addr == 12'h301 ||
	       mav_read_csr_csr_addr == 12'h304 ||
	       mav_read_csr_csr_addr == 12'h305 ||
	       mav_read_csr_csr_addr == 12'h306 ||
	       mav_read_csr_csr_addr == 12'h340 ||
	       mav_read_csr_csr_addr == 12'h341 ||
	       mav_read_csr_csr_addr == 12'h342 ||
	       mav_read_csr_csr_addr == 12'h343 ||
	       mav_read_csr_csr_addr == 12'h344 ||
	       mav_read_csr_csr_addr == 12'hBC0 ||
	       mav_read_csr_csr_addr == 12'hB00 ||
	       mav_read_csr_csr_addr == 12'hB02 ||
	       mav_read_csr_csr_addr == 12'hB80 ||
	       mav_read_csr_csr_addr == 12'hB82 ||
	       mav_read_csr_csr_addr == 12'h320 ||
	       mav_read_csr_csr_addr == 12'h7A0 ||
	       mav_read_csr_csr_addr == 12'h7A1 ||
	       mav_read_csr_csr_addr == 12'h7A2 ||
	       mav_read_csr_csr_addr == 12'h7A3 ||
	       mav_read_csr_csr_addr == 12'h7B0 ||
	       mav_read_csr_csr_addr == 12'h7B1 ||
	       mav_read_csr_csr_addr == 12'h7B2 ||
	       mav_read_csr_csr_addr == 12'h7B3,
	       IF_NOT_mav_read_csr_csr_addr_ULT_0xC03_03_04_A_ETC___d658 } ;
  assign CAN_FIRE_mav_read_csr = 1'd1 ;
  assign WILL_FIRE_mav_read_csr = EN_mav_read_csr ;

  // actionvalue method mav_csr_write
  assign mav_csr_write =
	     { y_avValue_new_csr_value__h13800,
	       1'd0,
	       32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign CAN_FIRE_mav_csr_write = 1'd1 ;
  assign WILL_FIRE_mav_csr_write = EN_mav_csr_write ;

  // actionvalue method mav_scr_write
  assign mav_scr_write =
	     (mav_scr_write_scr_addr == 5'd28) ?
	       { ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1082 &&
		 mav_scr_write_cap[80],
		 x1_avValue_address__h14910,
		 x1_avValue_addrBits__h14911,
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[39],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[38],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[37],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[36],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[35],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[34],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[33],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[32],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[31],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[30],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[29],
		 ((mav_scr_write_cap[21:16] == 6'd0) ?
		    mav_scr_write_cap[1:0] :
		    2'b0) ==
		 2'd0 &&
		 mav_scr_write_cap[28],
		 IF_mav_scr_write_cap_BITS_21_TO_16_027_EQ_0_02_ETC___d1229 } :
	       IF_mav_scr_write_scr_addr_EQ_29_102_THEN_mav_s_ETC___d1271 ;
  assign CAN_FIRE_mav_scr_write = 1'd1 ;
  assign WILL_FIRE_mav_scr_write = EN_mav_scr_write ;

  // value method read_misa
  assign read_misa = 28'd68161797 ;

  // value method read_mstatus
  assign read_mstatus = csr_mstatus_rg_mstatus ;

  // value method read_ustatus
  assign read_ustatus =
	     { 27'd0,
	       csr_mstatus_rg_mstatus[4],
	       3'd0,
	       csr_mstatus_rg_mstatus[0] } ;

  // value method read_satp
  assign read_satp =
	     32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;

  // actionvalue method csr_trap_actions
  assign csr_trap_actions =
	     { (highOffsetBits__h20001 == 24'd0 &&
		IF_IF_csr_trap_actions_interrupt_AND_NOT_csr_t_ETC___d1568 ||
		rg_mtcc[21:16] >= 6'd24) &&
	       rg_mtcc[80],
	       result_d_address__h20764,
	       result_d_addrBits__h20765,
	       rg_mtcc[39:0],
	       x__h21279,
	       x__h21280,
	       2'b11 } ;
  assign RDY_csr_trap_actions = 1'd1 ;
  assign CAN_FIRE_csr_trap_actions = 1'd1 ;
  assign WILL_FIRE_csr_trap_actions = EN_csr_trap_actions ;

  // actionvalue method csr_ret_actions
  assign csr_ret_actions =
	     { rg_mepcc[80:27],
	       a_capFat_otype__h22062,
	       rg_mepcc[22:0],
	       repBound__h7377,
	       rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc_51__ETC___d1634,
	       rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51_BIT_ETC___d256,
	       rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258,
	       IF_rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc__ETC___d1639,
	       IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1647 } ;
  assign RDY_csr_ret_actions = 1'd1 ;
  assign CAN_FIRE_csr_ret_actions = 1'd1 ;
  assign WILL_FIRE_csr_ret_actions = EN_csr_ret_actions ;

  // value method read_csr_minstret
  assign read_csr_minstret = rg_minstret ;

  // action method csr_minstret_incr
  assign CAN_FIRE_csr_minstret_incr = 1'd1 ;
  assign WILL_FIRE_csr_minstret_incr = EN_csr_minstret_incr ;

  // value method read_csr_mcycle
  assign read_csr_mcycle = rg_mcycle ;

  // value method read_csr_mtime
  assign read_csr_mtime = rg_mtime ;

  // action method send_performance_events
  assign CAN_FIRE_send_performance_events = 1'd1 ;
  assign WILL_FIRE_send_performance_events = 1'd1 ;

  // value method access_permitted_1
  assign access_permitted_1 =
	     { NOT_access_permitted_1_csr_addr_ULT_0xC03_648__ETC___d1743 &&
	       (access_permitted_1_csr_addr != 12'h180 ||
		!csr_mstatus_rg_mstatus[20]) &&
	       (access_permitted_1_read_not_write ||
		access_permitted_1_csr_addr[11:10] != 2'b11),
	       NOT_access_permitted_1_read_not_write_754_OR_a_ETC___d1779 } ;

  // value method access_permitted_2
  assign access_permitted_2 =
	     { NOT_access_permitted_2_csr_addr_ULT_0xC03_780__ETC___d1875 &&
	       (access_permitted_2_csr_addr != 12'h180 ||
		!csr_mstatus_rg_mstatus[20]) &&
	       (access_permitted_2_read_not_write ||
		access_permitted_2_csr_addr[11:10] != 2'b11),
	       NOT_access_permitted_2_read_not_write_885_OR_a_ETC___d1910 } ;

  // value method access_permitted_scr
  assign access_permitted_scr =
	     { (access_permitted_scr_scr_addr == 5'd28 ||
		access_permitted_scr_scr_addr == 5'd29 ||
		access_permitted_scr_scr_addr == 5'd31 ||
		access_permitted_scr_scr_addr == 5'd30) &&
	       access_permitted_scr_priv >=
	       access_permitted_scr_scr_addr[4:3] &&
	       access_permitted_scr_scr_addr != 5'd0,
	       access_permitted_scr_scr_addr != 5'd1 } ;

  // value method csr_counter_read_fault
  assign csr_counter_read_fault =
	     (csr_counter_read_fault_priv == 2'b01 ||
	      csr_counter_read_fault_priv == 2'b0) &&
	     csr_counter_read_fault_csr_addr_EQ_0xC00_930_A_ETC___d1964 ;

  // value method csr_mip_read
  assign csr_mip_read = csr_mip$mv_read ;

  // action method m_external_interrupt_req
  assign CAN_FIRE_m_external_interrupt_req = 1'd1 ;
  assign WILL_FIRE_m_external_interrupt_req = 1'd1 ;

  // action method s_external_interrupt_req
  assign CAN_FIRE_s_external_interrupt_req = 1'd1 ;
  assign WILL_FIRE_s_external_interrupt_req = 1'd1 ;

  // action method timer_interrupt_req
  assign CAN_FIRE_timer_interrupt_req = 1'd1 ;
  assign WILL_FIRE_timer_interrupt_req = 1'd1 ;

  // action method software_interrupt_req
  assign CAN_FIRE_software_interrupt_req = 1'd1 ;
  assign WILL_FIRE_software_interrupt_req = 1'd1 ;

  // value method interrupt_pending
  assign interrupt_pending =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2022 ?
	       { csr_mip$mv_read[4] && csr_mie$mv_read[4] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd4 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2058 ;

  // value method wfi_resume
  assign wfi_resume = (csr_mip$mv_read & csr_mie$mv_read) != 32'd0 ;

  // action method nmi_req
  assign CAN_FIRE_nmi_req = 1'd1 ;
  assign WILL_FIRE_nmi_req = 1'd1 ;

  // value method nmi_pending
  assign nmi_pending = rg_nmi ;

  // value method read_dpc
  assign read_dpc = rg_dpc ;
  assign RDY_read_dpc = 1'd1 ;

  // action method write_dpc
  assign RDY_write_dpc = 1'd1 ;
  assign CAN_FIRE_write_dpc = 1'd1 ;
  assign WILL_FIRE_write_dpc = EN_write_dpc ;

  // value method dcsr_break_enters_debug
  always@(dcsr_break_enters_debug_cur_priv or rg_dcsr)
  begin
    case (dcsr_break_enters_debug_cur_priv)
      2'b01: dcsr_break_enters_debug = rg_dcsr[13];
      2'b11: dcsr_break_enters_debug = rg_dcsr[15];
      default: dcsr_break_enters_debug = rg_dcsr[12];
    endcase
  end
  assign RDY_dcsr_break_enters_debug = 1'd1 ;

  // value method read_dcsr_step
  assign read_dcsr_step = rg_dcsr[2] ;
  assign RDY_read_dcsr_step = 1'd1 ;

  // action method write_dcsr_cause_priv
  assign CAN_FIRE_write_dcsr_cause_priv = 1'd1 ;
  assign WILL_FIRE_write_dcsr_cause_priv = EN_write_dcsr_cause_priv ;

  // action method debug
  assign RDY_debug = 1'd1 ;
  assign CAN_FIRE_debug = 1'd1 ;
  assign WILL_FIRE_debug = EN_debug ;

  // submodule csr_mie
  mkCSR_MIE csr_mie(.CLK(CLK),
		    .RST_N(RST_N),
		    .mav_write_misa(csr_mie$mav_write_misa),
		    .mav_write_wordxl(csr_mie$mav_write_wordxl),
		    .EN_reset(csr_mie$EN_reset),
		    .EN_mav_write(csr_mie$EN_mav_write),
		    .mv_read(csr_mie$mv_read),
		    .mav_write(csr_mie$mav_write));

  // submodule csr_mip
  mkCSR_MIP csr_mip(.CLK(CLK),
		    .RST_N(RST_N),
		    .m_external_interrupt_req_req(csr_mip$m_external_interrupt_req_req),
		    .mav_write_misa(csr_mip$mav_write_misa),
		    .mav_write_wordxl(csr_mip$mav_write_wordxl),
		    .s_external_interrupt_req_req(csr_mip$s_external_interrupt_req_req),
		    .software_interrupt_req_req(csr_mip$software_interrupt_req_req),
		    .timer_interrupt_req_req(csr_mip$timer_interrupt_req_req),
		    .EN_reset(csr_mip$EN_reset),
		    .EN_mav_write(csr_mip$EN_mav_write),
		    .mv_read(csr_mip$mv_read),
		    .mav_write(csr_mip$mav_write));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(1'd1)) f_reset_rsps(.RST(RST_N),
					.CLK(CLK),
					.ENQ(f_reset_rsps$ENQ),
					.DEQ(f_reset_rsps$DEQ),
					.CLR(f_reset_rsps$CLR),
					.FULL_N(f_reset_rsps$FULL_N),
					.EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule perf_counters
  mkPerfCountersPiccolo perf_counters(.CLK(CLK),
				      .RST_N(RST_N),
				      .send_performance_events_evts(perf_counters$send_performance_events_evts),
				      .write_counter_idx(perf_counters$write_counter_idx),
				      .write_counter_val(perf_counters$write_counter_val),
				      .write_ctr_inhibit_val(perf_counters$write_ctr_inhibit_val),
				      .write_ctr_sel_idx(perf_counters$write_ctr_sel_idx),
				      .write_ctr_sel_val(perf_counters$write_ctr_sel_val),
				      .EN_write_counter(perf_counters$EN_write_counter),
				      .EN_write_ctr_sel(perf_counters$EN_write_ctr_sel),
				      .EN_write_ctr_inhibit(perf_counters$EN_write_ctr_inhibit),
				      .read_counters_0__read(perf_counters$read_counters_0__read),
				      .read_counters_1__read(perf_counters$read_counters_1__read),
				      .read_counters_2__read(perf_counters$read_counters_2__read),
				      .read_counters_3__read(perf_counters$read_counters_3__read),
				      .read_counters_4__read(perf_counters$read_counters_4__read),
				      .read_counters_5__read(perf_counters$read_counters_5__read),
				      .read_counters_6__read(perf_counters$read_counters_6__read),
				      .read_counters_7__read(perf_counters$read_counters_7__read),
				      .read_counters_8__read(perf_counters$read_counters_8__read),
				      .read_counters_9__read(perf_counters$read_counters_9__read),
				      .read_counters_10__read(perf_counters$read_counters_10__read),
				      .read_counters_11__read(perf_counters$read_counters_11__read),
				      .read_counters_12__read(perf_counters$read_counters_12__read),
				      .read_counters_13__read(perf_counters$read_counters_13__read),
				      .read_counters_14__read(perf_counters$read_counters_14__read),
				      .read_counters_15__read(perf_counters$read_counters_15__read),
				      .read_counters_16__read(perf_counters$read_counters_16__read),
				      .read_counters_17__read(perf_counters$read_counters_17__read),
				      .read_counters_18__read(perf_counters$read_counters_18__read),
				      .read_counters_19__read(perf_counters$read_counters_19__read),
				      .read_counters_20__read(perf_counters$read_counters_20__read),
				      .read_counters_21__read(perf_counters$read_counters_21__read),
				      .read_counters_22__read(perf_counters$read_counters_22__read),
				      .read_counters_23__read(perf_counters$read_counters_23__read),
				      .read_counters_24__read(perf_counters$read_counters_24__read),
				      .read_counters_25__read(perf_counters$read_counters_25__read),
				      .read_counters_26__read(perf_counters$read_counters_26__read),
				      .read_counters_27__read(perf_counters$read_counters_27__read),
				      .read_counters_28__read(perf_counters$read_counters_28__read),
				      .read_ctr_sels_0__read(perf_counters$read_ctr_sels_0__read),
				      .read_ctr_sels_1__read(perf_counters$read_ctr_sels_1__read),
				      .read_ctr_sels_2__read(perf_counters$read_ctr_sels_2__read),
				      .read_ctr_sels_3__read(perf_counters$read_ctr_sels_3__read),
				      .read_ctr_sels_4__read(perf_counters$read_ctr_sels_4__read),
				      .read_ctr_sels_5__read(perf_counters$read_ctr_sels_5__read),
				      .read_ctr_sels_6__read(perf_counters$read_ctr_sels_6__read),
				      .read_ctr_sels_7__read(perf_counters$read_ctr_sels_7__read),
				      .read_ctr_sels_8__read(perf_counters$read_ctr_sels_8__read),
				      .read_ctr_sels_9__read(perf_counters$read_ctr_sels_9__read),
				      .read_ctr_sels_10__read(perf_counters$read_ctr_sels_10__read),
				      .read_ctr_sels_11__read(perf_counters$read_ctr_sels_11__read),
				      .read_ctr_sels_12__read(perf_counters$read_ctr_sels_12__read),
				      .read_ctr_sels_13__read(perf_counters$read_ctr_sels_13__read),
				      .read_ctr_sels_14__read(perf_counters$read_ctr_sels_14__read),
				      .read_ctr_sels_15__read(perf_counters$read_ctr_sels_15__read),
				      .read_ctr_sels_16__read(perf_counters$read_ctr_sels_16__read),
				      .read_ctr_sels_17__read(perf_counters$read_ctr_sels_17__read),
				      .read_ctr_sels_18__read(perf_counters$read_ctr_sels_18__read),
				      .read_ctr_sels_19__read(perf_counters$read_ctr_sels_19__read),
				      .read_ctr_sels_20__read(perf_counters$read_ctr_sels_20__read),
				      .read_ctr_sels_21__read(perf_counters$read_ctr_sels_21__read),
				      .read_ctr_sels_22__read(perf_counters$read_ctr_sels_22__read),
				      .read_ctr_sels_23__read(perf_counters$read_ctr_sels_23__read),
				      .read_ctr_sels_24__read(perf_counters$read_ctr_sels_24__read),
				      .read_ctr_sels_25__read(perf_counters$read_ctr_sels_25__read),
				      .read_ctr_sels_26__read(perf_counters$read_ctr_sels_26__read),
				      .read_ctr_sels_27__read(perf_counters$read_ctr_sels_27__read),
				      .read_ctr_sels_28__read(perf_counters$read_ctr_sels_28__read),
				      .read_ctr_inhibit__read(perf_counters$read_ctr_inhibit__read),
				      .read_ctr_overflow__read());

  // submodule soc_map
  mkSoC_Map soc_map(.CLK(CLK),
		    .RST_N(RST_N),
		    .m_is_IO_addr_addr(soc_map$m_is_IO_addr_addr),
		    .m_is_mem_addr_addr(soc_map$m_is_mem_addr_addr),
		    .m_is_near_mem_IO_addr_addr(soc_map$m_is_near_mem_IO_addr_addr),
		    .m_plic_addr_range(),
		    .m_near_mem_io_addr_range(),
		    .m_ethernet_0_addr_range(),
		    .m_dma_0_addr_range(),
		    .m_uart16550_0_addr_range(),
		    .m_uart16550_1_addr_range(),
		    .m_iic_0_addr_range(),
		    .m_axi_quad_spi_0_full_addr_range(),
		    .m_axi_quad_spi_0_lite_addr_range(),
		    .m_axi_quad_spi_1_addr_range(),
		    .m_gpio_0_addr_range(),
		    .m_gpio_1_addr_range(),
		    .m_boot_rom_addr_range(),
		    .m_ddr4_0_uncached_addr_range(),
		    .m_ddr4_0_cached_addr_range(),
		    .m_is_mem_addr(),
		    .m_is_IO_addr(),
		    .m_is_near_mem_IO_addr(),
		    .m_pc_reset_value(soc_map$m_pc_reset_value),
		    .m_pcc_reset_value(),
		    .m_ddc_reset_value(),
		    .m_mtcc_reset_value(soc_map$m_mtcc_reset_value),
		    .m_mepcc_reset_value(soc_map$m_mepcc_reset_value),
		    .m_mtvec_reset_value(),
		    .m_nmivec_reset_value(soc_map$m_nmivec_reset_value));

  // rule RL_rl_reset_start
  assign CAN_FIRE_RL_rl_reset_start = !rg_state ;
  assign WILL_FIRE_RL_rl_reset_start =
	     CAN_FIRE_RL_rl_reset_start && !EN_mav_csr_write ;

  // rule RL_rl_mcycle_incr
  assign CAN_FIRE_RL_rl_mcycle_incr = 1'd1 ;
  assign WILL_FIRE_RL_rl_mcycle_incr = 1'd1 ;

  // rule RL_rl_mtime_incr
  assign CAN_FIRE_RL_rl_mtime_incr = 1'd1 ;
  assign WILL_FIRE_RL_rl_mtime_incr = 1'd1 ;

  // rule RL_rl_upd_minstret_csrrx
  assign CAN_FIRE_RL_rl_upd_minstret_csrrx =
	     MUX_rw_minstret$wset_1__SEL_1 || WILL_FIRE_RL_rl_reset_start ;
  assign WILL_FIRE_RL_rl_upd_minstret_csrrx =
	     CAN_FIRE_RL_rl_upd_minstret_csrrx ;

  // rule RL_rl_upd_minstret_incr
  assign CAN_FIRE_RL_rl_upd_minstret_incr =
	     !CAN_FIRE_RL_rl_upd_minstret_csrrx && EN_csr_minstret_incr &&
	     !rg_ctr_inhib_ir_cy[1] ;
  assign WILL_FIRE_RL_rl_upd_minstret_incr =
	     CAN_FIRE_RL_rl_upd_minstret_incr ;

  // rule RL_rl_upd_ctr_inhib_csrrx
  assign CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d900 ;
  assign WILL_FIRE_RL_rl_upd_ctr_inhib_csrrx =
	     CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx ;

  // inputs to muxes for submodule ports
  assign MUX_csr_mstatus_rg_mstatus$write_1__SEL_2 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d697 ;
  assign MUX_rg_dcsr$write_1__SEL_2 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d925 ;
  assign MUX_rg_dpc$write_1__SEL_2 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d938 ;
  assign MUX_rg_mcause$write_1__SEL_2 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d822 ;
  assign MUX_rg_mcounteren$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d768 ;
  assign MUX_rg_mepcc$write_1__SEL_2 =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd31 ;
  assign MUX_rg_mepcc$write_1__SEL_3 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d776 ;
  assign MUX_rg_mtcc$write_1__SEL_2 =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd28 &&
	     ((mav_scr_write_cap[21:16] == 6'd0) ?
		mav_scr_write_cap[1:0] :
		2'b0) ==
	     2'd0 ;
  assign MUX_rg_mtcc$write_1__SEL_3 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d717 ;
  assign MUX_rg_mtval$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d828 ;
  assign MUX_rg_tdata1$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d911 ;
  assign MUX_rw_minstret$wset_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d894 ;
  assign MUX_csr_mstatus_rg_mstatus$write_1__VAL_3 =
	     { 9'd0, fixed_up_val_23__h21352 } ;
  assign MUX_rg_dcsr$write_1__VAL_3 =
	     { rg_dcsr[31:9],
	       write_dcsr_cause_priv_cause,
	       rg_dcsr[5:2],
	       write_dcsr_cause_priv_priv } ;
  assign MUX_rg_mcause$write_1__VAL_2 =
	     { mav_csr_write_word[31], mav_csr_write_word[5:0] } ;
  assign MUX_rg_mcause$write_1__VAL_3 =
	     { !csr_trap_actions_nmi && csr_trap_actions_interrupt,
	       exc_code__h19827 } ;
  assign MUX_rg_mepcc$write_1__VAL_2 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1116 &&
	       mav_scr_write_cap[80],
	       capUnpacked_capFat_address__h15680,
	       capUnpacked_capFat_addrBits__h15681,
	       mav_scr_write_cap[39:0] } ;
  assign MUX_rg_mepcc$write_1__VAL_3 =
	     { (highOffsetBits__h11641 == 24'd0 &&
		IF_mav_csr_write_word_BIT_31_20_THEN_NOT_mav_c_ETC___d793 ||
		rg_mepcc[21:16] >= 6'd24) &&
	       rg_mepcc[26:23] == 4'd15 &&
	       rg_mepcc[80],
	       x_address__h12136,
	       x_addrBits__h12137,
	       rg_mepcc[39:0] } ;
  assign MUX_rg_minstret$write_1__VAL_1 =
	     MUX_rw_minstret$wset_1__SEL_1 ?
	       MUX_rw_minstret$wset_1__VAL_1 :
	       64'd0 ;
  assign MUX_rg_minstret$write_1__VAL_2 = rg_minstret + 64'd1 ;
  assign MUX_rg_mtcc$write_1__VAL_2 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1082 &&
	       mav_scr_write_cap[80],
	       capUnpacked_capFat_address__h14621,
	       capUnpacked_capFat_addrBits__h14622,
	       mav_scr_write_cap[39:0] } ;
  assign MUX_rg_mtcc$write_1__VAL_3 =
	     { (highOffsetBits__h10810 == 24'd0 &&
		IF_mav_csr_write_word_BIT_31_20_THEN_NOT_mav_c_ETC___d739 ||
		rg_mtcc[21:16] >= 6'd24) &&
	       rg_mtcc[26:23] == 4'd15 &&
	       rg_mtcc[80],
	       x_address__h11327,
	       x_addrBits__h11328,
	       rg_mtcc[39:0] } ;
  assign MUX_rg_mtval$write_1__VAL_2 =
	     (csr_trap_actions_exc_code == 6'd28) ?
	       { 21'd0,
		 csr_trap_actions_cheri_exc_reg,
		 csr_trap_actions_cheri_exc_code } :
	       csr_trap_actions_xtval ;
  assign MUX_rw_minstret$wset_1__VAL_1 =
	     (mav_csr_write_csr_addr == 12'hB02) ? x__h12736 : x__h12832 ;

  // inlined wires
  assign rw_mcycle$whas =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d872 ;
  assign w_ctr_inhib_ir_cy$wget =
	     { mav_csr_write_word[2], mav_csr_write_word[0] } ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = 4'h0 ;
  assign cfg_verbosity$EN = 1'b0 ;

  // register csr_mstatus_rg_mstatus
  always@(WILL_FIRE_RL_rl_reset_start or
	  MUX_csr_mstatus_rg_mstatus$write_1__SEL_2 or
	  wordxl1__h10281 or
	  EN_csr_ret_actions or
	  MUX_csr_mstatus_rg_mstatus$write_1__VAL_3 or
	  EN_csr_trap_actions or x__h21279)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: csr_mstatus_rg_mstatus$D_IN = 32'd0;
    MUX_csr_mstatus_rg_mstatus$write_1__SEL_2:
	csr_mstatus_rg_mstatus$D_IN = wordxl1__h10281;
    EN_csr_ret_actions:
	csr_mstatus_rg_mstatus$D_IN =
	    MUX_csr_mstatus_rg_mstatus$write_1__VAL_3;
    EN_csr_trap_actions: csr_mstatus_rg_mstatus$D_IN = x__h21279;
    default: csr_mstatus_rg_mstatus$D_IN =
		 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
  endcase
  assign csr_mstatus_rg_mstatus$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d697 ||
	     EN_csr_trap_actions ||
	     EN_csr_ret_actions ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_ctr_inhib_ir_cy
  assign rg_ctr_inhib_ir_cy$D_IN = w_ctr_inhib_ir_cy$wget ;
  assign rg_ctr_inhib_ir_cy$EN = CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx ;

  // register rg_dcsr
  always@(WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_dcsr$write_1__SEL_2 or
	  new_dcsr__h13124 or
	  EN_write_dcsr_cause_priv or MUX_rg_dcsr$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_dcsr$D_IN = 32'd1073741843;
    MUX_rg_dcsr$write_1__SEL_2: rg_dcsr$D_IN = new_dcsr__h13124;
    EN_write_dcsr_cause_priv: rg_dcsr$D_IN = MUX_rg_dcsr$write_1__VAL_3;
    default: rg_dcsr$D_IN =
		 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
  endcase
  assign rg_dcsr$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d925 ||
	     EN_write_dcsr_cause_priv ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_dpc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_pc_reset_value or
	  MUX_rg_dpc$write_1__SEL_2 or
	  mav_csr_write_word or EN_write_dpc or write_dpc_pc)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_dpc$D_IN = soc_map$m_pc_reset_value;
    MUX_rg_dpc$write_1__SEL_2: rg_dpc$D_IN = mav_csr_write_word;
    EN_write_dpc: rg_dpc$D_IN = write_dpc_pc;
    default: rg_dpc$D_IN =
		 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
  endcase
  assign rg_dpc$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d938 ||
	     EN_write_dpc ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_dscratch0
  assign rg_dscratch0$D_IN = mav_csr_write_word ;
  assign rg_dscratch0$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d942 ;

  // register rg_dscratch1
  assign rg_dscratch1$D_IN = mav_csr_write_word ;
  assign rg_dscratch1$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d946 ;

  // register rg_mcause
  always@(WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_mcause$write_1__SEL_2 or
	  MUX_rg_mcause$write_1__VAL_2 or
	  EN_csr_trap_actions or MUX_rg_mcause$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_mcause$D_IN = 7'd0;
    MUX_rg_mcause$write_1__SEL_2:
	rg_mcause$D_IN = MUX_rg_mcause$write_1__VAL_2;
    EN_csr_trap_actions: rg_mcause$D_IN = MUX_rg_mcause$write_1__VAL_3;
    default: rg_mcause$D_IN = 7'bxxxxxxx /* unspecified value */ ;
  endcase
  assign rg_mcause$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d822 ||
	     EN_csr_trap_actions ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mccsr
  assign rg_mccsr$D_IN =
	     { csr_trap_actions_cheri_exc_reg,
	       csr_trap_actions_cheri_exc_code } ;
  assign rg_mccsr$EN =
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     csr_trap_actions_exc_code == 6'd28 ;

  // register rg_mcounteren
  assign rg_mcounteren$D_IN =
	     MUX_rg_mcounteren$write_1__SEL_1 ? mav_csr_write_word : 32'd0 ;
  assign rg_mcounteren$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d768 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mcycle
  assign rg_mcycle$D_IN = rw_mcycle$whas ? x__h3603 : x__h3636 ;
  assign rg_mcycle$EN = rw_mcycle$whas || !rg_ctr_inhib_ir_cy[0] ;

  // register rg_mepcc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_mepcc_reset_value or
	  MUX_rg_mepcc$write_1__SEL_2 or
	  MUX_rg_mepcc$write_1__VAL_2 or
	  MUX_rg_mepcc$write_1__SEL_3 or
	  MUX_rg_mepcc$write_1__VAL_3 or
	  EN_csr_trap_actions or csr_trap_actions_pcc)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_mepcc$D_IN = soc_map$m_mepcc_reset_value;
    MUX_rg_mepcc$write_1__SEL_2: rg_mepcc$D_IN = MUX_rg_mepcc$write_1__VAL_2;
    MUX_rg_mepcc$write_1__SEL_3: rg_mepcc$D_IN = MUX_rg_mepcc$write_1__VAL_3;
    EN_csr_trap_actions: rg_mepcc$D_IN = csr_trap_actions_pcc[90:10];
    default: rg_mepcc$D_IN =
		 81'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
  endcase
  assign rg_mepcc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd31 ||
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d776 ||
	     WILL_FIRE_RL_rl_reset_start ||
	     EN_csr_trap_actions ;

  // register rg_minstret
  assign rg_minstret$D_IN =
	     WILL_FIRE_RL_rl_upd_minstret_csrrx ?
	       MUX_rg_minstret$write_1__VAL_1 :
	       MUX_rg_minstret$write_1__VAL_2 ;
  assign rg_minstret$EN =
	     WILL_FIRE_RL_rl_upd_minstret_csrrx ||
	     WILL_FIRE_RL_rl_upd_minstret_incr ;

  // register rg_mscratch
  assign rg_mscratch$D_IN = mav_csr_write_word ;
  assign rg_mscratch$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d772 ;

  // register rg_mscratchc
  assign rg_mscratchc$D_IN =
	     WILL_FIRE_RL_rl_reset_start ? 81'd131743744 : mav_scr_write_cap ;
  assign rg_mscratchc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd30 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mtcc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_mtcc_reset_value or
	  MUX_rg_mtcc$write_1__SEL_2 or
	  MUX_rg_mtcc$write_1__VAL_2 or
	  MUX_rg_mtcc$write_1__SEL_3 or MUX_rg_mtcc$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_mtcc$D_IN = soc_map$m_mtcc_reset_value;
    MUX_rg_mtcc$write_1__SEL_2: rg_mtcc$D_IN = MUX_rg_mtcc$write_1__VAL_2;
    MUX_rg_mtcc$write_1__SEL_3: rg_mtcc$D_IN = MUX_rg_mtcc$write_1__VAL_3;
    default: rg_mtcc$D_IN =
		 81'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
  endcase
  assign rg_mtcc$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d717 ||
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd28 &&
	     ((mav_scr_write_cap[21:16] == 6'd0) ?
		mav_scr_write_cap[1:0] :
		2'b0) ==
	     2'd0 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mtdc
  assign rg_mtdc$D_IN =
	     WILL_FIRE_RL_rl_reset_start ? 81'd131743744 : mav_scr_write_cap ;
  assign rg_mtdc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd29 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mtime
  assign rg_mtime$D_IN = rg_mtime + 64'd1 ;
  assign rg_mtime$EN = 1'd1 ;

  // register rg_mtval
  assign rg_mtval$D_IN =
	     MUX_rg_mtval$write_1__SEL_1 ?
	       mav_csr_write_word :
	       MUX_rg_mtval$write_1__VAL_2 ;
  assign rg_mtval$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d828 ||
	     EN_csr_trap_actions ;

  // register rg_nmi
  assign rg_nmi$D_IN = !WILL_FIRE_RL_rl_reset_start && nmi_req_set_not_clear ;
  assign rg_nmi$EN = 1'b1 ;

  // register rg_nmi_vector
  assign rg_nmi_vector$D_IN = soc_map$m_nmivec_reset_value ;
  assign rg_nmi_vector$EN = WILL_FIRE_RL_rl_reset_start ;

  // register rg_state
  assign rg_state$D_IN = !EN_server_reset_request_put ;
  assign rg_state$EN =
	     EN_server_reset_request_put || WILL_FIRE_RL_rl_reset_start ;

  // register rg_tdata1
  assign rg_tdata1$D_IN =
	     MUX_rg_tdata1$write_1__SEL_1 ? new_csr_value__h12993 : 32'd0 ;
  assign rg_tdata1$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d911 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_tdata2
  assign rg_tdata2$D_IN = mav_csr_write_word ;
  assign rg_tdata2$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d917 ;

  // register rg_tdata3
  assign rg_tdata3$D_IN = mav_csr_write_word ;
  assign rg_tdata3$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d921 ;

  // register rg_tselect
  assign rg_tselect$D_IN = 32'd0 ;
  assign rg_tselect$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d907 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // submodule csr_mie
  assign csr_mie$mav_write_misa = 28'd68161797 ;
  assign csr_mie$mav_write_wordxl = mav_csr_write_word ;
  assign csr_mie$EN_reset = WILL_FIRE_RL_rl_reset_start ;
  assign csr_mie$EN_mav_write =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d713 ;

  // submodule csr_mip
  assign csr_mip$m_external_interrupt_req_req =
	     m_external_interrupt_req_set_not_clear ;
  assign csr_mip$mav_write_misa = 28'd68161797 ;
  assign csr_mip$mav_write_wordxl = mav_csr_write_word ;
  assign csr_mip$s_external_interrupt_req_req =
	     s_external_interrupt_req_set_not_clear ;
  assign csr_mip$software_interrupt_req_req =
	     software_interrupt_req_set_not_clear ;
  assign csr_mip$timer_interrupt_req_req = timer_interrupt_req_set_not_clear ;
  assign csr_mip$EN_reset = WILL_FIRE_RL_rl_reset_start ;
  assign csr_mip$EN_mav_write =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d832 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = EN_server_reset_request_put ;
  assign f_reset_rsps$DEQ = EN_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule perf_counters
  assign perf_counters$send_performance_events_evts =
	     send_performance_events_evts ;
  assign perf_counters$write_counter_idx =
	     (!mav_csr_write_csr_addr_ULT_0xB03___d659 &&
	      mav_csr_write_csr_addr_ULE_0xB1F___d661) ?
	       x__h9913[4:0] :
	       x__h10019[4:0] ;
  assign perf_counters$write_counter_val =
	     (!mav_csr_write_csr_addr_ULT_0xB03___d659 &&
	      mav_csr_write_csr_addr_ULE_0xB1F___d661) ?
	       new_value__h9846 :
	       new_value__h9980 ;
  assign perf_counters$write_ctr_inhibit_val = mav_csr_write_word[31:3] ;
  assign perf_counters$write_ctr_sel_idx = x__h10106[4:0] ;
  assign perf_counters$write_ctr_sel_val = mav_csr_write_word[6:0] ;
  assign perf_counters$EN_write_counter =
	     EN_mav_csr_write &&
	     (!mav_csr_write_csr_addr_ULT_0xB03___d659 &&
	      mav_csr_write_csr_addr_ULE_0xB1F___d661 ||
	      !mav_csr_write_csr_addr_ULT_0xB83___d663 &&
	      mav_csr_write_csr_addr_ULE_0xB9F___d665) ;
  assign perf_counters$EN_write_ctr_sel =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d689 ;
  assign perf_counters$EN_write_ctr_inhibit =
	     CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx ;

  // submodule soc_map
  assign soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign soc_map$m_is_mem_addr_addr = 64'h0 ;
  assign soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // remaining internal signals
  assign IF_IF_csr_trap_actions_interrupt_AND_NOT_csr_t_ETC___d1568 =
	     _theResult_____2__h19131[31] ?
	       x__h20685[7:0] >= toBounds__h20010 :
	       x__h20685[7:0] <= toBoundsM1__h20011 ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2052 =
	     (!csr_mip$mv_read[11] || !csr_mie$mv_read[11] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ?
	       { csr_mip$mv_read[3] && csr_mie$mv_read[3] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd3 } :
	       { csr_mip$mv_read[11], 6'd11 } ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2053 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1980 ?
	       { csr_mip$mv_read[7] && csr_mie$mv_read[7] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd7 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2052 ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2054 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1987 ?
	       { csr_mip$mv_read[9] && csr_mie$mv_read[9] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd9 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2053 ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2055 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1994 ?
	       { csr_mip$mv_read[1] && csr_mie$mv_read[1] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd1 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2054 ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2056 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2001 ?
	       { csr_mip$mv_read[5] && csr_mie$mv_read[5] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd5 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2055 ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2057 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2008 ?
	       { csr_mip$mv_read[8] && csr_mie$mv_read[8] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd8 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2056 ;
  assign IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2058 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2015 ?
	       { csr_mip$mv_read[0] && csr_mie$mv_read[0] &&
		 (interrupt_pending_cur_priv != 2'b11 ||
		  csr_mstatus_rg_mstatus[3]),
		 6'd0 } :
	       IF_NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_N_ETC___d2057 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0x323_19_20_A_ETC___d654 =
	     (mav_read_csr_csr_addr >= 12'h323 &&
	      mav_read_csr_csr_addr <= 12'h33F) ?
	       ((idx__h9130 < 12'd29) ? { 25'd0, x__h9571 } : 32'd0) :
	       IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0xB03_11_12_A_ETC___d656 =
	     (mav_read_csr_csr_addr >= 12'hB03 &&
	      mav_read_csr_csr_addr <= 12'hB1F) ?
	       ((idx__h9084 < 12'd29) ? x__h9471[31:0] : 32'd0) :
	       IF_NOT_mav_read_csr_csr_addr_ULT_0xB83_15_16_A_ETC___d655 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0xB83_15_16_A_ETC___d655 =
	     (mav_read_csr_csr_addr >= 12'hB83 &&
	      mav_read_csr_csr_addr <= 12'hB9F) ?
	       ((idx__h9107 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612[63:32] :
		  32'd0) :
	       IF_NOT_mav_read_csr_csr_addr_ULT_0x323_19_20_A_ETC___d654 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0xC03_03_04_A_ETC___d658 =
	     (mav_read_csr_csr_addr >= 12'hC03 &&
	      mav_read_csr_csr_addr <= 12'hC1F) ?
	       ((idx__h9038 < 12'd29) ? x__h9371[31:0] : 32'd0) :
	       IF_NOT_mav_read_csr_csr_addr_ULT_0xC83_07_08_A_ETC___d657 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0xC83_07_08_A_ETC___d657 =
	     (mav_read_csr_csr_addr >= 12'hC83 &&
	      mav_read_csr_csr_addr <= 12'hC9F) ?
	       ((idx__h9061 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602[63:32] :
		  32'd0) :
	       IF_NOT_mav_read_csr_csr_addr_ULT_0xB03_11_12_A_ETC___d656 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0x323_0_1_AND_rea_ETC___d330 =
	     (read_csr_csr_addr >= 12'h323 && read_csr_csr_addr <= 12'h33F) ?
	       ((idx__h4084 < 12'd29) ? { 25'd0, x__h5676 } : 32'd0) :
	       IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0xB03_2_3_AND_rea_ETC___d332 =
	     (read_csr_csr_addr >= 12'hB03 && read_csr_csr_addr <= 12'hB1F) ?
	       ((idx__h4038 < 12'd29) ? x__h5576[31:0] : 32'd0) :
	       IF_NOT_read_csr_csr_addr_ULT_0xB83_6_7_AND_rea_ETC___d331 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0xB83_6_7_AND_rea_ETC___d331 =
	     (read_csr_csr_addr >= 12'hB83 && read_csr_csr_addr <= 12'hB9F) ?
	       ((idx__h4061 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173[63:32] :
		  32'd0) :
	       IF_NOT_read_csr_csr_addr_ULT_0x323_0_1_AND_rea_ETC___d330 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0xC03_4_5_AND_rea_ETC___d334 =
	     (read_csr_csr_addr >= 12'hC03 && read_csr_csr_addr <= 12'hC1F) ?
	       ((idx__h3992 < 12'd29) ? x__h4325[31:0] : 32'd0) :
	       IF_NOT_read_csr_csr_addr_ULT_0xC83_8_9_AND_rea_ETC___d333 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0xC83_8_9_AND_rea_ETC___d333 =
	     (read_csr_csr_addr >= 12'hC83 && read_csr_csr_addr <= 12'hC9F) ?
	       ((idx__h4015 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163[63:32] :
		  32'd0) :
	       IF_NOT_read_csr_csr_addr_ULT_0xB03_2_3_AND_rea_ETC___d332 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0x323_51_52_ETC___d486 =
	     (read_csr_port2_csr_addr >= 12'h323 &&
	      read_csr_port2_csr_addr <= 12'h33F) ?
	       ((idx__h7746 < 12'd29) ? { 25'd0, x__h8187 } : 32'd0) :
	       IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0xB03_43_44_ETC___d488 =
	     (read_csr_port2_csr_addr >= 12'hB03 &&
	      read_csr_port2_csr_addr <= 12'hB1F) ?
	       ((idx__h7700 < 12'd29) ? x__h8087[31:0] : 32'd0) :
	       IF_NOT_read_csr_port2_csr_addr_ULT_0xB83_47_48_ETC___d487 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0xB83_47_48_ETC___d487 =
	     (read_csr_port2_csr_addr >= 12'hB83 &&
	      read_csr_port2_csr_addr <= 12'hB9F) ?
	       ((idx__h7723 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444[63:32] :
		  32'd0) :
	       IF_NOT_read_csr_port2_csr_addr_ULT_0x323_51_52_ETC___d486 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0xC03_35_36_ETC___d490 =
	     (read_csr_port2_csr_addr >= 12'hC03 &&
	      read_csr_port2_csr_addr <= 12'hC1F) ?
	       ((idx__h7654 < 12'd29) ? x__h7987[31:0] : 32'd0) :
	       IF_NOT_read_csr_port2_csr_addr_ULT_0xC83_39_40_ETC___d489 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0xC83_39_40_ETC___d489 =
	     (read_csr_port2_csr_addr >= 12'hC83 &&
	      read_csr_port2_csr_addr <= 12'hC9F) ?
	       ((idx__h7677 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434[63:32] :
		  32'd0) :
	       IF_NOT_read_csr_port2_csr_addr_ULT_0xB03_43_44_ETC___d488 ;
  assign IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47__ETC___d1075 =
	     SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[31] ?
	       x__h14481[7:0] >= toBounds__h15054 :
	       x__h14481[7:0] <= toBoundsM1__h15055 ;
  assign IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47__ETC___d1111 =
	     SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[31] ?
	       x__h15515[7:0] >= toBounds__h15054 :
	       x__h15515[7:0] <= toBoundsM1__h15055 ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       _theResult___fst__h21433 :
	       _theResult___fst__h21634 ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1647 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       { csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608[12:11],
		 _theResult___fst__h21433 } :
	       { to_y__h21633, _theResult___fst__h21634 } ;
  assign IF_mav_csr_write_word_BIT_31_20_THEN_NOT_mav_c_ETC___d739 =
	     mav_csr_write_word[31] ?
	       x__h11182[7:0] >= toBounds__h10819 :
	       x__h11182[7:0] <= toBoundsM1__h10820 ;
  assign IF_mav_csr_write_word_BIT_31_20_THEN_NOT_mav_c_ETC___d793 =
	     mav_csr_write_word[31] ?
	       x__h11997[7:0] >= toBounds__h11650 :
	       x__h11997[7:0] <= toBoundsM1__h11651 ;
  assign IF_mav_scr_write_cap_BITS_21_TO_16_027_EQ_0_02_ETC___d1229 =
	     { x1_avValue_flags__h14913,
	       x1_avValue_otype__h14915,
	       ((mav_scr_write_cap[21:16] == 6'd0) ?
		  mav_scr_write_cap[1:0] :
		  2'b0) !=
	       2'd0 ||
	       mav_scr_write_cap[22],
	       (((mav_scr_write_cap[21:16] == 6'd0) ?
		   mav_scr_write_cap[1:0] :
		   2'b0) ==
		2'd0) ?
		 mav_scr_write_cap[21:0] :
		 22'd1720320 } ;
  assign IF_mav_scr_write_cap_BITS_21_TO_16_027_ULT_25__ETC___d1172 =
	     (mav_scr_write_cap[21:16] < 6'd25 &&
	      _0b0_CONCAT_mav_scr_write_cap_BITS_79_TO_56_085_ETC___d1164 >
	      2'd1) ?
	       result__h16575 :
	       ret__h16171 ;
  assign IF_mav_scr_write_scr_addr_EQ_29_102_THEN_mav_s_ETC___d1270 =
	     { CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5,
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[39],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[38],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[37],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[36],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[35],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[34],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[33],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[32],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[31],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[30],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[29],
	       (mav_scr_write_scr_addr == 5'd29 ||
		mav_scr_write_scr_addr == 5'd31 ||
		mav_scr_write_scr_addr == 5'd30) &&
	       mav_scr_write_cap[28],
	       CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6,
	       CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7,
	       CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8,
	       CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 } ;
  assign IF_mav_scr_write_scr_addr_EQ_29_102_THEN_mav_s_ETC___d1271 =
	     { CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q10,
	       CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q11,
	       IF_mav_scr_write_scr_addr_EQ_29_102_THEN_mav_s_ETC___d1270 } ;
  assign IF_rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc__ETC___d1639 =
	     { (rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc_51__ETC___d1634 ==
		rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258) ?
		 2'd0 :
		 ((rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc_51__ETC___d1634 &&
		   !rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258) ?
		    2'd1 :
		    2'd3),
	       IF_rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51__ETC___d263 } ;
  assign IF_rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51__ETC___d263 =
	     (rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51_BIT_ETC___d256 ==
	      rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258) ?
	       2'd0 :
	       ((rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51_BIT_ETC___d256 &&
		 !rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258) ?
		  2'd1 :
		  2'd3) ;
  assign NOT_access_permitted_1_csr_addr_ULT_0xC03_648__ETC___d1661 =
	     !access_permitted_1_csr_addr_ULT_0xC03___d1648 &&
	     access_permitted_1_csr_addr_ULE_0xC1F___d1650 ||
	     access_permitted_1_csr_addr >= 12'hB03 &&
	     access_permitted_1_csr_addr <= 12'hB1F ||
	     !access_permitted_1_csr_addr_ULT_0xC83___d1657 &&
	     access_permitted_1_csr_addr_ULE_0xC9F___d1659 ;
  assign NOT_access_permitted_1_csr_addr_ULT_0xC03_648__ETC___d1743 =
	     (NOT_access_permitted_1_csr_addr_ULT_0xC03_648__ETC___d1661 ||
	      access_permitted_1_csr_addr >= 12'hB83 &&
	      access_permitted_1_csr_addr <= 12'hB9F ||
	      access_permitted_1_csr_addr >= 12'h323 &&
	      access_permitted_1_csr_addr <= 12'h33F ||
	      access_permitted_1_csr_addr == 12'hC00 ||
	      access_permitted_1_csr_addr == 12'hC01 ||
	      access_permitted_1_csr_addr == 12'hC02 ||
	      access_permitted_1_csr_addr == 12'hC80 ||
	      access_permitted_1_csr_addr == 12'hC81 ||
	      access_permitted_1_csr_addr == 12'hC82 ||
	      access_permitted_1_csr_addr == 12'hF11 ||
	      access_permitted_1_csr_addr == 12'hF12 ||
	      access_permitted_1_csr_addr == 12'hF13 ||
	      access_permitted_1_csr_addr == 12'hF14 ||
	      access_permitted_1_csr_addr == 12'h300 ||
	      access_permitted_1_csr_addr == 12'h301 ||
	      access_permitted_1_csr_addr == 12'h304 ||
	      access_permitted_1_csr_addr == 12'h305 ||
	      access_permitted_1_csr_addr == 12'h306 ||
	      access_permitted_1_csr_addr == 12'h340 ||
	      access_permitted_1_csr_addr == 12'h341 ||
	      access_permitted_1_csr_addr == 12'h342 ||
	      access_permitted_1_csr_addr == 12'h343 ||
	      access_permitted_1_csr_addr == 12'h344 ||
	      access_permitted_1_csr_addr == 12'hBC0 ||
	      access_permitted_1_csr_addr == 12'hB00 ||
	      access_permitted_1_csr_addr == 12'hB02 ||
	      access_permitted_1_csr_addr == 12'hB80 ||
	      access_permitted_1_csr_addr == 12'hB82 ||
	      access_permitted_1_csr_addr == 12'h320 ||
	      access_permitted_1_csr_addr == 12'h7A0 ||
	      access_permitted_1_csr_addr == 12'h7A1 ||
	      access_permitted_1_csr_addr == 12'h7A2 ||
	      access_permitted_1_csr_addr == 12'h7A3 ||
	      access_permitted_1_csr_addr == 12'h7B0 ||
	      access_permitted_1_csr_addr == 12'h7B1 ||
	      access_permitted_1_csr_addr == 12'h7B2 ||
	      access_permitted_1_csr_addr == 12'h7B3) &&
	     access_permitted_1_priv >= access_permitted_1_csr_addr[9:8] ;
  assign NOT_access_permitted_1_read_not_write_754_OR_a_ETC___d1761 =
	     (!access_permitted_1_read_not_write ||
	      access_permitted_1_csr_addr_ULT_0xC03___d1648 ||
	      !access_permitted_1_csr_addr_ULE_0xC1F___d1650) &&
	     (!access_permitted_1_read_not_write ||
	      access_permitted_1_csr_addr_ULT_0xC83___d1657 ||
	      !access_permitted_1_csr_addr_ULE_0xC9F___d1659) ;
  assign NOT_access_permitted_1_read_not_write_754_OR_a_ETC___d1779 =
	     NOT_access_permitted_1_read_not_write_754_OR_a_ETC___d1761 &&
	     (access_permitted_1_csr_addr != 12'hC00 ||
	      !access_permitted_1_read_not_write) &&
	     (access_permitted_1_csr_addr != 12'hC01 ||
	      !access_permitted_1_read_not_write) &&
	     (access_permitted_1_csr_addr != 12'hC02 ||
	      !access_permitted_1_read_not_write) &&
	     (access_permitted_1_csr_addr != 12'hC80 ||
	      !access_permitted_1_read_not_write) &&
	     (access_permitted_1_csr_addr != 12'hC81 ||
	      !access_permitted_1_read_not_write) &&
	     (access_permitted_1_csr_addr != 12'hC82 ||
	      !access_permitted_1_read_not_write) ;
  assign NOT_access_permitted_2_csr_addr_ULT_0xC03_780__ETC___d1793 =
	     !access_permitted_2_csr_addr_ULT_0xC03___d1780 &&
	     access_permitted_2_csr_addr_ULE_0xC1F___d1782 ||
	     access_permitted_2_csr_addr >= 12'hB03 &&
	     access_permitted_2_csr_addr <= 12'hB1F ||
	     !access_permitted_2_csr_addr_ULT_0xC83___d1789 &&
	     access_permitted_2_csr_addr_ULE_0xC9F___d1791 ;
  assign NOT_access_permitted_2_csr_addr_ULT_0xC03_780__ETC___d1875 =
	     (NOT_access_permitted_2_csr_addr_ULT_0xC03_780__ETC___d1793 ||
	      access_permitted_2_csr_addr >= 12'hB83 &&
	      access_permitted_2_csr_addr <= 12'hB9F ||
	      access_permitted_2_csr_addr >= 12'h323 &&
	      access_permitted_2_csr_addr <= 12'h33F ||
	      access_permitted_2_csr_addr == 12'hC00 ||
	      access_permitted_2_csr_addr == 12'hC01 ||
	      access_permitted_2_csr_addr == 12'hC02 ||
	      access_permitted_2_csr_addr == 12'hC80 ||
	      access_permitted_2_csr_addr == 12'hC81 ||
	      access_permitted_2_csr_addr == 12'hC82 ||
	      access_permitted_2_csr_addr == 12'hF11 ||
	      access_permitted_2_csr_addr == 12'hF12 ||
	      access_permitted_2_csr_addr == 12'hF13 ||
	      access_permitted_2_csr_addr == 12'hF14 ||
	      access_permitted_2_csr_addr == 12'h300 ||
	      access_permitted_2_csr_addr == 12'h301 ||
	      access_permitted_2_csr_addr == 12'h304 ||
	      access_permitted_2_csr_addr == 12'h305 ||
	      access_permitted_2_csr_addr == 12'h306 ||
	      access_permitted_2_csr_addr == 12'h340 ||
	      access_permitted_2_csr_addr == 12'h341 ||
	      access_permitted_2_csr_addr == 12'h342 ||
	      access_permitted_2_csr_addr == 12'h343 ||
	      access_permitted_2_csr_addr == 12'h344 ||
	      access_permitted_2_csr_addr == 12'hBC0 ||
	      access_permitted_2_csr_addr == 12'hB00 ||
	      access_permitted_2_csr_addr == 12'hB02 ||
	      access_permitted_2_csr_addr == 12'hB80 ||
	      access_permitted_2_csr_addr == 12'hB82 ||
	      access_permitted_2_csr_addr == 12'h320 ||
	      access_permitted_2_csr_addr == 12'h7A0 ||
	      access_permitted_2_csr_addr == 12'h7A1 ||
	      access_permitted_2_csr_addr == 12'h7A2 ||
	      access_permitted_2_csr_addr == 12'h7A3 ||
	      access_permitted_2_csr_addr == 12'h7B0 ||
	      access_permitted_2_csr_addr == 12'h7B1 ||
	      access_permitted_2_csr_addr == 12'h7B2 ||
	      access_permitted_2_csr_addr == 12'h7B3) &&
	     access_permitted_2_priv >= access_permitted_2_csr_addr[9:8] ;
  assign NOT_access_permitted_2_read_not_write_885_OR_a_ETC___d1892 =
	     (!access_permitted_2_read_not_write ||
	      access_permitted_2_csr_addr_ULT_0xC03___d1780 ||
	      !access_permitted_2_csr_addr_ULE_0xC1F___d1782) &&
	     (!access_permitted_2_read_not_write ||
	      access_permitted_2_csr_addr_ULT_0xC83___d1789 ||
	      !access_permitted_2_csr_addr_ULE_0xC9F___d1791) ;
  assign NOT_access_permitted_2_read_not_write_885_OR_a_ETC___d1910 =
	     NOT_access_permitted_2_read_not_write_885_OR_a_ETC___d1892 &&
	     (access_permitted_2_csr_addr != 12'hC00 ||
	      !access_permitted_2_read_not_write) &&
	     (access_permitted_2_csr_addr != 12'hC01 ||
	      !access_permitted_2_read_not_write) &&
	     (access_permitted_2_csr_addr != 12'hC02 ||
	      !access_permitted_2_read_not_write) &&
	     (access_permitted_2_csr_addr != 12'hC80 ||
	      !access_permitted_2_read_not_write) &&
	     (access_permitted_2_csr_addr != 12'hC81 ||
	      !access_permitted_2_read_not_write) &&
	     (access_permitted_2_csr_addr != 12'hC82 ||
	      !access_permitted_2_read_not_write) ;
  assign NOT_cfg_verbosity_read__89_ULE_1_90___d991 = cfg_verbosity > 4'd1 ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1980 =
	     (!csr_mip$mv_read[11] || !csr_mie$mv_read[11] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) &&
	     (!csr_mip$mv_read[3] || !csr_mie$mv_read[3] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1987 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1980 &&
	     (!csr_mip$mv_read[7] || !csr_mie$mv_read[7] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1994 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1987 &&
	     (!csr_mip$mv_read[9] || !csr_mie$mv_read[9] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2001 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d1994 &&
	     (!csr_mip$mv_read[1] || !csr_mie$mv_read[1] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2008 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2001 &&
	     (!csr_mip$mv_read[5] || !csr_mie$mv_read[5] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2015 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2008 &&
	     (!csr_mip$mv_read[8] || !csr_mie$mv_read[8] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2022 =
	     NOT_csr_mip_mv_read__80_BIT_11_965_966_OR_NOT__ETC___d2015 &&
	     (!csr_mip$mv_read[0] || !csr_mie$mv_read[0] ||
	      interrupt_pending_cur_priv == 2'b11 &&
	      !csr_mstatus_rg_mstatus[3]) ;
  assign NOT_csr_trap_actions_nmi_418_AND_csr_trap_acti_ETC___d1496 =
	     !csr_trap_actions_nmi && csr_trap_actions_interrupt &&
	     exc_code__h19827 != 6'd0 &&
	     exc_code__h19827 != 6'd1 &&
	     exc_code__h19827 != 6'd2 &&
	     exc_code__h19827 != 6'd3 &&
	     exc_code__h19827 != 6'd4 &&
	     exc_code__h19827 != 6'd5 &&
	     exc_code__h19827 != 6'd6 &&
	     exc_code__h19827 != 6'd7 &&
	     exc_code__h19827 != 6'd8 &&
	     exc_code__h19827 != 6'd9 &&
	     exc_code__h19827 != 6'd10 &&
	     exc_code__h19827 != 6'd11 ;
  assign NOT_mav_scr_write_cap_BITS_21_TO_16_027_ULT_24_ETC___d1078 =
	     mav_scr_write_cap[21:16] >= 6'd24 ;
  assign SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054 =
	     x__h15099 | addrLSB__h16727 ;
  assign SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1082 =
	     (highOffsetBits__h15045 == 24'd0 &&
	      IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47__ETC___d1075 ||
	      NOT_mav_scr_write_cap_BITS_21_TO_16_027_ULT_24_ETC___d1078) &&
	     mav_scr_write_cap[26:23] == 4'd15 ;
  assign SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1116 =
	     (highOffsetBits__h15045 == 24'd0 &&
	      IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47__ETC___d1111 ||
	      NOT_mav_scr_write_cap_BITS_21_TO_16_027_ULT_24_ETC___d1078) &&
	     (mav_scr_write_cap[26:23] == 4'd15 ||
	      !SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[0]) ;
  assign SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274 =
	     x__h7342 | addrLSB__h7331 ;
  assign SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245 =
	     x__h7111 | addrLSB__h7100 ;
  assign _0b0_CONCAT_mav_scr_write_cap_BITS_79_TO_56_085_ETC___d1164 =
	     ret__h16171[32:31] -
	     { 1'b0,
	       (mav_scr_write_cap[21:16] == 6'd24) ?
		 mav_scr_write_cap[7] :
		 mav_scr_write_cap_BITS_79_TO_56_PLUS_SEXT_x693_ETC__q3[23] } ;
  assign _theResult_____2__h19131 =
	     (csr_trap_actions_interrupt && !csr_trap_actions_nmi &&
	      SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[0]) ?
	       exc_pc___1__h19196 :
	       exc_pc__h19129 ;
  assign _theResult___fst__h21433 =
	     { csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608[31:13],
	       2'd0,
	       csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608[10:0] } ;
  assign _theResult___fst__h21634 =
	     { csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608[31:9],
	       1'd0,
	       csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608[7:0] } ;
  assign a_capFat_otype__h22062 =
	     (rg_mepcc[26:23] == 4'd14) ? 4'd15 : rg_mepcc[26:23] ;
  assign access_permitted_1_csr_addr_ULE_0xC1F___d1650 =
	     access_permitted_1_csr_addr <= 12'hC1F ;
  assign access_permitted_1_csr_addr_ULE_0xC9F___d1659 =
	     access_permitted_1_csr_addr <= 12'hC9F ;
  assign access_permitted_1_csr_addr_ULT_0xC03___d1648 =
	     access_permitted_1_csr_addr < 12'hC03 ;
  assign access_permitted_1_csr_addr_ULT_0xC83___d1657 =
	     access_permitted_1_csr_addr < 12'hC83 ;
  assign access_permitted_2_csr_addr_ULE_0xC1F___d1782 =
	     access_permitted_2_csr_addr <= 12'hC1F ;
  assign access_permitted_2_csr_addr_ULE_0xC9F___d1791 =
	     access_permitted_2_csr_addr <= 12'hC9F ;
  assign access_permitted_2_csr_addr_ULT_0xC03___d1780 =
	     access_permitted_2_csr_addr < 12'hC03 ;
  assign access_permitted_2_csr_addr_ULT_0xC83___d1789 =
	     access_permitted_2_csr_addr < 12'hC83 ;
  assign addBase__h11347 =
	     { {22{x__h11398[9]}}, x__h11398 } << rg_mtcc[21:16] ;
  assign addBase__h12156 =
	     { {22{x__h12207[9]}}, x__h12207 } << rg_mepcc[21:16] ;
  assign addBase__h16053 =
	     { {22{x__h16104[9]}}, x__h16104 } << mav_scr_write_cap[21:16] ;
  assign addBase__h20795 =
	     { {22{x__h20851[9]}}, x__h20851 } << rg_mtcc[21:16] ;
  assign addTop__h16169 =
	     { {23{x__h16229[9]}}, x__h16229 } << mav_scr_write_cap[21:16] ;
  assign addrLSB__h16727 = mav_scr_write_cap[79:48] & y__h16818 ;
  assign addrLSB__h17318 = csr_trap_actions_pcc[89:58] & y__h17449 ;
  assign addrLSB__h7100 = rg_mtcc[79:48] & y__h7241 ;
  assign addrLSB__h7331 = rg_mepcc[79:48] & y__h7469 ;
  assign b__h21470 =
	     csr_mstatus_rg_mstatus[{ 3'd1, csr_ret_actions_from_priv }] ;
  assign base__h17316 =
	     { csr_trap_actions_pcc[1:0], csr_trap_actions_pcc[17:10] } ;
  assign capUnpacked_capFat_addrBits__h14622 =
	     { mask__h14601, 6'd63 } & newAddrBits__h14600 ;
  assign capUnpacked_capFat_addrBits__h15681 =
	     { mask__h14601, 6'd63 } & newAddrBits__h15659 ;
  assign capUnpacked_capFat_address__h14621 =
	     mav_scr_write_cap_BITS_79_TO_56_085_AND_167772_ETC___d1090 +
	     new_csr__h13916 ;
  assign capUnpacked_capFat_address__h15680 =
	     mav_scr_write_cap_BITS_79_TO_56_085_AND_167772_ETC___d1090 +
	     new_csr__h15028 ;
  assign csr_counter_read_fault_csr_addr_EQ_0xC00_930_A_ETC___d1954 =
	     csr_counter_read_fault_csr_addr == 12'hC00 &&
	     !rg_mcounteren[0] ||
	     csr_counter_read_fault_csr_addr == 12'hC01 &&
	     !rg_mcounteren[1] ||
	     csr_counter_read_fault_csr_addr == 12'hC02 &&
	     !rg_mcounteren[2] ||
	     csr_counter_read_fault_csr_addr >= 12'hC03 &&
	     csr_counter_read_fault_csr_addr <= 12'hC1F &&
	     !rg_mcounteren_BITS_31_TO_3__q4[i__h34635[4:0]] ;
  assign csr_counter_read_fault_csr_addr_EQ_0xC00_930_A_ETC___d1964 =
	     csr_counter_read_fault_csr_addr_EQ_0xC00_930_A_ETC___d1954 ||
	     csr_counter_read_fault_csr_addr >= 12'hC83 &&
	     csr_counter_read_fault_csr_addr <= 12'hC9F &&
	     !rg_mcounteren_BITS_31_TO_3__q4[i__h34681[4:0]] ;
  assign csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608 =
	     x__h21466 | mask__h21454 ;
  assign csr_trap_actions_nmi_OR_NOT_csr_trap_actions_i_ETC___d1547 =
	     (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	     exc_code__h19827 != 6'd0 &&
	     exc_code__h19827 != 6'd1 &&
	     exc_code__h19827 != 6'd2 &&
	     exc_code__h19827 != 6'd3 &&
	     exc_code__h19827 != 6'd4 &&
	     exc_code__h19827 != 6'd5 &&
	     exc_code__h19827 != 6'd6 &&
	     exc_code__h19827 != 6'd7 &&
	     exc_code__h19827 != 6'd8 &&
	     exc_code__h19827 != 6'd9 &&
	     exc_code__h19827 != 6'd11 &&
	     exc_code__h19827 != 6'd12 &&
	     exc_code__h19827 != 6'd13 &&
	     exc_code__h19827 != 6'd15 ;
  assign exc_code__h19827 =
	     csr_trap_actions_nmi ? 6'd0 : csr_trap_actions_exc_code ;
  assign exc_pc___1__h19196 = exc_pc__h19129 + vector_offset__h19130 ;
  assign exc_pc__h18697 =
	     { SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[31:2],
	       2'd0 } ;
  assign exc_pc__h19129 =
	     csr_trap_actions_nmi ? rg_nmi_vector : exc_pc__h18697 ;
  assign fixed_up_val_23__h10331 =
	     { mav_csr_write_word[22:17],
	       4'd0,
	       (mav_csr_write_word[12:11] == 2'b11) ?
		 mav_csr_write_word[12:11] :
		 2'b0,
	       mav_csr_write_word[10:9],
	       1'd0,
	       mav_csr_write_word[7:6],
	       2'd0,
	       mav_csr_write_word[3:2],
	       2'd0 } ;
  assign fixed_up_val_23__h18133 =
	     { csr_mstatus_rg_mstatus[22:17],
	       4'd0,
	       mpp__h19246,
	       csr_mstatus_rg_mstatus[10:9],
	       1'd0,
	       csr_mstatus_rg_mstatus[3],
	       csr_mstatus_rg_mstatus[6],
	       3'd0,
	       csr_mstatus_rg_mstatus[2],
	       2'd0 } ;
  assign fixed_up_val_23__h21352 =
	     { IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615[22:17],
	       4'd0,
	       (IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615[12:11] ==
		2'b11) ?
		 IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615[12:11] :
		 2'b0,
	       IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615[10:9],
	       1'd0,
	       IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615[7:6],
	       2'd0,
	       IF_csr_ret_actions_from_priv_EQ_0b11_594_THEN__ETC___d1615[3:2],
	       2'd0 } ;
  assign highBitsfilter__h10809 = 24'd16777215 << rg_mtcc[21:16] ;
  assign highBitsfilter__h11640 = 24'd16777215 << rg_mepcc[21:16] ;
  assign highBitsfilter__h20000 = highBitsfilter__h10809 ;
  assign highOffsetBits__h10810 = x__h11668 & highBitsfilter__h10809 ;
  assign highOffsetBits__h11641 = x__h11668 & highBitsfilter__h11640 ;
  assign highOffsetBits__h15045 = x__h15072 & mask__h16054 ;
  assign highOffsetBits__h20001 = x__h20028 & highBitsfilter__h20000 ;
  assign i__h34635 = csr_counter_read_fault_csr_addr - 12'hC03 ;
  assign i__h34681 = csr_counter_read_fault_csr_addr - 12'hC83 ;
  assign idx__h3992 = read_csr_csr_addr - 12'hC03 ;
  assign idx__h4015 = read_csr_csr_addr - 12'hC83 ;
  assign idx__h4038 = read_csr_csr_addr - 12'hB03 ;
  assign idx__h4061 = read_csr_csr_addr - 12'hB83 ;
  assign idx__h4084 = read_csr_csr_addr - 12'h323 ;
  assign idx__h7654 = read_csr_port2_csr_addr - 12'hC03 ;
  assign idx__h7677 = read_csr_port2_csr_addr - 12'hC83 ;
  assign idx__h7700 = read_csr_port2_csr_addr - 12'hB03 ;
  assign idx__h7723 = read_csr_port2_csr_addr - 12'hB83 ;
  assign idx__h7746 = read_csr_port2_csr_addr - 12'h323 ;
  assign idx__h9038 = mav_read_csr_csr_addr - 12'hC03 ;
  assign idx__h9061 = mav_read_csr_csr_addr - 12'hC83 ;
  assign idx__h9084 = mav_read_csr_csr_addr - 12'hB03 ;
  assign idx__h9107 = mav_read_csr_csr_addr - 12'hB83 ;
  assign idx__h9130 = mav_read_csr_csr_addr - 12'h323 ;
  assign ie_from_x__h21417 = { 4'd0, csr_ret_actions_from_priv } ;
  assign length__h16634 = { 23'd0, x__h16639 } << mav_scr_write_cap[21:16] ;
  assign mask__h16054 = 24'd16777215 << mav_scr_write_cap[21:16] ;
  assign mask__h16170 = 25'd33554431 << mav_scr_write_cap[21:16] ;
  assign mask__h20753 = mask__h11307 ;
  assign mask__h21454 = 32'd1 << pie_from_x__h21418 ;
  assign mask__h21471 = 32'd1 << ie_from_x__h21417 ;
  assign mav_csr_write_csr_addr_ULE_0x33F___d686 =
	     mav_csr_write_csr_addr <= 12'h33F ;
  assign mav_csr_write_csr_addr_ULE_0xB1F___d661 =
	     mav_csr_write_csr_addr <= 12'hB1F ;
  assign mav_csr_write_csr_addr_ULE_0xB9F___d665 =
	     mav_csr_write_csr_addr <= 12'hB9F ;
  assign mav_csr_write_csr_addr_ULT_0x323_84_OR_NOT_mav_ETC___d986 =
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr != 12'hF11 &&
	     mav_csr_write_csr_addr != 12'hF12 &&
	     mav_csr_write_csr_addr != 12'hF13 &&
	     mav_csr_write_csr_addr != 12'hF14 &&
	     mav_csr_write_csr_addr != 12'h300 &&
	     mav_csr_write_csr_addr != 12'h301 &&
	     mav_csr_write_csr_addr != 12'h304 &&
	     mav_csr_write_csr_addr != 12'h305 &&
	     mav_csr_write_csr_addr != 12'h306 &&
	     mav_csr_write_csr_addr != 12'h340 &&
	     mav_csr_write_csr_addr != 12'h341 &&
	     mav_csr_write_csr_addr != 12'h342 &&
	     mav_csr_write_csr_addr != 12'h343 &&
	     mav_csr_write_csr_addr != 12'h344 &&
	     mav_csr_write_csr_addr != 12'hB00 &&
	     mav_csr_write_csr_addr != 12'hB02 &&
	     mav_csr_write_csr_addr != 12'hB80 &&
	     mav_csr_write_csr_addr != 12'hB82 &&
	     mav_csr_write_csr_addr != 12'h320 &&
	     mav_csr_write_csr_addr != 12'h7A0 &&
	     mav_csr_write_csr_addr != 12'h7A1 &&
	     mav_csr_write_csr_addr != 12'h7A2 &&
	     mav_csr_write_csr_addr != 12'h7A3 &&
	     mav_csr_write_csr_addr != 12'h7B0 &&
	     mav_csr_write_csr_addr != 12'h7B1 &&
	     mav_csr_write_csr_addr != 12'h7B2 &&
	     mav_csr_write_csr_addr != 12'h7B3 ;
  assign mav_csr_write_csr_addr_ULT_0x323___d684 =
	     mav_csr_write_csr_addr < 12'h323 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d689 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     !mav_csr_write_csr_addr_ULT_0x323___d684 &&
	     mav_csr_write_csr_addr_ULE_0x33F___d686 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d872 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     (mav_csr_write_csr_addr == 12'hB00 ||
	      mav_csr_write_csr_addr == 12'hB80) ;
  assign mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d894 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     (mav_csr_write_csr_addr == 12'hB02 ||
	      mav_csr_write_csr_addr == 12'hB82) ;
  assign mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d988 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d659 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d661) &&
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     mav_csr_write_csr_addr_ULT_0x323_84_OR_NOT_mav_ETC___d986 ;
  assign mav_csr_write_csr_addr_ULT_0xB03___d659 =
	     mav_csr_write_csr_addr < 12'hB03 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d697 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h300 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d713 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h304 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d717 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h305 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d768 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h306 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d772 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h340 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d776 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h341 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d822 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h342 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d828 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h343 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d832 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h344 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d900 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h320 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d907 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7A0 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d911 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7A1 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d917 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7A2 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d921 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7A3 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d925 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7B0 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d938 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7B1 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d942 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7B2 ;
  assign mav_csr_write_csr_addr_ULT_0xB83_63_OR_NOT_mav_ETC___d946 =
	     (mav_csr_write_csr_addr_ULT_0xB83___d663 ||
	      !mav_csr_write_csr_addr_ULE_0xB9F___d665) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d684 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d686) &&
	     mav_csr_write_csr_addr == 12'h7B3 ;
  assign mav_csr_write_csr_addr_ULT_0xB83___d663 =
	     mav_csr_write_csr_addr < 12'hB83 ;
  assign mav_scr_write_cap_BITS_15_TO_13_145_ULT_mav_sc_ETC___d1146 =
	     mav_scr_write_cap[15:13] < repBound__h16859 ;
  assign mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039 =
	     mav_scr_write_cap[47:45] < repBound__h16859 ;
  assign mav_scr_write_cap_BITS_79_TO_56_085_AND_167772_ETC___d1090 =
	     { mav_scr_write_cap[79:56] & mask__h16054, 8'd0 } +
	     addBase__h16053 ;
  assign mav_scr_write_cap_BITS_79_TO_56_PLUS_SEXT_x693_ETC__q3 =
	     mav_scr_write_cap[79:56] +
	     ({ {22{x__h16939[1]}}, x__h16939 } << mav_scr_write_cap[21:16]) ;
  assign mav_scr_write_cap_BITS_7_TO_5_035_ULT_mav_scr__ETC___d1037 =
	     mav_scr_write_cap[7:5] < repBound__h16859 ;
  assign mpp__h19246 =
	     (csr_trap_actions_from_priv == 2'b11) ?
	       csr_trap_actions_from_priv :
	       2'b0 ;
  assign newAddrBits__h11306 = rg_mtcc[7:0] + x__h11182[7:0] ;
  assign newAddrBits__h12115 = rg_mepcc[7:0] + x__h11997[7:0] ;
  assign newAddrBits__h14600 = mav_scr_write_cap[7:0] + x__h14481[7:0] ;
  assign newAddrBits__h15659 = mav_scr_write_cap[7:0] + x__h15515[7:0] ;
  assign newAddrBits__h20752 = rg_mtcc[7:0] + x__h20685[7:0] ;
  assign new_csr__h13916 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[31:2],
	       1'b0,
	       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[0] } ;
  assign new_csr__h15028 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[31:1],
	       1'd0 } ;
  assign new_csr_value__h11596 = { mav_csr_write_word[31:1], 1'd0 } ;
  assign new_csr_value__h12993 = { 4'd0, mav_csr_write_word[27:0] } ;
  assign new_dcsr__h13124 =
	     { rg_dcsr[31:16],
	       mav_csr_write_word[15:9],
	       rg_dcsr[8:5],
	       mav_csr_write_word[4],
	       rg_dcsr[3],
	       mav_csr_write_word[2:0] } ;
  assign new_value__h9846 =
	     { SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673[63:32],
	       mav_csr_write_word } ;
  assign new_value__h9980 =
	     { mav_csr_write_word,
	       SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676[31:0] } ;
  assign offset__h15087 = { 2'b0, mav_scr_write_cap[47:40] } - x__h16104 ;
  assign offset__h17317 =
	     { 2'b0, csr_trap_actions_pcc[57:50] } - base__h17316 ;
  assign offset__h7099 = { 2'b0, rg_mtcc[47:40] } - x__h11398 ;
  assign offset__h7330 = { 2'b0, rg_mepcc[47:40] } - x__h12207 ;
  assign pie_from_x__h21418 = { 4'd1, csr_ret_actions_from_priv } ;
  assign repBound__h16859 = mav_scr_write_cap[7:5] - 3'b001 ;
  assign repBound__h7146 = rg_mtcc[7:5] - 3'b001 ;
  assign repBound__h7377 = rg_mepcc[7:5] - 3'b001 ;
  assign result__h16575 = { ~ret__h16171[32], ret__h16171[31:0] } ;
  assign result_d_addrBits__h20765 =
	     { mask__h20753, 6'd63 } & newAddrBits__h20752 ;
  assign result_d_address__h20764 =
	     { rg_mtcc_BITS_79_TO_48__q2[31:8] & highBitsfilter__h20000,
	       8'd0 } +
	     addBase__h20795 +
	     _theResult_____2__h19131 ;
  assign ret__h16171 =
	     { { 1'b0, mav_scr_write_cap[79:56] } & mask__h16170, 8'd0 } +
	     addTop__h16169 ;
  assign rg_mcounteren_BITS_31_TO_3__q4 = rg_mcounteren[31:3] ;
  assign rg_mepcc_51_BITS_15_TO_13_633_ULT_rg_mepcc_51__ETC___d1634 =
	     rg_mepcc[15:13] < repBound__h7377 ;
  assign rg_mepcc_51_BITS_47_TO_45_57_ULT_rg_mepcc_51_B_ETC___d258 =
	     rg_mepcc[47:45] < repBound__h7377 ;
  assign rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51_BIT_ETC___d256 =
	     rg_mepcc[7:5] < repBound__h7377 ;
  assign rg_mtcc_22_BITS_47_TO_45_28_ULT_rg_mtcc_22_BIT_ETC___d229 =
	     rg_mtcc[47:45] < repBound__h7146 ;
  assign rg_mtcc_22_BITS_7_TO_5_25_ULT_rg_mtcc_22_BITS__ETC___d227 =
	     rg_mtcc[7:5] < repBound__h7146 ;
  assign rg_mtcc_BITS_79_TO_48__q2 = rg_mtcc[79:48] ;
  assign rg_mtcc_BITS_7_TO_0__q1 = rg_mtcc[7:0] ;
  assign signBits__h11638 = {24{mav_csr_write_word[31]}} ;
  assign signBits__h15042 =
	     {24{SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[31]}} ;
  assign signBits__h19998 = {24{_theResult_____2__h19131[31]}} ;
  assign toBoundsM1__h10820 = { 3'b110, ~rg_mtcc[4:0] } ;
  assign toBoundsM1__h11651 = { 3'b110, ~rg_mepcc[4:0] } ;
  assign toBoundsM1__h15055 = { 3'b110, ~mav_scr_write_cap[4:0] } ;
  assign toBoundsM1__h20011 = { 3'b110, ~rg_mtcc_BITS_7_TO_0__q1[4:0] } ;
  assign toBounds__h10819 = 8'd224 - { 3'b0, rg_mtcc[4:0] } ;
  assign toBounds__h11650 = 8'd224 - { 3'b0, rg_mepcc[4:0] } ;
  assign toBounds__h15054 = 8'd224 - { 3'b0, mav_scr_write_cap[4:0] } ;
  assign toBounds__h20010 = 8'd224 - { 3'b0, rg_mtcc_BITS_7_TO_0__q1[4:0] } ;
  assign to_y__h21633 =
	     { 1'b0,
	       csr_mstatus_rg_mstatus_20_AND_INV_1_SL_0_CONCA_ETC___d1608[8] } ;
  assign v__h10083 = { 25'd0, mav_csr_write_word[6:0] } ;
  assign v__h12292 =
	     { mav_csr_write_word[31], 25'd0, mav_csr_write_word[5:0] } ;
  assign v__h12868 =
	     { mav_csr_write_word[31:2], 1'd0, mav_csr_write_word[0] } ;
  assign val__h21472 = { 31'd0, b__h21470 } << ie_from_x__h21417 ;
  assign vector_offset__h19130 = { 24'd0, csr_trap_actions_exc_code, 2'd0 } ;
  assign wordxl1__h10281 = { 9'd0, fixed_up_val_23__h10331 } ;
  assign x1_avValue_addrBits__h14911 =
	     (((mav_scr_write_cap[21:16] == 6'd0) ?
		 mav_scr_write_cap[1:0] :
		 2'b0) ==
	      2'd0) ?
	       capUnpacked_capFat_addrBits__h14622 :
	       8'd0 ;
  assign x1_avValue_address__h14910 =
	     (((mav_scr_write_cap[21:16] == 6'd0) ?
		 mav_scr_write_cap[1:0] :
		 2'b0) ==
	      2'd0) ?
	       capUnpacked_capFat_address__h14621 :
	       32'd0 ;
  assign x1_avValue_flags__h14913 =
	     ((mav_scr_write_cap[21:16] == 6'd0) ?
		mav_scr_write_cap[1:0] :
		2'b0) ==
	     2'd0 &&
	     mav_scr_write_cap[27] ;
  assign x1_avValue_otype__h14915 =
	     (((mav_scr_write_cap[21:16] == 6'd0) ?
		 mav_scr_write_cap[1:0] :
		 2'b0) ==
	      2'd0) ?
	       mav_scr_write_cap[26:23] :
	       4'd15 ;
  assign x__h10019 = mav_csr_write_csr_addr - 12'hB83 ;
  assign x__h10106 = mav_csr_write_csr_addr - 12'h323 ;
  assign x__h11182 = v__h12868 >> rg_mtcc[21:16] ;
  assign x__h11398 =
	     { (rg_mtcc_22_BITS_7_TO_5_25_ULT_rg_mtcc_22_BITS__ETC___d227 ==
		rg_mtcc_22_BITS_47_TO_45_28_ULT_rg_mtcc_22_BIT_ETC___d229) ?
		 2'd0 :
		 ((rg_mtcc_22_BITS_7_TO_5_25_ULT_rg_mtcc_22_BITS__ETC___d227 &&
		   !rg_mtcc_22_BITS_47_TO_45_28_ULT_rg_mtcc_22_BIT_ETC___d229) ?
		    2'd1 :
		    2'd3),
	       rg_mtcc[7:0] } ;
  assign x__h11668 = mav_csr_write_word[31:8] ^ signBits__h11638 ;
  assign x__h11997 = new_csr_value__h11596 >> rg_mepcc[21:16] ;
  assign x__h12207 =
	     { IF_rg_mepcc_51_BITS_7_TO_5_54_ULT_rg_mepcc_51__ETC___d263,
	       rg_mepcc[7:0] } ;
  assign x__h12688 = { rg_mcycle[63:32], mav_csr_write_word } ;
  assign x__h12736 = { rg_minstret[63:32], mav_csr_write_word } ;
  assign x__h12784 = { mav_csr_write_word, rg_mcycle[31:0] } ;
  assign x__h12832 = { mav_csr_write_word, rg_minstret[31:0] } ;
  assign x__h14481 = new_csr__h13916 >> mav_scr_write_cap[21:16] ;
  assign x__h15072 =
	     SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054[31:8] ^
	     signBits__h15042 ;
  assign x__h15099 = x__h15101 << mav_scr_write_cap[21:16] ;
  assign x__h15101 = { {22{offset__h15087[9]}}, offset__h15087 } ;
  assign x__h15515 = new_csr__h15028 >> mav_scr_write_cap[21:16] ;
  assign x__h16104 = { x__h16939, mav_scr_write_cap[7:0] } ;
  assign x__h16229 = { x__h16920, mav_scr_write_cap[15:8] } ;
  assign x__h16639 = x__h16229 - x__h16104 ;
  assign x__h16819 = 32'hFFFFFFFF << mav_scr_write_cap[21:16] ;
  assign x__h16920 =
	     (mav_scr_write_cap_BITS_15_TO_13_145_ULT_mav_sc_ETC___d1146 ==
	      mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039) ?
	       2'd0 :
	       ((mav_scr_write_cap_BITS_15_TO_13_145_ULT_mav_sc_ETC___d1146 &&
		 !mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039) ?
		  2'd1 :
		  2'd3) ;
  assign x__h16939 =
	     (mav_scr_write_cap_BITS_7_TO_5_035_ULT_mav_scr__ETC___d1037 ==
	      mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039) ?
	       2'd0 :
	       ((mav_scr_write_cap_BITS_7_TO_5_035_ULT_mav_scr__ETC___d1037 &&
		 !mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039) ?
		  2'd1 :
		  2'd3) ;
  assign x__h17329 = x__h17331 << csr_trap_actions_pcc[31:26] ;
  assign x__h17331 = { {22{offset__h17317[9]}}, offset__h17317 } ;
  assign x__h17450 = 32'hFFFFFFFF << csr_trap_actions_pcc[31:26] ;
  assign x__h20028 = _theResult_____2__h19131[31:8] ^ signBits__h19998 ;
  assign x__h20685 = _theResult_____2__h19131 >> rg_mtcc[21:16] ;
  assign x__h20851 = x__h11398 ;
  assign x__h21279 = { 9'd0, fixed_up_val_23__h18133 } ;
  assign x__h21280 =
	     { !csr_trap_actions_nmi && csr_trap_actions_interrupt,
	       25'd0,
	       exc_code__h19827 } ;
  assign x__h21453 = x__h21483 | val__h21472 ;
  assign x__h21466 = x__h21453 & y__h21467 ;
  assign x__h21483 = csr_mstatus_rg_mstatus & y__h21484 ;
  assign x__h3603 =
	     (mav_csr_write_csr_addr == 12'hB00) ? x__h12688 : x__h12784 ;
  assign x__h3636 = rg_mcycle + 64'd1 ;
  assign x__h7111 = x__h7113 << rg_mtcc[21:16] ;
  assign x__h7113 = { {22{offset__h7099[9]}}, offset__h7099 } ;
  assign x__h7242 = 32'hFFFFFFFF << rg_mtcc[21:16] ;
  assign x__h7342 = x__h7344 << rg_mepcc[21:16] ;
  assign x__h7344 = { {22{offset__h7330[9]}}, offset__h7330 } ;
  assign x__h7470 = 32'hFFFFFFFF << rg_mepcc[21:16] ;
  assign x__h8317 = { rg_mccsr, 5'd3 } ;
  assign x__h9913 = mav_csr_write_csr_addr - 12'hB03 ;
  assign x_addrBits__h11328 = { mask__h11307, 6'd63 } & newAddrBits__h11306 ;
  assign x_addrBits__h12137 = { mask__h12116, 6'd63 } & newAddrBits__h12115 ;
  assign x_address__h11327 =
	     { rg_mtcc[79:56] & highBitsfilter__h10809, 8'd0 } +
	     addBase__h11347 +
	     v__h12868 ;
  assign x_address__h12136 =
	     { rg_mepcc[79:56] & highBitsfilter__h11640, 8'd0 } +
	     addBase__h12156 +
	     new_csr_value__h11596 ;
  assign y__h16818 = ~x__h16819 ;
  assign y__h17449 = ~x__h17450 ;
  assign y__h21467 = ~mask__h21454 ;
  assign y__h21484 = ~mask__h21471 ;
  assign y__h7241 = ~x__h7242 ;
  assign y__h7469 = ~x__h7470 ;
  assign y_avValue_fst__h13696 =
	     (!mav_csr_write_csr_addr_ULT_0x323___d684 &&
	      mav_csr_write_csr_addr_ULE_0x33F___d686) ?
	       v__h10083 :
	       y_avValue_fst__h13682 ;
  assign y_avValue_new_csr_value__h13800 =
	     (!mav_csr_write_csr_addr_ULT_0xB03___d659 &&
	      mav_csr_write_csr_addr_ULE_0xB1F___d661 ||
	      !mav_csr_write_csr_addr_ULT_0xB83___d663 &&
	      mav_csr_write_csr_addr_ULE_0xB9F___d665) ?
	       mav_csr_write_word :
	       y_avValue_fst__h13696 ;
  always@(rg_mtcc)
  begin
    case (rg_mtcc[21:16])
      6'd25: mask__h11307 = 2'b01;
      6'd26: mask__h11307 = 2'b0;
      default: mask__h11307 = 2'b11;
    endcase
  end
  always@(rg_mepcc)
  begin
    case (rg_mepcc[21:16])
      6'd25: mask__h12116 = 2'b01;
      6'd26: mask__h12116 = 2'b0;
      default: mask__h12116 = 2'b11;
    endcase
  end
  always@(mav_scr_write_cap)
  begin
    case (mav_scr_write_cap[21:16])
      6'd25: mask__h14601 = 2'b01;
      6'd26: mask__h14601 = 2'b0;
      default: mask__h14601 = 2'b11;
    endcase
  end
  always@(mav_csr_write_csr_addr or
	  mav_csr_write_word or
	  wordxl1__h10281 or
	  csr_mie$mav_write or
	  v__h12868 or
	  new_csr_value__h11596 or
	  v__h12292 or
	  csr_mip$mav_write or new_csr_value__h12993 or new_dcsr__h13124)
  begin
    case (mav_csr_write_csr_addr)
      12'h300: y_avValue_fst__h13682 = wordxl1__h10281;
      12'h301: y_avValue_fst__h13682 = 32'd1074794757;
      12'h304: y_avValue_fst__h13682 = csr_mie$mav_write;
      12'h305, 12'h320: y_avValue_fst__h13682 = v__h12868;
      12'h306,
      12'h340,
      12'h343,
      12'h7A2,
      12'h7A3,
      12'hB00,
      12'hB02,
      12'hB80,
      12'hB82:
	  y_avValue_fst__h13682 = mav_csr_write_word;
      12'h341: y_avValue_fst__h13682 = new_csr_value__h11596;
      12'h342: y_avValue_fst__h13682 = v__h12292;
      12'h344: y_avValue_fst__h13682 = csr_mip$mav_write;
      12'h7A0, 12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  y_avValue_fst__h13682 = 32'd0;
      12'h7A1: y_avValue_fst__h13682 = new_csr_value__h12993;
      12'h7B0: y_avValue_fst__h13682 = new_dcsr__h13124;
      default: y_avValue_fst__h13682 = mav_csr_write_word;
    endcase
  end
  always@(idx__h4084 or
	  perf_counters$read_ctr_sels_0__read or
	  perf_counters$read_ctr_sels_1__read or
	  perf_counters$read_ctr_sels_2__read or
	  perf_counters$read_ctr_sels_3__read or
	  perf_counters$read_ctr_sels_4__read or
	  perf_counters$read_ctr_sels_5__read or
	  perf_counters$read_ctr_sels_6__read or
	  perf_counters$read_ctr_sels_7__read or
	  perf_counters$read_ctr_sels_8__read or
	  perf_counters$read_ctr_sels_9__read or
	  perf_counters$read_ctr_sels_10__read or
	  perf_counters$read_ctr_sels_11__read or
	  perf_counters$read_ctr_sels_12__read or
	  perf_counters$read_ctr_sels_13__read or
	  perf_counters$read_ctr_sels_14__read or
	  perf_counters$read_ctr_sels_15__read or
	  perf_counters$read_ctr_sels_16__read or
	  perf_counters$read_ctr_sels_17__read or
	  perf_counters$read_ctr_sels_18__read or
	  perf_counters$read_ctr_sels_19__read or
	  perf_counters$read_ctr_sels_20__read or
	  perf_counters$read_ctr_sels_21__read or
	  perf_counters$read_ctr_sels_22__read or
	  perf_counters$read_ctr_sels_23__read or
	  perf_counters$read_ctr_sels_24__read or
	  perf_counters$read_ctr_sels_25__read or
	  perf_counters$read_ctr_sels_26__read or
	  perf_counters$read_ctr_sels_27__read or
	  perf_counters$read_ctr_sels_28__read)
  begin
    case (idx__h4084)
      12'd0: x__h5676 = perf_counters$read_ctr_sels_0__read;
      12'd1: x__h5676 = perf_counters$read_ctr_sels_1__read;
      12'd2: x__h5676 = perf_counters$read_ctr_sels_2__read;
      12'd3: x__h5676 = perf_counters$read_ctr_sels_3__read;
      12'd4: x__h5676 = perf_counters$read_ctr_sels_4__read;
      12'd5: x__h5676 = perf_counters$read_ctr_sels_5__read;
      12'd6: x__h5676 = perf_counters$read_ctr_sels_6__read;
      12'd7: x__h5676 = perf_counters$read_ctr_sels_7__read;
      12'd8: x__h5676 = perf_counters$read_ctr_sels_8__read;
      12'd9: x__h5676 = perf_counters$read_ctr_sels_9__read;
      12'd10: x__h5676 = perf_counters$read_ctr_sels_10__read;
      12'd11: x__h5676 = perf_counters$read_ctr_sels_11__read;
      12'd12: x__h5676 = perf_counters$read_ctr_sels_12__read;
      12'd13: x__h5676 = perf_counters$read_ctr_sels_13__read;
      12'd14: x__h5676 = perf_counters$read_ctr_sels_14__read;
      12'd15: x__h5676 = perf_counters$read_ctr_sels_15__read;
      12'd16: x__h5676 = perf_counters$read_ctr_sels_16__read;
      12'd17: x__h5676 = perf_counters$read_ctr_sels_17__read;
      12'd18: x__h5676 = perf_counters$read_ctr_sels_18__read;
      12'd19: x__h5676 = perf_counters$read_ctr_sels_19__read;
      12'd20: x__h5676 = perf_counters$read_ctr_sels_20__read;
      12'd21: x__h5676 = perf_counters$read_ctr_sels_21__read;
      12'd22: x__h5676 = perf_counters$read_ctr_sels_22__read;
      12'd23: x__h5676 = perf_counters$read_ctr_sels_23__read;
      12'd24: x__h5676 = perf_counters$read_ctr_sels_24__read;
      12'd25: x__h5676 = perf_counters$read_ctr_sels_25__read;
      12'd26: x__h5676 = perf_counters$read_ctr_sels_26__read;
      12'd27: x__h5676 = perf_counters$read_ctr_sels_27__read;
      12'd28: x__h5676 = perf_counters$read_ctr_sels_28__read;
      default: x__h5676 = 7'bxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h7746 or
	  perf_counters$read_ctr_sels_0__read or
	  perf_counters$read_ctr_sels_1__read or
	  perf_counters$read_ctr_sels_2__read or
	  perf_counters$read_ctr_sels_3__read or
	  perf_counters$read_ctr_sels_4__read or
	  perf_counters$read_ctr_sels_5__read or
	  perf_counters$read_ctr_sels_6__read or
	  perf_counters$read_ctr_sels_7__read or
	  perf_counters$read_ctr_sels_8__read or
	  perf_counters$read_ctr_sels_9__read or
	  perf_counters$read_ctr_sels_10__read or
	  perf_counters$read_ctr_sels_11__read or
	  perf_counters$read_ctr_sels_12__read or
	  perf_counters$read_ctr_sels_13__read or
	  perf_counters$read_ctr_sels_14__read or
	  perf_counters$read_ctr_sels_15__read or
	  perf_counters$read_ctr_sels_16__read or
	  perf_counters$read_ctr_sels_17__read or
	  perf_counters$read_ctr_sels_18__read or
	  perf_counters$read_ctr_sels_19__read or
	  perf_counters$read_ctr_sels_20__read or
	  perf_counters$read_ctr_sels_21__read or
	  perf_counters$read_ctr_sels_22__read or
	  perf_counters$read_ctr_sels_23__read or
	  perf_counters$read_ctr_sels_24__read or
	  perf_counters$read_ctr_sels_25__read or
	  perf_counters$read_ctr_sels_26__read or
	  perf_counters$read_ctr_sels_27__read or
	  perf_counters$read_ctr_sels_28__read)
  begin
    case (idx__h7746)
      12'd0: x__h8187 = perf_counters$read_ctr_sels_0__read;
      12'd1: x__h8187 = perf_counters$read_ctr_sels_1__read;
      12'd2: x__h8187 = perf_counters$read_ctr_sels_2__read;
      12'd3: x__h8187 = perf_counters$read_ctr_sels_3__read;
      12'd4: x__h8187 = perf_counters$read_ctr_sels_4__read;
      12'd5: x__h8187 = perf_counters$read_ctr_sels_5__read;
      12'd6: x__h8187 = perf_counters$read_ctr_sels_6__read;
      12'd7: x__h8187 = perf_counters$read_ctr_sels_7__read;
      12'd8: x__h8187 = perf_counters$read_ctr_sels_8__read;
      12'd9: x__h8187 = perf_counters$read_ctr_sels_9__read;
      12'd10: x__h8187 = perf_counters$read_ctr_sels_10__read;
      12'd11: x__h8187 = perf_counters$read_ctr_sels_11__read;
      12'd12: x__h8187 = perf_counters$read_ctr_sels_12__read;
      12'd13: x__h8187 = perf_counters$read_ctr_sels_13__read;
      12'd14: x__h8187 = perf_counters$read_ctr_sels_14__read;
      12'd15: x__h8187 = perf_counters$read_ctr_sels_15__read;
      12'd16: x__h8187 = perf_counters$read_ctr_sels_16__read;
      12'd17: x__h8187 = perf_counters$read_ctr_sels_17__read;
      12'd18: x__h8187 = perf_counters$read_ctr_sels_18__read;
      12'd19: x__h8187 = perf_counters$read_ctr_sels_19__read;
      12'd20: x__h8187 = perf_counters$read_ctr_sels_20__read;
      12'd21: x__h8187 = perf_counters$read_ctr_sels_21__read;
      12'd22: x__h8187 = perf_counters$read_ctr_sels_22__read;
      12'd23: x__h8187 = perf_counters$read_ctr_sels_23__read;
      12'd24: x__h8187 = perf_counters$read_ctr_sels_24__read;
      12'd25: x__h8187 = perf_counters$read_ctr_sels_25__read;
      12'd26: x__h8187 = perf_counters$read_ctr_sels_26__read;
      12'd27: x__h8187 = perf_counters$read_ctr_sels_27__read;
      12'd28: x__h8187 = perf_counters$read_ctr_sels_28__read;
      default: x__h8187 = 7'bxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h9130 or
	  perf_counters$read_ctr_sels_0__read or
	  perf_counters$read_ctr_sels_1__read or
	  perf_counters$read_ctr_sels_2__read or
	  perf_counters$read_ctr_sels_3__read or
	  perf_counters$read_ctr_sels_4__read or
	  perf_counters$read_ctr_sels_5__read or
	  perf_counters$read_ctr_sels_6__read or
	  perf_counters$read_ctr_sels_7__read or
	  perf_counters$read_ctr_sels_8__read or
	  perf_counters$read_ctr_sels_9__read or
	  perf_counters$read_ctr_sels_10__read or
	  perf_counters$read_ctr_sels_11__read or
	  perf_counters$read_ctr_sels_12__read or
	  perf_counters$read_ctr_sels_13__read or
	  perf_counters$read_ctr_sels_14__read or
	  perf_counters$read_ctr_sels_15__read or
	  perf_counters$read_ctr_sels_16__read or
	  perf_counters$read_ctr_sels_17__read or
	  perf_counters$read_ctr_sels_18__read or
	  perf_counters$read_ctr_sels_19__read or
	  perf_counters$read_ctr_sels_20__read or
	  perf_counters$read_ctr_sels_21__read or
	  perf_counters$read_ctr_sels_22__read or
	  perf_counters$read_ctr_sels_23__read or
	  perf_counters$read_ctr_sels_24__read or
	  perf_counters$read_ctr_sels_25__read or
	  perf_counters$read_ctr_sels_26__read or
	  perf_counters$read_ctr_sels_27__read or
	  perf_counters$read_ctr_sels_28__read)
  begin
    case (idx__h9130)
      12'd0: x__h9571 = perf_counters$read_ctr_sels_0__read;
      12'd1: x__h9571 = perf_counters$read_ctr_sels_1__read;
      12'd2: x__h9571 = perf_counters$read_ctr_sels_2__read;
      12'd3: x__h9571 = perf_counters$read_ctr_sels_3__read;
      12'd4: x__h9571 = perf_counters$read_ctr_sels_4__read;
      12'd5: x__h9571 = perf_counters$read_ctr_sels_5__read;
      12'd6: x__h9571 = perf_counters$read_ctr_sels_6__read;
      12'd7: x__h9571 = perf_counters$read_ctr_sels_7__read;
      12'd8: x__h9571 = perf_counters$read_ctr_sels_8__read;
      12'd9: x__h9571 = perf_counters$read_ctr_sels_9__read;
      12'd10: x__h9571 = perf_counters$read_ctr_sels_10__read;
      12'd11: x__h9571 = perf_counters$read_ctr_sels_11__read;
      12'd12: x__h9571 = perf_counters$read_ctr_sels_12__read;
      12'd13: x__h9571 = perf_counters$read_ctr_sels_13__read;
      12'd14: x__h9571 = perf_counters$read_ctr_sels_14__read;
      12'd15: x__h9571 = perf_counters$read_ctr_sels_15__read;
      12'd16: x__h9571 = perf_counters$read_ctr_sels_16__read;
      12'd17: x__h9571 = perf_counters$read_ctr_sels_17__read;
      12'd18: x__h9571 = perf_counters$read_ctr_sels_18__read;
      12'd19: x__h9571 = perf_counters$read_ctr_sels_19__read;
      12'd20: x__h9571 = perf_counters$read_ctr_sels_20__read;
      12'd21: x__h9571 = perf_counters$read_ctr_sels_21__read;
      12'd22: x__h9571 = perf_counters$read_ctr_sels_22__read;
      12'd23: x__h9571 = perf_counters$read_ctr_sels_23__read;
      12'd24: x__h9571 = perf_counters$read_ctr_sels_24__read;
      12'd25: x__h9571 = perf_counters$read_ctr_sels_25__read;
      12'd26: x__h9571 = perf_counters$read_ctr_sels_26__read;
      12'd27: x__h9571 = perf_counters$read_ctr_sels_27__read;
      12'd28: x__h9571 = perf_counters$read_ctr_sels_28__read;
      default: x__h9571 = 7'bxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h3992 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h3992)
      12'd0: x__h4325 = perf_counters$read_counters_0__read;
      12'd1: x__h4325 = perf_counters$read_counters_1__read;
      12'd2: x__h4325 = perf_counters$read_counters_2__read;
      12'd3: x__h4325 = perf_counters$read_counters_3__read;
      12'd4: x__h4325 = perf_counters$read_counters_4__read;
      12'd5: x__h4325 = perf_counters$read_counters_5__read;
      12'd6: x__h4325 = perf_counters$read_counters_6__read;
      12'd7: x__h4325 = perf_counters$read_counters_7__read;
      12'd8: x__h4325 = perf_counters$read_counters_8__read;
      12'd9: x__h4325 = perf_counters$read_counters_9__read;
      12'd10: x__h4325 = perf_counters$read_counters_10__read;
      12'd11: x__h4325 = perf_counters$read_counters_11__read;
      12'd12: x__h4325 = perf_counters$read_counters_12__read;
      12'd13: x__h4325 = perf_counters$read_counters_13__read;
      12'd14: x__h4325 = perf_counters$read_counters_14__read;
      12'd15: x__h4325 = perf_counters$read_counters_15__read;
      12'd16: x__h4325 = perf_counters$read_counters_16__read;
      12'd17: x__h4325 = perf_counters$read_counters_17__read;
      12'd18: x__h4325 = perf_counters$read_counters_18__read;
      12'd19: x__h4325 = perf_counters$read_counters_19__read;
      12'd20: x__h4325 = perf_counters$read_counters_20__read;
      12'd21: x__h4325 = perf_counters$read_counters_21__read;
      12'd22: x__h4325 = perf_counters$read_counters_22__read;
      12'd23: x__h4325 = perf_counters$read_counters_23__read;
      12'd24: x__h4325 = perf_counters$read_counters_24__read;
      12'd25: x__h4325 = perf_counters$read_counters_25__read;
      12'd26: x__h4325 = perf_counters$read_counters_26__read;
      12'd27: x__h4325 = perf_counters$read_counters_27__read;
      12'd28: x__h4325 = perf_counters$read_counters_28__read;
      default: x__h4325 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h9038 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h9038)
      12'd0: x__h9371 = perf_counters$read_counters_0__read;
      12'd1: x__h9371 = perf_counters$read_counters_1__read;
      12'd2: x__h9371 = perf_counters$read_counters_2__read;
      12'd3: x__h9371 = perf_counters$read_counters_3__read;
      12'd4: x__h9371 = perf_counters$read_counters_4__read;
      12'd5: x__h9371 = perf_counters$read_counters_5__read;
      12'd6: x__h9371 = perf_counters$read_counters_6__read;
      12'd7: x__h9371 = perf_counters$read_counters_7__read;
      12'd8: x__h9371 = perf_counters$read_counters_8__read;
      12'd9: x__h9371 = perf_counters$read_counters_9__read;
      12'd10: x__h9371 = perf_counters$read_counters_10__read;
      12'd11: x__h9371 = perf_counters$read_counters_11__read;
      12'd12: x__h9371 = perf_counters$read_counters_12__read;
      12'd13: x__h9371 = perf_counters$read_counters_13__read;
      12'd14: x__h9371 = perf_counters$read_counters_14__read;
      12'd15: x__h9371 = perf_counters$read_counters_15__read;
      12'd16: x__h9371 = perf_counters$read_counters_16__read;
      12'd17: x__h9371 = perf_counters$read_counters_17__read;
      12'd18: x__h9371 = perf_counters$read_counters_18__read;
      12'd19: x__h9371 = perf_counters$read_counters_19__read;
      12'd20: x__h9371 = perf_counters$read_counters_20__read;
      12'd21: x__h9371 = perf_counters$read_counters_21__read;
      12'd22: x__h9371 = perf_counters$read_counters_22__read;
      12'd23: x__h9371 = perf_counters$read_counters_23__read;
      12'd24: x__h9371 = perf_counters$read_counters_24__read;
      12'd25: x__h9371 = perf_counters$read_counters_25__read;
      12'd26: x__h9371 = perf_counters$read_counters_26__read;
      12'd27: x__h9371 = perf_counters$read_counters_27__read;
      12'd28: x__h9371 = perf_counters$read_counters_28__read;
      default: x__h9371 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h4038 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h4038)
      12'd0: x__h5576 = perf_counters$read_counters_0__read;
      12'd1: x__h5576 = perf_counters$read_counters_1__read;
      12'd2: x__h5576 = perf_counters$read_counters_2__read;
      12'd3: x__h5576 = perf_counters$read_counters_3__read;
      12'd4: x__h5576 = perf_counters$read_counters_4__read;
      12'd5: x__h5576 = perf_counters$read_counters_5__read;
      12'd6: x__h5576 = perf_counters$read_counters_6__read;
      12'd7: x__h5576 = perf_counters$read_counters_7__read;
      12'd8: x__h5576 = perf_counters$read_counters_8__read;
      12'd9: x__h5576 = perf_counters$read_counters_9__read;
      12'd10: x__h5576 = perf_counters$read_counters_10__read;
      12'd11: x__h5576 = perf_counters$read_counters_11__read;
      12'd12: x__h5576 = perf_counters$read_counters_12__read;
      12'd13: x__h5576 = perf_counters$read_counters_13__read;
      12'd14: x__h5576 = perf_counters$read_counters_14__read;
      12'd15: x__h5576 = perf_counters$read_counters_15__read;
      12'd16: x__h5576 = perf_counters$read_counters_16__read;
      12'd17: x__h5576 = perf_counters$read_counters_17__read;
      12'd18: x__h5576 = perf_counters$read_counters_18__read;
      12'd19: x__h5576 = perf_counters$read_counters_19__read;
      12'd20: x__h5576 = perf_counters$read_counters_20__read;
      12'd21: x__h5576 = perf_counters$read_counters_21__read;
      12'd22: x__h5576 = perf_counters$read_counters_22__read;
      12'd23: x__h5576 = perf_counters$read_counters_23__read;
      12'd24: x__h5576 = perf_counters$read_counters_24__read;
      12'd25: x__h5576 = perf_counters$read_counters_25__read;
      12'd26: x__h5576 = perf_counters$read_counters_26__read;
      12'd27: x__h5576 = perf_counters$read_counters_27__read;
      12'd28: x__h5576 = perf_counters$read_counters_28__read;
      default: x__h5576 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h7654 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h7654)
      12'd0: x__h7987 = perf_counters$read_counters_0__read;
      12'd1: x__h7987 = perf_counters$read_counters_1__read;
      12'd2: x__h7987 = perf_counters$read_counters_2__read;
      12'd3: x__h7987 = perf_counters$read_counters_3__read;
      12'd4: x__h7987 = perf_counters$read_counters_4__read;
      12'd5: x__h7987 = perf_counters$read_counters_5__read;
      12'd6: x__h7987 = perf_counters$read_counters_6__read;
      12'd7: x__h7987 = perf_counters$read_counters_7__read;
      12'd8: x__h7987 = perf_counters$read_counters_8__read;
      12'd9: x__h7987 = perf_counters$read_counters_9__read;
      12'd10: x__h7987 = perf_counters$read_counters_10__read;
      12'd11: x__h7987 = perf_counters$read_counters_11__read;
      12'd12: x__h7987 = perf_counters$read_counters_12__read;
      12'd13: x__h7987 = perf_counters$read_counters_13__read;
      12'd14: x__h7987 = perf_counters$read_counters_14__read;
      12'd15: x__h7987 = perf_counters$read_counters_15__read;
      12'd16: x__h7987 = perf_counters$read_counters_16__read;
      12'd17: x__h7987 = perf_counters$read_counters_17__read;
      12'd18: x__h7987 = perf_counters$read_counters_18__read;
      12'd19: x__h7987 = perf_counters$read_counters_19__read;
      12'd20: x__h7987 = perf_counters$read_counters_20__read;
      12'd21: x__h7987 = perf_counters$read_counters_21__read;
      12'd22: x__h7987 = perf_counters$read_counters_22__read;
      12'd23: x__h7987 = perf_counters$read_counters_23__read;
      12'd24: x__h7987 = perf_counters$read_counters_24__read;
      12'd25: x__h7987 = perf_counters$read_counters_25__read;
      12'd26: x__h7987 = perf_counters$read_counters_26__read;
      12'd27: x__h7987 = perf_counters$read_counters_27__read;
      12'd28: x__h7987 = perf_counters$read_counters_28__read;
      default: x__h7987 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h7700 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h7700)
      12'd0: x__h8087 = perf_counters$read_counters_0__read;
      12'd1: x__h8087 = perf_counters$read_counters_1__read;
      12'd2: x__h8087 = perf_counters$read_counters_2__read;
      12'd3: x__h8087 = perf_counters$read_counters_3__read;
      12'd4: x__h8087 = perf_counters$read_counters_4__read;
      12'd5: x__h8087 = perf_counters$read_counters_5__read;
      12'd6: x__h8087 = perf_counters$read_counters_6__read;
      12'd7: x__h8087 = perf_counters$read_counters_7__read;
      12'd8: x__h8087 = perf_counters$read_counters_8__read;
      12'd9: x__h8087 = perf_counters$read_counters_9__read;
      12'd10: x__h8087 = perf_counters$read_counters_10__read;
      12'd11: x__h8087 = perf_counters$read_counters_11__read;
      12'd12: x__h8087 = perf_counters$read_counters_12__read;
      12'd13: x__h8087 = perf_counters$read_counters_13__read;
      12'd14: x__h8087 = perf_counters$read_counters_14__read;
      12'd15: x__h8087 = perf_counters$read_counters_15__read;
      12'd16: x__h8087 = perf_counters$read_counters_16__read;
      12'd17: x__h8087 = perf_counters$read_counters_17__read;
      12'd18: x__h8087 = perf_counters$read_counters_18__read;
      12'd19: x__h8087 = perf_counters$read_counters_19__read;
      12'd20: x__h8087 = perf_counters$read_counters_20__read;
      12'd21: x__h8087 = perf_counters$read_counters_21__read;
      12'd22: x__h8087 = perf_counters$read_counters_22__read;
      12'd23: x__h8087 = perf_counters$read_counters_23__read;
      12'd24: x__h8087 = perf_counters$read_counters_24__read;
      12'd25: x__h8087 = perf_counters$read_counters_25__read;
      12'd26: x__h8087 = perf_counters$read_counters_26__read;
      12'd27: x__h8087 = perf_counters$read_counters_27__read;
      12'd28: x__h8087 = perf_counters$read_counters_28__read;
      default: x__h8087 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h9084 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h9084)
      12'd0: x__h9471 = perf_counters$read_counters_0__read;
      12'd1: x__h9471 = perf_counters$read_counters_1__read;
      12'd2: x__h9471 = perf_counters$read_counters_2__read;
      12'd3: x__h9471 = perf_counters$read_counters_3__read;
      12'd4: x__h9471 = perf_counters$read_counters_4__read;
      12'd5: x__h9471 = perf_counters$read_counters_5__read;
      12'd6: x__h9471 = perf_counters$read_counters_6__read;
      12'd7: x__h9471 = perf_counters$read_counters_7__read;
      12'd8: x__h9471 = perf_counters$read_counters_8__read;
      12'd9: x__h9471 = perf_counters$read_counters_9__read;
      12'd10: x__h9471 = perf_counters$read_counters_10__read;
      12'd11: x__h9471 = perf_counters$read_counters_11__read;
      12'd12: x__h9471 = perf_counters$read_counters_12__read;
      12'd13: x__h9471 = perf_counters$read_counters_13__read;
      12'd14: x__h9471 = perf_counters$read_counters_14__read;
      12'd15: x__h9471 = perf_counters$read_counters_15__read;
      12'd16: x__h9471 = perf_counters$read_counters_16__read;
      12'd17: x__h9471 = perf_counters$read_counters_17__read;
      12'd18: x__h9471 = perf_counters$read_counters_18__read;
      12'd19: x__h9471 = perf_counters$read_counters_19__read;
      12'd20: x__h9471 = perf_counters$read_counters_20__read;
      12'd21: x__h9471 = perf_counters$read_counters_21__read;
      12'd22: x__h9471 = perf_counters$read_counters_22__read;
      12'd23: x__h9471 = perf_counters$read_counters_23__read;
      12'd24: x__h9471 = perf_counters$read_counters_24__read;
      12'd25: x__h9471 = perf_counters$read_counters_25__read;
      12'd26: x__h9471 = perf_counters$read_counters_26__read;
      12'd27: x__h9471 = perf_counters$read_counters_27__read;
      12'd28: x__h9471 = perf_counters$read_counters_28__read;
      default: x__h9471 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h4015 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h4015)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d163 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h4061 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h4061)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d173 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h7677 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h7677)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d434 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h7723 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h7723)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d444 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h9061 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h9061)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d602 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(idx__h9107 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h9107)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d612 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(x__h9913 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (x__h9913)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d673 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(x__h10019 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (x__h10019)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__2_ETC___d676 =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  mav_scr_write_cap or capUnpacked_capFat_addrBits__h15681)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5 =
	      mav_scr_write_cap[47:40];
      5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5 =
	      capUnpacked_capFat_addrBits__h15681;
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5 = 8'd0;
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6 =
	      mav_scr_write_cap[27];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6 =
		   mav_scr_write_scr_addr == 5'd30 && mav_scr_write_cap[27];
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7 =
	      mav_scr_write_cap[26:23];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7 = 4'd15;
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8 =
	      mav_scr_write_cap[22];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8 =
		   mav_scr_write_scr_addr != 5'd30 || mav_scr_write_cap[22];
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 =
	      mav_scr_write_cap[21:0];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 =
		   22'd1720320;
    endcase
  end
  always@(read_csr_csr_addr or
	  rg_dscratch1 or
	  csr_mstatus_rg_mstatus or
	  csr_mie$mv_read or
	  SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245 or
	  rg_mcounteren or
	  perf_counters$read_ctr_inhibit__read or
	  rg_ctr_inhib_ir_cy or
	  rg_mscratch or
	  SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274 or
	  rg_mcause or
	  rg_mtval or
	  csr_mip$mv_read or
	  rg_tselect or
	  rg_tdata1 or
	  rg_tdata2 or
	  rg_tdata3 or
	  rg_dcsr or
	  rg_nmi or
	  rg_dpc or
	  rg_dscratch0 or rg_mcycle or rg_minstret or x__h8317 or rg_mtime)
  begin
    case (read_csr_csr_addr)
      12'h300:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      csr_mstatus_rg_mstatus;
      12'h301:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      32'd1074794757;
      12'h304:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      csr_mie$mv_read;
      12'h305:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      { SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[31:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[0] };
      12'h306:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mcounteren;
      12'h320:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      { perf_counters$read_ctr_inhibit__read,
		rg_ctr_inhib_ir_cy[1],
		1'd0,
		rg_ctr_inhib_ir_cy[0] };
      12'h340:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mscratch;
      12'h341:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274;
      12'h342:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      { rg_mcause[6], 25'd0, rg_mcause[5:0] };
      12'h343:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mtval;
      12'h344:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      csr_mip$mv_read;
      12'h7A0:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_tselect;
      12'h7A1:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_tdata1;
      12'h7A2:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_tdata2;
      12'h7A3:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_tdata3;
      12'h7B0:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      { rg_dcsr[31:4], rg_nmi, rg_dcsr[2:0] };
      12'h7B1:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 = rg_dpc;
      12'h7B2:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_dscratch0;
      12'hB00, 12'hC00:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mcycle[31:0];
      12'hB02, 12'hC02:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_minstret[31:0];
      12'hB80, 12'hC80:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mcycle[63:32];
      12'hB82, 12'hC82:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_minstret[63:32];
      12'hBC0:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      { 16'd0, x__h8317 };
      12'hC01:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mtime[31:0];
      12'hC81:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
	      rg_mtime[63:32];
      12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 = 32'd0;
      default: IF_read_csr_csr_addr_EQ_0xC00_4_THEN_rg_mcycle_ETC___d329 =
		   rg_dscratch1;
    endcase
  end
  always@(read_csr_port2_csr_addr or
	  rg_dscratch1 or
	  csr_mstatus_rg_mstatus or
	  csr_mie$mv_read or
	  SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245 or
	  rg_mcounteren or
	  perf_counters$read_ctr_inhibit__read or
	  rg_ctr_inhib_ir_cy or
	  rg_mscratch or
	  SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274 or
	  rg_mcause or
	  rg_mtval or
	  csr_mip$mv_read or
	  rg_tselect or
	  rg_tdata1 or
	  rg_tdata2 or
	  rg_tdata3 or
	  rg_dcsr or
	  rg_nmi or
	  rg_dpc or
	  rg_dscratch0 or rg_mcycle or rg_minstret or x__h8317 or rg_mtime)
  begin
    case (read_csr_port2_csr_addr)
      12'h300:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      csr_mstatus_rg_mstatus;
      12'h301:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      32'd1074794757;
      12'h304:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      csr_mie$mv_read;
      12'h305:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      { SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[31:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[0] };
      12'h306:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mcounteren;
      12'h320:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      { perf_counters$read_ctr_inhibit__read,
		rg_ctr_inhib_ir_cy[1],
		1'd0,
		rg_ctr_inhib_ir_cy[0] };
      12'h340:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mscratch;
      12'h341:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274;
      12'h342:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      { rg_mcause[6], 25'd0, rg_mcause[5:0] };
      12'h343:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mtval;
      12'h344:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      csr_mip$mv_read;
      12'h7A0:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_tselect;
      12'h7A1:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_tdata1;
      12'h7A2:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_tdata2;
      12'h7A3:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_tdata3;
      12'h7B0:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      { rg_dcsr[31:4], rg_nmi, rg_dcsr[2:0] };
      12'h7B1:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 = rg_dpc;
      12'h7B2:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_dscratch0;
      12'hB00, 12'hC00:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mcycle[31:0];
      12'hB02, 12'hC02:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_minstret[31:0];
      12'hB80, 12'hC80:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mcycle[63:32];
      12'hB82, 12'hC82:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_minstret[63:32];
      12'hBC0:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      { 16'd0, x__h8317 };
      12'hC01:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mtime[31:0];
      12'hC81:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
	      rg_mtime[63:32];
      12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 = 32'd0;
      default: IF_read_csr_port2_csr_addr_EQ_0xC00_55_THEN_rg_ETC___d485 =
		   rg_dscratch1;
    endcase
  end
  always@(mav_read_csr_csr_addr or
	  rg_dscratch1 or
	  csr_mstatus_rg_mstatus or
	  csr_mie$mv_read or
	  SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245 or
	  rg_mcounteren or
	  perf_counters$read_ctr_inhibit__read or
	  rg_ctr_inhib_ir_cy or
	  rg_mscratch or
	  SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274 or
	  rg_mcause or
	  rg_mtval or
	  csr_mip$mv_read or
	  rg_tselect or
	  rg_tdata1 or
	  rg_tdata2 or
	  rg_tdata3 or
	  rg_dcsr or
	  rg_nmi or
	  rg_dpc or
	  rg_dscratch0 or rg_mcycle or rg_minstret or x__h8317 or rg_mtime)
  begin
    case (mav_read_csr_csr_addr)
      12'h300:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      csr_mstatus_rg_mstatus;
      12'h301:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      32'd1074794757;
      12'h304:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      csr_mie$mv_read;
      12'h305:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      { SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[31:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[0] };
      12'h306:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mcounteren;
      12'h320:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      { perf_counters$read_ctr_inhibit__read,
		rg_ctr_inhib_ir_cy[1],
		1'd0,
		rg_ctr_inhib_ir_cy[0] };
      12'h340:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mscratch;
      12'h341:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274;
      12'h342:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      { rg_mcause[6], 25'd0, rg_mcause[5:0] };
      12'h343:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mtval;
      12'h344:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      csr_mip$mv_read;
      12'h7A0:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_tselect;
      12'h7A1:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_tdata1;
      12'h7A2:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_tdata2;
      12'h7A3:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_tdata3;
      12'h7B0:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      { rg_dcsr[31:4], rg_nmi, rg_dcsr[2:0] };
      12'h7B1:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 = rg_dpc;
      12'h7B2:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_dscratch0;
      12'hB00, 12'hC00:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mcycle[31:0];
      12'hB02, 12'hC02:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_minstret[31:0];
      12'hB80, 12'hC80:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mcycle[63:32];
      12'hB82, 12'hC82:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_minstret[63:32];
      12'hBC0:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      { 16'd0, x__h8317 };
      12'hC01:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mtime[31:0];
      12'hC81:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
	      rg_mtime[63:32];
      12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 = 32'd0;
      default: IF_mav_read_csr_csr_addr_EQ_0xC00_23_THEN_rg_m_ETC___d653 =
		   rg_dscratch1;
    endcase
  end
  always@(read_scr_scr_addr or rg_mepcc or rg_mtcc or rg_mtdc or rg_mscratchc)
  begin
    case (read_scr_scr_addr)
      5'd28:
	  IF_read_scr_scr_addr_EQ_28_91_THEN_rg_mtcc_22__ETC___d502 = rg_mtcc;
      5'd29:
	  IF_read_scr_scr_addr_EQ_28_91_THEN_rg_mtcc_22__ETC___d502 = rg_mtdc;
      5'd30:
	  IF_read_scr_scr_addr_EQ_28_91_THEN_rg_mtcc_22__ETC___d502 =
	      rg_mscratchc;
      default: IF_read_scr_scr_addr_EQ_28_91_THEN_rg_mtcc_22__ETC___d502 =
		   rg_mepcc;
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  mav_scr_write_cap or
	  SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1116)
  begin
    case (mav_scr_write_scr_addr)
      5'd29:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q10 =
	      mav_scr_write_cap[80];
      5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q10 =
	      SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1116 &&
	      mav_scr_write_cap[80];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q10 =
		   mav_scr_write_scr_addr == 5'd30 && mav_scr_write_cap[80];
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  mav_scr_write_cap or capUnpacked_capFat_address__h15680)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q11 =
	      mav_scr_write_cap[79:48];
      5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q11 =
	      capUnpacked_capFat_address__h15680;
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q11 =
		   32'd0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csr_mstatus_rg_mstatus <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_ctr_inhib_ir_cy <= `BSV_ASSIGNMENT_DELAY 2'd0;
	rg_mcycle <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_mepcc <= `BSV_ASSIGNMENT_DELAY 81'd131743744;
	rg_minstret <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_mscratchc <= `BSV_ASSIGNMENT_DELAY 81'd131743744;
	rg_mtcc <= `BSV_ASSIGNMENT_DELAY 81'd131743744;
	rg_mtdc <= `BSV_ASSIGNMENT_DELAY 81'd131743744;
	rg_mtime <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_nmi <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (csr_mstatus_rg_mstatus$EN)
	  csr_mstatus_rg_mstatus <= `BSV_ASSIGNMENT_DELAY
	      csr_mstatus_rg_mstatus$D_IN;
	if (rg_ctr_inhib_ir_cy$EN)
	  rg_ctr_inhib_ir_cy <= `BSV_ASSIGNMENT_DELAY rg_ctr_inhib_ir_cy$D_IN;
	if (rg_mcycle$EN) rg_mcycle <= `BSV_ASSIGNMENT_DELAY rg_mcycle$D_IN;
	if (rg_mepcc$EN) rg_mepcc <= `BSV_ASSIGNMENT_DELAY rg_mepcc$D_IN;
	if (rg_minstret$EN)
	  rg_minstret <= `BSV_ASSIGNMENT_DELAY rg_minstret$D_IN;
	if (rg_mscratchc$EN)
	  rg_mscratchc <= `BSV_ASSIGNMENT_DELAY rg_mscratchc$D_IN;
	if (rg_mtcc$EN) rg_mtcc <= `BSV_ASSIGNMENT_DELAY rg_mtcc$D_IN;
	if (rg_mtdc$EN) rg_mtdc <= `BSV_ASSIGNMENT_DELAY rg_mtdc$D_IN;
	if (rg_mtime$EN) rg_mtime <= `BSV_ASSIGNMENT_DELAY rg_mtime$D_IN;
	if (rg_nmi$EN) rg_nmi <= `BSV_ASSIGNMENT_DELAY rg_nmi$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
      end
    if (rg_dcsr$EN) rg_dcsr <= `BSV_ASSIGNMENT_DELAY rg_dcsr$D_IN;
    if (rg_dpc$EN) rg_dpc <= `BSV_ASSIGNMENT_DELAY rg_dpc$D_IN;
    if (rg_dscratch0$EN)
      rg_dscratch0 <= `BSV_ASSIGNMENT_DELAY rg_dscratch0$D_IN;
    if (rg_dscratch1$EN)
      rg_dscratch1 <= `BSV_ASSIGNMENT_DELAY rg_dscratch1$D_IN;
    if (rg_mcause$EN) rg_mcause <= `BSV_ASSIGNMENT_DELAY rg_mcause$D_IN;
    if (rg_mccsr$EN) rg_mccsr <= `BSV_ASSIGNMENT_DELAY rg_mccsr$D_IN;
    if (rg_mcounteren$EN)
      rg_mcounteren <= `BSV_ASSIGNMENT_DELAY rg_mcounteren$D_IN;
    if (rg_mscratch$EN) rg_mscratch <= `BSV_ASSIGNMENT_DELAY rg_mscratch$D_IN;
    if (rg_mtval$EN) rg_mtval <= `BSV_ASSIGNMENT_DELAY rg_mtval$D_IN;
    if (rg_nmi_vector$EN)
      rg_nmi_vector <= `BSV_ASSIGNMENT_DELAY rg_nmi_vector$D_IN;
    if (rg_tdata1$EN) rg_tdata1 <= `BSV_ASSIGNMENT_DELAY rg_tdata1$D_IN;
    if (rg_tdata2$EN) rg_tdata2 <= `BSV_ASSIGNMENT_DELAY rg_tdata2$D_IN;
    if (rg_tdata3$EN) rg_tdata3 <= `BSV_ASSIGNMENT_DELAY rg_tdata3$D_IN;
    if (rg_tselect$EN) rg_tselect <= `BSV_ASSIGNMENT_DELAY rg_tselect$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    csr_mstatus_rg_mstatus = 32'hAAAAAAAA;
    rg_ctr_inhib_ir_cy = 2'h2;
    rg_dcsr = 32'hAAAAAAAA;
    rg_dpc = 32'hAAAAAAAA;
    rg_dscratch0 = 32'hAAAAAAAA;
    rg_dscratch1 = 32'hAAAAAAAA;
    rg_mcause = 7'h2A;
    rg_mccsr = 11'h2AA;
    rg_mcounteren = 32'hAAAAAAAA;
    rg_mcycle = 64'hAAAAAAAAAAAAAAAA;
    rg_mepcc = 81'h0AAAAAAAAAAAAAAAAAAAA;
    rg_minstret = 64'hAAAAAAAAAAAAAAAA;
    rg_mscratch = 32'hAAAAAAAA;
    rg_mscratchc = 81'h0AAAAAAAAAAAAAAAAAAAA;
    rg_mtcc = 81'h0AAAAAAAAAAAAAAAAAAAA;
    rg_mtdc = 81'h0AAAAAAAAAAAAAAAAAAAA;
    rg_mtime = 64'hAAAAAAAAAAAAAAAA;
    rg_mtval = 32'hAAAAAAAA;
    rg_nmi = 1'h0;
    rg_nmi_vector = 32'hAAAAAAAA;
    rg_state = 1'h0;
    rg_tdata1 = 32'hAAAAAAAA;
    rg_tdata2 = 32'hAAAAAAAA;
    rg_tdata3 = 32'hAAAAAAAA;
    rg_tselect = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("mstatus = 0x%0h", csr_mstatus_rg_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("mip     = 0x%0h", csr_mip$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("mie     = 0x%0h", csr_mie$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("%0d: CSR_Regfile.csr_trap_actions:", rg_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("    from priv %0d  pc 0x%0h  interrupt %0d  exc_code %0d  xtval 0x%0h",
		 csr_trap_actions_from_priv,
		 x__h17329 | addrLSB__h17318,
		 csr_trap_actions_interrupt,
		 csr_trap_actions_exc_code,
		 csr_trap_actions_xtval);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("    priv %0d: ", 2'b11);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" ip: 0x%0h", csr_mip$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" ie: 0x%0h", csr_mie$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" edeleg: 0x%0h", 29'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" ideleg: 0x%0h", 12'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" cause:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd0)
	$write("USER_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd1)
	$write("SUPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd2)
	$write("HYPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd3)
	$write("MACHINE_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd4)
	$write("USER_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd5)
	$write("SUPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd6)
	$write("HYPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd7)
	$write("MACHINE_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd8)
	$write("USER_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd9)
	$write("SUPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd10)
	$write("HYPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd11)
	$write("MACHINE_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] != 6'd0 &&
	  rg_mcause[5:0] != 6'd1 &&
	  rg_mcause[5:0] != 6'd2 &&
	  rg_mcause[5:0] != 6'd3 &&
	  rg_mcause[5:0] != 6'd4 &&
	  rg_mcause[5:0] != 6'd5 &&
	  rg_mcause[5:0] != 6'd6 &&
	  rg_mcause[5:0] != 6'd7 &&
	  rg_mcause[5:0] != 6'd8 &&
	  rg_mcause[5:0] != 6'd9 &&
	  rg_mcause[5:0] != 6'd10 &&
	  rg_mcause[5:0] != 6'd11)
	$write("unknown interrupt Exc_Code %d", rg_mcause[5:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd0)
	$write("INSTRUCTION_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd1)
	$write("INSTRUCTION_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd2)
	$write("ILLEGAL_INSTRUCTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd3)
	$write("BREAKPOINT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd4)
	$write("LOAD_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd5)
	$write("LOAD_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd6)
	$write("STORE_AMO_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd7)
	$write("STORE_AMO_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd8)
	$write("ECALL_FROM_U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd9)
	$write("ECALL_FROM_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd11)
	$write("ECALL_FROM_M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd12)
	$write("INSTRUCTION_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd13)
	$write("LOAD_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd15)
	$write("STORE_AMO_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] != 6'd0 &&
	  rg_mcause[5:0] != 6'd1 &&
	  rg_mcause[5:0] != 6'd2 &&
	  rg_mcause[5:0] != 6'd3 &&
	  rg_mcause[5:0] != 6'd4 &&
	  rg_mcause[5:0] != 6'd5 &&
	  rg_mcause[5:0] != 6'd6 &&
	  rg_mcause[5:0] != 6'd7 &&
	  rg_mcause[5:0] != 6'd8 &&
	  rg_mcause[5:0] != 6'd9 &&
	  rg_mcause[5:0] != 6'd11 &&
	  rg_mcause[5:0] != 6'd12 &&
	  rg_mcause[5:0] != 6'd13 &&
	  rg_mcause[5:0] != 6'd15)
	$write("unknown trap Exc_Code %d", rg_mcause[5:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" status: 0x%0h", csr_mstatus_rg_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" tvec: 0x%0h",
	       { SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[31:2],
		 1'b0,
		 SEXT__0b0_CONCAT_rg_mtcc_22_BITS_47_TO_40_23_2_ETC___d245[0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" epc: 0x%0h",
	       SEXT__0b0_CONCAT_rg_mepcc_51_BITS_47_TO_40_52__ETC___d274);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" tval: 0x%0h", rg_mtval);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("    Return: new pc 0x%0h  ", _theResult_____2__h19131);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" new mstatus:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("MStatus{", "sd:%0d", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" tsr:%0d", csr_mstatus_rg_mstatus[22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" tw:%0d", csr_mstatus_rg_mstatus[21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" tvm:%0d", csr_mstatus_rg_mstatus[20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" mxr:%0d", csr_mstatus_rg_mstatus[19]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" sum:%0d", csr_mstatus_rg_mstatus[18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" mprv:%0d", csr_mstatus_rg_mstatus[17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" xs:%0d", 2'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" fs:%0d", 2'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" mpp:%0d", mpp__h19246);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" spp:%0d", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" pies:%0d_%0d%0d", csr_mstatus_rg_mstatus[3], 1'd0, 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" ies:%0d_%0d%0d", 1'd0, 1'd0, 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" new xcause:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd0)
	$write("USER_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd1)
	$write("SUPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd2)
	$write("HYPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd3)
	$write("MACHINE_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd4)
	$write("USER_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd5)
	$write("SUPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd6)
	$write("HYPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd7)
	$write("MACHINE_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd8)
	$write("USER_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd9)
	$write("SUPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd10)
	$write("HYPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h19827 == 6'd11)
	$write("MACHINE_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  NOT_csr_trap_actions_nmi_418_AND_csr_trap_acti_ETC___d1496)
	$write("unknown interrupt Exc_Code %d", exc_code__h19827);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd0)
	$write("INSTRUCTION_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd1)
	$write("INSTRUCTION_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd2)
	$write("ILLEGAL_INSTRUCTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd3)
	$write("BREAKPOINT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd4)
	$write("LOAD_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd5)
	$write("LOAD_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd6)
	$write("STORE_AMO_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd7)
	$write("STORE_AMO_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd8)
	$write("ECALL_FROM_U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd9)
	$write("ECALL_FROM_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd11)
	$write("ECALL_FROM_M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd12)
	$write("INSTRUCTION_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd13)
	$write("LOAD_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h19827 == 6'd15)
	$write("STORE_AMO_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  csr_trap_actions_nmi_OR_NOT_csr_trap_actions_i_ETC___d1547)
	$write("unknown trap Exc_Code %d", exc_code__h19827);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" new priv %0d", 2'b11);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions && NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_csr_write &&
	  mav_csr_write_csr_addr_ULT_0xB03_59_OR_NOT_mav_ETC___d988 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("%0d: ERROR: CSR-write addr 0x%0h val 0x%0h not successful",
		 rg_mcycle,
		 mav_csr_write_csr_addr,
		 mav_csr_write_word);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("%0d: ERROR: SCR-write addr 0x%0h val ",
	       rg_mcycle,
	       mav_scr_write_scr_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("valid:%b",
	       mav_scr_write_cap[80],
	       " perms:0x%x",
	       { 19'd0, mav_scr_write_cap[39:28] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" reserved:0x%x", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" format:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  mav_scr_write_cap[22])
	$write("EmbeddedExp");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !mav_scr_write_cap[22])
	$write("Exp0");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" bounds:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("Bounds { ", "exp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("%d", $unsigned(mav_scr_write_cap[21:16]));
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "topBits: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("'h%h", mav_scr_write_cap[15:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "baseBits: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("'h%h", mav_scr_write_cap[7:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" address:0x%x", mav_scr_write_cap[79:48]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" addrBits:0x%x", mav_scr_write_cap[47:40]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" {bot:0x%x top:0x%x len:0x%x offset:0x%x}",
	       mav_scr_write_cap_BITS_79_TO_56_085_AND_167772_ETC___d1090,
	       IF_mav_scr_write_cap_BITS_21_TO_16_027_ULT_25__ETC___d1172,
	       (mav_scr_write_cap[21:16] < 6'd26) ?
		 length__h16634 :
		 33'h1FFFFFFFF,
	       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_47_TO__ETC___d1054);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" (TempFields: {");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("MetaInfo { ", "repBoundTopBits: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("'h%h", repBound__h16859);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "topHi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  mav_scr_write_cap_BITS_15_TO_13_145_ULT_mav_sc_ETC___d1146)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !mav_scr_write_cap_BITS_15_TO_13_145_ULT_mav_sc_ETC___d1146)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "baseHi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  mav_scr_write_cap_BITS_7_TO_5_035_ULT_mav_scr__ETC___d1037)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !mav_scr_write_cap_BITS_7_TO_5_035_ULT_mav_scr__ETC___d1037)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "addrHi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991 &&
	  !mav_scr_write_cap_BITS_47_TO_45_038_ULT_mav_sc_ETC___d1039)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "topCorrection: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("%d", $signed(x__h16920));
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(", ", "baseCorrection: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("%d", $signed(x__h16939), " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write("})");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$write(" not successful", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("%0d: CSR_RegFile: m_external_interrupt_req: %x",
		 rg_mcycle,
		 m_external_interrupt_req_set_not_clear);
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("%0d: CSR_RegFile: s_external_interrupt_req: %x",
		 rg_mcycle,
		 s_external_interrupt_req_set_not_clear);
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("%0d: CSR_RegFile: timer_interrupt_req: %x",
		 rg_mcycle,
		 timer_interrupt_req_set_not_clear);
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_cfg_verbosity_read__89_ULE_1_90___d991)
	$display("%0d: CSR_RegFile: software_interrupt_req: %x",
		 rg_mcycle,
		 software_interrupt_req_set_not_clear);
  end
  // synopsys translate_on
endmodule  // mkCSR_RegFile

